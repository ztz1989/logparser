isLockScreenDisabled HwKeyguardManagerImpl result = false
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:system<*>}
C onScreenOff
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) TCP Msg 659TCP_OK
Caller checkPermission fail
Setting mDismissKeyguard true by win Window{<*> u0 <*><*>.<*>}
msg Loop is running.
shouldBlockLocation  ret:false
P2pEnabledState when=<*> what=<*> arg1=<*> arg2=<*>
L2ConnectedState CMD_ENABLE_RSSI_POLL  rt=<*><*> <*> <*>
wifi_send_command: cmd:'IFNAME=wlan0 DRIVER SETSUSPENDMODE <*>'
AntiMalManager:receive Broadcast ACTION_SCREEN_OFF mOnTimeSum:<*> onTime:<*> isPowerConnected:false
onEntryRemovedInternal:<*>|<*>|<*>|null|<*>, group=<*>|<*>|<*>|null|<*>
huawei_common_set_parameters: exit with code(<*>)
updateLightsLocked,mInCall =true,mScreenOn = true,ledNotification == null?true
updateDimmedActivatedHideSensitive overlap:true
Beacon IEs - hexdump(len=<*>): <*> 0f <*> <*> <*> <*> <*> <*> 2d <*> 6d <*> 6c 6f <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> ...
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
GSC:<*>, GSR:<*>.<*>, RSR:<*>.<*>, RTH:-<*>
DriverStartedState !CMD_SET_SUSPEND_OPT_ENABLED  rt=<*><*> <*> <*>
onReceive intent action = <*>
wifi_send_command: cmd:'IFNAME=wlan0 SIGNAL_POLL'
AnswerPresenter - onUiShowingfalse
Setting HAL interactive mode to false
DialpadFragment mBroadcastReceiver action:<*>
QSEECom_send_cmd return!
onDataActivity: direction=<*>
isWifiScanSpecialChannels is false,mWifiState : <*>
Animating brightness: target=<*>, rate=<*>
receive data len = <*>
handleNotifyScreenTurnedOn
activate called handle:<*> enable:<*>
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
PowerManagerService Waking up from sleep (uid <*>)...
is charging: false
updateSystemUiColorLw window=Window{<*> u0 <*><*>.<*>},EmuiStyle=<*>,StatusBarColor=<*>,NavigationBarColor=<*>, mLastIsEmuiLightStyle=<*>
updateLightsLocked,turn off notificationLight
qsc_decode end
CtrlSocket restoreScrOnStatus
Setting mDismissKeyguard true by win Window{<*> u0 <*><*>.<*>}
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
begin
starting client AuthenticationClient(<*>), initiatedByClient = true)
<*>: sys<*> (No such file or directory)
getTempInfo error: null, <*>
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
CTRL_IFACE monitor sent successfully to <*>\x00
EventCenter Get :<*>
read from oem info: x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*>
wifi_send_command: cmd:'IFNAME=wlan0 DRIVER SETSUSPENDMODE <*>'
RCV <- {<*> <*> Tethering stats list completed}
Animating brightness: target=<*>, rate=<*>
read from oem info: x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*>
set(PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
applyInPlace=true shouldPeek=false alertAgain=true
onScreenTurnedOn()
onFinishedGoingToSleep(<*>)
receive data len = <*>
CTRL_IFACE monitor sent successfully to <*>\x00
random_mix_pool - hexdump(len=<*>): [REMOVED]
wlan0: Control interface command 'BSS RANGE=<*>- MASK=<*>'
wait_finger_down, took <*> ms
new ScenarioAction sPoolSize: <*>
updateDisplayLocked: screenOn=false
[ACC]processReportInd: X: <*>.<*> Y: <*>.<*> Z: <*>.<*>  x_offset:<*>.<*> y_offset:<*>.<*> z_offset:<*>.<*>
AbaSuspend skips CABL deactivate: state was <*>
send: <*>
createLockScreenView when reset
isPhoneAP = false
tcp.conn{<*>} ServiceC.connectedNotify(ServiceC.java:<*>) <*>
platform_set_parameters: enter: - screen_state=off
generateAddAnimation:null, false
Cache monitor msg as screen_off
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
isWifiScanSpecialChannels is false,mWifiState : <*>
IEs - hexdump(len=<*>): <*> <*> 4e <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> <*> <*> <*> 6c <*> <*> <*> 2a <*> <*> 2f <*> <*> <*> <*> 0c <*> <*> ...
WindowOrientationListener disabled
KGSvcCall onFinishedGoingToSleep.
updateTint: tint=<*>
receive data len = <*>
Caller checkPermission fail
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
send data return = <*>
getTempInfo error: null, <*>
InactiveState143466
ContentChange for slot: <*>
mFilterMsgFlag: <*>,msg.arg1: <*>
sendScreenOnEvent enter.
TrafficNotifyAfterLocked:screen notification will not notify
<*>, <*>, <*>, <*>
bssid=<*>:<*>:bc:0b:<*>:<*>;freq=<*>;level=-<*>;flags=<*>;ssid=Huawei-Employee;
setColorTemperatureAccordingToSetting new.
update_calls: cur_state=<*> new_state=<*> vsid=<*>
getCurrentCellid PHONE_TYPE_GSM cellidString = <*>
disable_audio_route: reset and update mixer path: low-latency-playback
getOrInflateState subId:<*>
ServiceStateChanged use pkgName = <*>
onServiceStateChanged, state is <*> <*> voice home data home 中国移动 中国移动 <*> 中国移动 中国移动 <*>  LTE Unknown CSS not supported -<*> -<*> RoamInd=-<*> DefRoamInd=-<*> EmergOnly=false IsDataRoamingFromRegistration=false
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
updateSlider1 seekBarProgress:<*>
fingersense_touch_up() finished
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
random pool - hexdump(len=<*>): [REMOVED]
count:<*>,rx_sum:<*>,tx_sum:<*>,rxBytes:<*>,during_ms:<*>,rx_speed:<*>.<*>,tx_speed:<*>.<*>,rto:<*>.<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
set(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
bssid=<*>:<*>:bc:0b:<*>:<*>;freq=<*>;level=-<*>;flags=<*>;ssid=wlanaccessv2.<*>;
notifyInterfaceClassActivity: client is <*>$InterfaceObserver@<*>
doCheckAccessInternet
onAcquired <*>
<*> binder call <*>
onReceive, action:<*>
[tiger]setBastetFilterInfo action 3pid <*>
CTRL_IFACE monitor sent successfully to <*>\x00
WatchThread{<*>} TcpCirChannel.connect(TcpCirChannel.java:<*>) Connect to server  address = [<*>,]  port = <*>
stopNavigating, mStarted=false
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
Moving to PAUSED: ActivityRecord{<*> u0 <*>/.unihome.UniHomeLauncher t297} (pause complete)
#<*> <*>{<*> V.ED..... ......ID <*>,<*><*>,<*> #<*> app:id<*>}
Excessive delay in setPowerMode(): 227ms
Cache monitor msg as screen_off
[SocketRead_19:<*>:<*><*>]received a msg cmdId:A0(android<*>:-<*>)
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
handleLteCaStatusChange
getTypeIcon type:<*>
CTRL-DEBUG: ctrl_sock-sendmsg: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
getTempInfo error: null, <*>
addFreezeProcess pkg:<*>
Watch Thread{<*>} LoginC.doWatch(LoginC.java:<*>) Login_By_Step-> watch count =  <*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Change the status to [<*>]!
sending broadcast to Pid = <*>, Uid = <*>
StartupResidentService:InnerHandler Message:<*>
remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching
Stop listener network packet!
begin
Beacon IEs - hexdump(len=<*>): <*> 0f <*> <*> <*> <*> <*> <*> 2d <*> 6d <*> 6c 6f <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> 0d <*> <*> ...
<*>:<*>:bc:0a:f1:<*> freq=<*> qual=<*> noise=-<*>~ level=-<*> snr=<*> flags=<*> age=<*> est=<*>
Add randomness: count=<*> entropy=<*>
bssid=<*>:<*>:bc:0a:f1:<*>;freq=<*>;level=-<*>;flags=<*>;ssid=Huawei-Employee;
screen off: 15m16s, awake: 32s wakeups: <*>, battery changed: <*>
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) connecting max 30000ms to <*>:<*>
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u0 <*>}: prev had <*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
gettimer:interval=<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
random_mix_pool - hexdump(len=<*>): [REMOVED]
updateSlider2 seekBarProgress:<*>
mAccessWebStatus : rx = <*>, tx = <*>
get AllImpl object = <*>@<*>
check blur style for HwPhoneWindow-, themeResId : <*>, context : <*>@<*>, Nhwext : <*>, get Blur : disable with , null
onChange selfChange:false uri.toString():content:/<*> mIsObserveAutoBrightnessChange:true
this device does not have NFC support
<*>|REPORT : <*> <*> <*> <*>
<*>|compensate received
onStepCounterChange stepsNum:<*>
send_cmd_kernel: cmd=<*>
act:<*>  flag:<*> FLAG_IS_FIRST_POWER_OFF_ALARM=false <*>=<*>
nl80211: Event message available
MSG_RETURN_AP_CURRY_RSSI rssi = -<*>
queryRtt: rtt_type = <*>
mIntentReceiver begin
resetMonitorStatus
Changed PNO state from true to false
release: release wake and wifi lock!
JIT profile information will not be recorded: profile file does not exits.
WPS: attr type=<*> len=<*>
[RouteService.onDestroy]
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
wlan0: Control interface command 'GET_NETWORK <*> password'
wpas_start_assoc_cb, <*>
action:<*>, mPermissionType:<*>
Get IpAssignment (nid: <*>, SSID: "Huawei-Employee") IpAssignment: DHCP
wlan0: Re-association to the same ESS
Create obj success use class <*>
updateWifiState: intent=act:<*>  flag:<*> newRssi=-<*>
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
orderd foreground broadcast:(BroadcastRecord{<*> u<*> <*>}) should be proxyed, target:(ResolveInfo{<*> <*>/.<*> p=<*> m=<*> euid=<*>})
<*>:<*>:bc:0b:1e:<*> freq=<*> qual=<*> noise=-<*>~ level=-<*> snr=<*> flags=<*> age=<*> est=<*>
p2p0: Updating scan results from sibling
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
CTRL_IFACE: value - hexdump(len=<*>): [REMOVED]
CTRL_IFACE: Failed to get network variable 'user_cert_file'
get AllImpl object = <*>@<*>
EAP: EAP entering state RECEIVED
RTT[-<*>]=<*>, volume=<*>
updateVisibility parent class:class <*>
ObtainingIpState CMD_IP_CONFIGURATION_SUCCESSFUL  rt=<*><*> <*> <*>
loss[-<*>]=<*>%, volume=<*>
pool<*>-thread<*>{<*>} BaseBroadcast.sendBroadcast(BaseBroadcast.java:<*>) no receiver for action#<*>
CallObjectMethod strat
Good NetWork Traffic , so mOnAppSuckTime, mUnModifyCount reset <*>
at <*>(FileUtils.java:<*>)
CTRL_IFACE monitor sent successfully to <*>\x00
RTT[-<*>]=<*>, volume=<*>
RTT[-<*>]=<*>, volume=<*>
WPA: PMK from EAPOL state machines - hexdump(len=<*>): [REMOVED]
nl80211: Associated with <*>:<*>:<*>:1f:f0:<*>
RCV unsolicited event from native daemon, event = <*> Iface linkstate wlan0 up
RTT[-<*>]=<*>, volume=<*>
WifiMonitor:wlan0 cnt=<*> dispatchEvent: WPA: Group rekeying completed with <*>:<*>:<*>:1f:f0:<*> [GTK=CCMP]
notifyInterfaceClassActivity: client is <*>$<*>@<*>
RTT[-<*>]=<*>, volume=<*>
notificateNetAccessChange no_internet = false
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
DefaultState{ when=<*> what=<*> target=<*>$SmHandler }
send: <*>
<*>|after compensate: cache step_4599
Create obj success use class <*>
Create obj success use class <*>
Unrecognized alarm listener <*>$<*>@<*>
Release wakeLock now
send data return = <*>
ambient lux=<*>.<*>,timeStamp =<*>
<*>|getTodayTotalSteps <*>
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
getTempInfo error: null, <*>
fingerprint capture completed
completedResumed: ActivityRecord{<*> u0 <*>/.unihome.UniHomeLauncher t297}, launchTrack: outofsleep resumeTopComplete
MODE_TRANSLUCENT -> MODE_TRANSPARENT animate=false
setAlarmsPending ...
nl80211: Scan included frequencies: <*> <*> <*>
CTRL-DEBUG: ctrl_sock-sendmsg: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
m1: false
random_mix_pool - hexdump(len=<*>): [REMOVED]
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
==connectedConfig&mSelectedConfig are null, backgroundReason = <*>
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
c: true, w: true, t: false, l: false
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=true
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) connected
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
<*>|getTodayTotalSteps <*>
updateDimmedActivatedHideSensitive overlap:false
Enqueueing ordered broadcast[bgkeyapp] BroadcastRecord{<*> u0 <*>}: prev had <*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
Unfinished business...
ContentChange for slot: <*>
updateSlider2 seekBarProgress:<*>
<*>|before compensate: cache step_5676
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
Create obj success use class <*>
updateNotification(StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)))
action:<*>, mPermissionType:<*>
action:<*>, mPermissionType:<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
updateNotificationShade
Client requesting input be hidden, pid=<*>
updateTint: tint=<*>
Client requesting input be hidden, pid=<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
<*>|getTodayTotalSteps <*>
action:<*>, mPermissionType:<*>
onStepCounterChange stepsNum:<*>
action:<*>, mPermissionType:<*>
onStepCounterChange stepsNum:<*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
updateNotificationShade
onEntryUpdated:<*>|<*>|<*>|null|<*>
Client requesting input be hidden, pid=<*>
ContentChange for slot: <*>
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, metaState=<*>, flags=<*>, hwFlags=<*>, repeatCount=<*>, eventTime=<*>, downTime=<*>, deviceId=-<*>, source=<*> }
getCurrentWeatherInfo currentTemperature is :<*>.<*> mWeatherIcon Id is: <*>
shouldBlockLocation running ...
at <*>(ZygoteInit.java:<*>)
showNotificationAll
getTempInfo error: null, <*>
updateTint: tint=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
at <*>$UEventThread.run(UEventObserver.java:<*>)
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
transferRemoteInputFocus: <*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:libcSeekFile => fseek[<*>]:[-<*>][<*>][<*>]
release:lock=<*>, flg=<*>, tag="hibernation", name=<*>", ws=null, uid=<*>, pid=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Clear bypass session table: [<*>], bitsmask [<*>]
notifyInterfaceClassActivity: client is <*>@<*>
at <*>(Native Method)
batch called handle:<*> sample_ns:<*> latency_ns:<*>
getTimeTickInfo:[mMillisUntilFinished:<*>, mHour:<*>, mMinute:<*>, mSecond:<*>]
CollectorManager--isCollectorEnabled--getBoolean: false
onStartedWakingUp
InitialState CMD_SCREEN_STATE_CHANGED  rt=<*><*> <*> <*>
perform running actions!
msg.recv{<*>} XmlMsg.decodeBuf(XmlMsg.java:<*>) RECV <*> bytes [<*>]_00_03_02_05_01_04_81_CD_10_54_E9_F0 cmdCode(CC_PCheckVersion.<*>)msgType(MT_ACK.<*>)msgClass(MC_Push.<*>)sender(ST_Mobile.<*>)crypted(false)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
HwLocationManager:startLocation
receive data len = <*>
qsc_decode end
updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?false
qsc_decode end
onChange selfChange:false uri.toString():content:/<*> mIsObserveAutoBrightnessChange:true
disableEffects=null canInterrupt=false once update: false
updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?false
Transact:setSystemUIColor to status bar service
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
setCurrentPicture to <*>
onReceive:screen off
ExtraTrafficSetting:result is empty
No peeking: not in use: <*>|<*>|<*>|null|<*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
set notification panel padding = <*>
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
<*>| ## MSG_DEAL_SYSTEM_EVENT <*>
onShowStatusChange show:false
<*>|onStandStepChanged <*>
onAcquired <*>
showNotificationAll
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:WriteSdkGroupItem: hash has same item[HW_W3_MDM_PASSWORD]
fingersense_classify_touch() finished
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
mSendService start
notifyInterfaceClassActivity: client is <*>$<*>@<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
getOrInflateState subId:<*>
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
Animating brightness: target=<*>, rate=<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
ImsSenderRxr : [UNSL]< UNSOL_SSAC_CHANGED <*>$SsacInfo@<*>[SUB0]
Calling fingersense_classify_touch()
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
No peeking: unimportant notification: <*>|<*>|<*>|null|<*>
update()   updated:  <*>
action:<*>, mPermissionType:<*>
m1: false
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
is3GCalling is false,mCdmaSlot is -<*>
frozenCheckLocked mDispatchFrozen=<*> mNextUnblockedEvent=<*>
fingersense_touch_up() finished
Change to single clock mode!
<*>|getTodayTotalSteps <*>
adev_set_parameters: enter: screen_state=off
closeQs
Error reading charge file
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*>|getTodayTotalSteps <*>
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
getOrInflateState subId:<*>
m1: false
<*>|getTodayTotalSteps <*>
RCV unsolicited event from native daemon, event = <*> IfaceClass active <*> <*> <*>
<*>|getTodayTotalSteps <*>
Handle message: <*>
<*>|compensate received
onShowStatusChange show:false
at <*>(Native Method)
sending broadcast to Pid = <*>, Uid = <*>
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
isCardAbsent slot:<*> slotState:<*>
isCurrentBySim()=false
BadgeContentObserver  getBadgeNumber: <*> mComponentName :ComponentInfo{<*><*>.<*>}
handleLteCaStatusChange
<*>|before compensate: cache step_6685
showNotificationAll
isMusicActive...
at <*>$UEventThread.run(UEventObserver.java:<*>)
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
at <*>$UEventThread.run(UEventObserver.java:<*>)
removeNotificationChildren
at <*>$<*>.onUEvent(UsbDeviceManager.java:<*>)
there are no wakeup alarms and the screen is off, we can delay what we have so far until the future
action:<*>, mPermissionType:<*>
csr
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FileSec: have right to open file due to cur app sec level = <*> is higher than file app() sec level = <*>.
AutoStartupDataMgr:isUnderControll third party not in whitelist: <*>
LeisureTrafficSetting:result is empty
begin of formatChinaDateRange chinaDate:晚上<*>:<*>
release:lock=<*>, flg=<*>, tag="hibernation", name=<*>", ws=null, uid=<*>, pid=<*>
msg.recv{<*>} XmlMsg.decodeBuf(XmlMsg.java:<*>) RECV <*> bytes [<*>]_00_03_02_07_01_05_87_BB_14_CB_47_C8 cmdCode(CC_ExtendRequest.<*>)msgType(MT_ACK.<*>)msgClass(MC_JsonExtend.<*>)sender(ST_Mobile.<*>)crypted(true)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
stopMotionAppsReco motionApps: <*>
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
interceptKeyTq keycode=<*> interactive=true keyguardActive=false policyFlags=<*> down false canceled false
isSpeakerphoneOn...
send_cmd_kernel: cmd=<*>
fingersense_classify_touch() finished
[qiyi_LOG_INFO Utility] isQiyiPackage PackageName:<*>
HCDN_LOG: [<*><*>:<*>:<*>:<*>]:LoadMaxBlockCount                                                                : DB[<*>], Enter Func
HCDN_LOG: [<*><*>:<*>:<*>:<*>]:HttpDownFile,<*>     request_url[http:/<*>.<*><*>.f4v]
CPU part	: <*>
Method exceeds compiler instruction limit: <*> in int <*>(int, int)
HCDN_LOG: [<*><*>:<*>:<*>:<*>]:ScheduleFunc,<*>    if_modified_since=
[qiyi_LOG_INFO Utility] isQiyiPackage PackageName:<*>
<*>()<-<*>> : getAndroidIdV2 memory:<*>
<*>()<-<*>> : writeQiyiId # <*>
[qiyi_LOG_INFO MainHandlerHelper] 初始化离线对话框
ActivityThread,attachApplication
[qiyi_LOG_INFO My PaoPao] <*>
[qiyi_LOG_INFO MessageDeliver] qosDragonDeliver:false
getOrInflateState subId:<*>
rmt_storage_connect_cb: clnt_h=<*> conn_h=<*>
[qiyi_LOG_INFO registerBroadcast] registerBroadcast true <*>
<*>()<-<*>> : checkDownloadObj>> 检查下载对象 mIsSingleAlbum:false ignoreRC:false
<*>()<-<*>> : createPlayTask() playType = BIGCORE_LOCAL
[qiyi_LOG_INFO PlayerLogic] revisePlayIndexForEpisode +tid=null  aid=null
action:<*>, mPermissionType:<*>
[qiyi_LOG_INFO Utility] isQiyiPackage PackageName:<*>
New app record ProcessRecord{<*> <*>:<*><*>} thread=<*>@<*> pid=<*> procname=<*>
Calling a method in the system process without a qualified user: <*>:<*> <*>:<*> <*>:<*> <*>.<init>:<*> <*>:<*>
Change to single clock mode!
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
mVSimCurCardType is -<*>
t:false, fl: false, p: <*>, ce: true, we: false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
need to force refresh view
iqiyi message: create--runOnSubprocess isProcessExist true
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
Response ID <*> is not served in this process.
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*>()<-<*>> : current progress: progress= <*>
Couldn't create directory for SharedPreferences file <*>.android.settings<*>.xml
getOrInflateState subId:<*>
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
RCV <- {<*> IfaceClass idle <*> <*>}
onLayout:left=<*>, top=<*>, right=<*>, bottom=<*>, offset=<*>
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
<*>()<-<*>> : 当前时间<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
<*>()<-<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*>
csr
onReceive: action = <*>
isCardAbsent slot:<*> slotState:<*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
<*>()<-<*>> : current progress: progress= <*>
GetAddrInfoHandler addr: <*> {<*>, <*>, <*>} <*>
iqiyi message: ==== isProcesssExist: stat=<*>, errno=<*>
mVSimCurCardType is -<*>
mIsScreenOn is: true, WAKEUP alarm trigger action = <*> package name is: android
getOrInflateState subId:<*>
WatchThread{<*>} TcpClientThread.disconnectSocket(TcpClientThread.java:<*>) disconnecting to <*>:<*>
getTempInfo error: null, <*>
c: true, w: false, t: false, l: false
iqiyi message: create--runOnSubprocess isProcessExist true
<*>()<-<*>> : checkVoteShowTime--hideVoteView
<*>()<-<*>> : current progress: progress= <*>
getTempInfo error: null, <*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
<*>()<-<*>> : current progress: progress= <*>
action:<*>, mPermissionType:<*>
remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching
c: true, w: false, t: false, l: false
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false
isCardAbsent slot:<*> slotState:<*>
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
is3GCalling is false,mCdmaSlot is -<*>
isCurrentBySim()=false
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
getOrInflateState subId:<*>
Received kernel message payload: event <*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
<*>()<-<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*>
getOrInflateState subId:<*>
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Succeed to get user info
isCurrentBySim()=false
csr
mVSimCurCardType is -<*>
isCurrentBySim()=false
onSignal: mSubId=<*>,currDataSubID=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
Application <*> is im app and connected ok, delay to H!
Model  onReceive intent=Intent { act=<*> flg=<*> (has extras) }
<*>()<-<*>> : checkVoteShowTime--><*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
c: true, w: false, t: false, l: false
c: true, w: false, t: false, l: false
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:WriteSdkGroupItem: hash has same item[HW_W3_MDM_PASSWORD]
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
received cell-signal:<*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
isCurrentBySim()=false
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:end of list
LoginThread{<*>} LoginC.doLoginByStep(LoginC.java:<*>) Login_By_Step-> at Connected
NewEspaceMessageContentObserver  getNewEspaceMessageCount: <*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
getTempInfo error: null, <*>
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
AwareAppMngSort: <*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
onSignal: mSubId=<*>,currDataSubID=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
QOS_level:<*>(<*>),use RTTLvl:<*>;RATLvl:<*>
ImsSenderRxr : [UNSL]< UNSOL_SSAC_CHANGED <*>$SsacInfo@<*>[SUB0]
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
isCurrentBySim()=false
c: true, w: false, t: false, l: false
onSignal: mSubId=<*>,currDataSubID=<*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
LoginThread{<*>} LoginC.doLoginByStep(LoginC.java:<*>) Login_By_Step-> at BeginConnect
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
######### CMD_QUERY_PKTS ########
at <*>(Unknown Source)
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
getTempInfo error: null, <*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:AnyOffice_IsTunnelAvailable: Begin to detect if tunnel is avalilable!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:TLSTunnel URL=<*>
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
Report temperature: [ap] temp :<*>  report_threshold:<*>
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
<*>()<-<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
iqiyi message: create--runOnSubprocess isProcessExist true
<*>()<-<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*>
setTracingEnabled:<*>
[main<*>]action is <*>(android<*>:-<*>)
<*>()<-<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*>
RCV <- {<*> IfaceClass idle <*> <*>}
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*>()<-<*>> : 当前时间<*>
######### CMD_QUERY_PKTS ########
<*>()<-<*>> : 广告模块 重置广告数据
[qiyi_LOG_INFO QiyiDownloadManager] ACTION_DOWNLOAD_GET_OBJECT_FROM_CACHE
<*>()<-<*>> : 获取当前播放状态 ：mCurrentPlayerStatus = PLAYING
[qiyi_LOG_INFO DBAdapter] getPingbacks: []
[qiyi_LOG_INFO Utility] isQiyiPackage PackageName:<*>
bindBestPackage for <*> :  found <*>, new best component: ComponentInfo{<*><*>.<*>}
ACTION_PFW_WAKEUP_TIMER
didn't allow me to die, re-running Thread<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
<*>()<-<*>> : 当前时间<*>
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
isCardAbsent slot:<*> slotState:<*>
is3GCalling is false,mCdmaSlot is -<*>
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
iqiyi message: ==== do something  executeCmd isProcessExist true =====
iqiyi message: create--runOnSubprocess isProcessExist true
poll before: g_monitor_fd =<*>
RCV unsolicited event from native daemon, event = <*> IfaceClass active <*> <*> <*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
iqiyi message: ==== isProcesssExist: stat=<*>, errno=<*>
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
<*>()<-<*>> : 当前时间<*>
onSignal: mSubId=<*>,currDataSubID=<*>
m1: false
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
getOrInflateState subId:<*>
mSimSubId:<*> onDataActivity: direction=<*>
formatChinaDateTime, change to China normalTime:晚上<*>:<*>
<*>()<-<*>> : 当前时间<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
<*>()<-<*>> : current progress: progress= <*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
bmp is null : false
no need to reset return
iqiyi message: ==== do something  executeCmd isProcessExist true =====
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
HandlePowerStatistic:notificationShowJudger highWakeUpPkg = false
didn't allow me to die, re-running Thread<*>
<*>()<-<*>> : checkVoteShowTime--><*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
<*>()<-<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*>
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
<*>()<-<*>> : checkVoteShowTime--hideVoteView
isCurrentBySim()=false
didn't allow me to die, re-running Thread<*>
<*>()<-<*>> : checkVoteShowTime--><*>
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
act:<*>  flag:<*> FLAG_IS_FIRST_POWER_OFF_ALARM=false <*>=<*>
RefreshBatteryInfo isBatteryLow: <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
monitor check touch devices
<*>()<-<*>> : current progress: progress= <*>
release:lock=<*>, flg=<*>, tag="RILJ_ACK_WL", name=<*>", ws=null, uid=<*>, pid=<*>
<*>()<-<*>> : checkVoteShowTime--hideVoteView
setTracingEnabled:<*>
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
[SocketRead_21:<*>:<*><*>]read -<*> from inputstream(android<*>:-<*>)
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
release:lock=<*>, flg=<*>, tag="RILJ_ACK_WL", name=<*>", ws=null, uid=<*>, pid=<*>
onSignal: mSubId=<*>,currDataSubID=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
UnreadContentObserver  handle update icon message
isCurrentBySim()=false
mVSimCurCardType is -<*>
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) connecting max 30000ms to <*>:<*>
getOrInflateState subId:<*>
is3GCalling is false,mCdmaSlot is -<*>
<*>()<-<*>> : current progress: progress= <*>
action:<*>, mPermissionType:<*>
onDataActivity: direction=<*>
onDataActivity: direction=<*>
mVSimCurCardType is -<*>
collectReceiverComponents, callerApp: null, intent:<*>, receiver size:<*>, flags: <*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:CMTM_ProcDNSResponseMsg response message!aucURL =<*>
isCurrentBySim()=false
<*>()<-<*>> : checkVoteShowTime--hideVoteView
RCV <- {<*> IfaceClass active <*> <*> <*>}
<*>()<-<*>> : 当前时间<*>
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
iqiyi message: create--runOnSubprocess isProcessExist true
csr
pool<*>-thread<*>{<*>} <*>.doInBackground(TupHelper.java:<*>) UnRegister VOIP enter
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
m1: false
Workspace updateCustomizeShortcuts view invalidate ShortcutInfo(title=eSpace)
isCurrentBySim()=false
<*>()<-<*>> : checkVoteShowTime--><*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
mSimSubId:<*> onDataActivity: direction=<*>
Sending non-protected broadcast <*> from system <*>:<*><*> pkg <*>
isCurrentBySim()=false
m1: false
c: true, w: false, t: false, l: false
<*>()<-<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*>
[qiyi_LOG_INFO DownloadEpisodeAdapter] setUnFinishedText:DownloadObject{albumId='<*>', tvId='<*>', res_type=<*>, _id=<*>, vid='<*>', fileName='203364601_574272000.qsv', downloadFileDir='<*>.qiyi.video<*>/', imgUrl='http:/<*>.qiyipic.com<*>.jpg', text='锦绣未央第<*>集', subTitle='生死相依 不离不弃', DOWNLOAD_KEY='203364601_574272000', downloadWay=<*>, downloadRequestUrl='', displayType=TV_TYPE, fileSize=<*>, progress=<*>.<*>, status=FINISHED, clicked=<*>, videoDuration=<*>, clm='锦绣未央', _a_t='锦绣未央', episode=<*>, year='<*>', playRc=<*>, taskStatus=<*>, mNeedDel=<*>, isDownloadPlay=true, speed=<*>, errorCode='', downloadTime=<*>, _pc=<*>, auto=<*>, cid=<*>, fDownloadRequestUrl='http:/<*>.qiyipic.com<*>.jpg', downloadSource=DOWNLOAD_DEFAULT, f4vJsonUrl='http:/<*>.<*><*>/?src=2_22_222&t=<*>&vf=<*>&vt=<*>', f4vSections=null, svrip='null', segidx='null', accelerate_speed0'}
playingUids:
[qiyi_LOG_INFO DownloadEpisodeAdapter] loadImage
[qiyi_LOG_INFO DownloadEpisodeAdapter] 锦绣未央第<*>集>>showFinishedStatusView
[qiyi_LOG_INFO DownloadEpisodeAdapter] showExceptionStatus
[qiyi_LOG_INFO DownloadEpisodeAdapter] 锦绣未央第<*>集 = 下载完成
delete: Thread<*> tableName: download_tbl deletedNum: <*>
APS: 2DSDR: CanvasContext::setSDRZoomout(), the SDR ratio from ViewRootImpl is -<*>.<*>, native window width = <*>, height = <*>
removeNotificationChildren
<*>()<-<*>> : cachePluginDeliverData : <*> {"num":<*>,"actionId":<*>}
<*>()<-<*>> : getImeiV2 memory:<*>
Transact:setSystemUIColor to status bar service
<*>()<-<*>> : 初始化 zip中的so ：>> so : <*>.qiyi.video<*>.so
<*>.qiyi.video<*>.so,
CPU part	: <*>
CPU revision	: <*>
at <*>(ZygoteInit.java:<*>)
getRemainingChance <*>
finger lost!
no need to reset return
updateAutoBrightness: mScreenAutoBrightness=<*>, newScreenAutoBrightness=<*>
StartupResidentService:InnerHandler Message:<*>
at <*>$UEventThread.run(UEventObserver.java:<*>)
Error reading charge file
<*>|calculateAltitudeWithCache datas.size=<*>
perform hibernation actions!
<*>|getTodayTotalSteps <*>
onStartedWakingUp, seq = <*>
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
mAm.startProcessLocked for service: ServiceRecord{<*> u0 euid: <*> <*><*>.<*>}, appinfo euid: <*>
updateNotificationShade
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
chinaDateTime:晚上<*>:<*>
cleanUpApplicationRecordLocked, pid: <*>, restart: false
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Send udp detect packet ok when login,id:[<*>];count:[<*>]!
media rendering started
<*>|getTodayTotalSteps <*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>
setNetLostEvent
getSlotCardState = MASTER_ONLY
ImsServiceSub : Call Type 2has num updates = <*>
[DisposeLogUploadProgress.dispose] exception:<*>
UiMonitor: packagemName is <*>, className is <*>
setStreamVolume thread=<*>; stream=<*>; value=<*>.<*>
onVolumeChangedW stream = <*>, flags = <*>
platform_set_gsm_mode: enabling gsm mode
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
ConnectionServiceAdapter: setConferenceableConnections: TC@<*>, []
StatusBarNotifier - incalui onStateChange oldState=INCOMINGnewStateINCALL
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*>
PFW.HwPFWAppRestartPolicy:receive action = <*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
disableEffects=null canInterrupt=false once update: false
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
bindServiceLocked, r: ServiceRecord{<*> u0 euid: <*> <*>/.<*>}, euid: <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
fpc poll irq interupt
Animating brightness: target=-<*>, rate=<*>
isMonitorCellId mInfos.size() = <*>
ProximitySensor: <*> is far event,<*> is close event,value = <*>.<*>
cancelNotificationLocked:<*>|<*>|<*>|null|<*>
removeNotificationChildren
presently, hw_update_color_temp_for_rg_led interface not achieved.
isCloneProcess = false
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
showNotificationAll
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
notifyScreenTurnedOn
ambient lux=<*>.<*>,timeStamp =<*>
release:lock=<*>, flg=<*>, tag="WifiSuspend", name=android", ws=null, uid=<*>, pid=<*>
<*>, <*>, <*>, <*>
updateLightsLocked,turn off notificationLight
simCount:<*> phoneState:<*>
mSeekListener onProgressChanged progress:<*> fromUser:false
CtrlSocket restoreScrOnStatus
cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>
NotificationUtil:Month Warning Notification not create
HDebug print the key BSD_phone_lines
updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:<*><*>}, flags: <*>
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
dispatch ordered broadcast [background] BroadcastRecord{<*> u<*> <*>}, has <*> receivers
CalculateTrafficMethod:getAllUidBytesInPeriod start = <*><*><*> <*>:<*>:<*> end = <*><*><*> <*>:<*>:<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=true
Starting a blocking GC AddRemoveAppImageSpace
getSeekBarProgress isAutoMode:true current brightness:<*> percentage:<*>.<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
HwPhoneWindowManager has intercept Key : <*>, isdown : false, flags : <*>
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, metaState=<*>, flags=<*>, hwFlags=<*>, repeatCount=<*>, eventTime=<*>, downTime=<*>, deviceId=-<*>, source=<*> }
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
Handling incoming message: { when=-2ms what=<*> target=<*>$ServiceHandler } = EVENT_QUIT
action:<*>, mPermissionType:<*>
updateTint: tint=<*>
<*>|getTodayTotalSteps <*>
turn off notificationLight due to incall or screenon
updateDimmedActivatedHideSensitive overlap:false
obtain, mHwFlags=<*>
action:<*>, mPermissionType:<*>
suspendAutohide
mSimSubId:<*> onDataActivity: direction=<*>
remian iaware protect apps: [<*>, <*>, <*>]
Transact:getHwAdminCachedListto device policy manager service.
action=<*> queryReplace=false
onEntryAdded:<*>|<*>|<*>|null|<*>, group=<*>|<*>|<*>|null|<*>
at <*>$UEventThread.run(UEventObserver.java:<*>)
at <*>(Native Method)
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
setOverlap mOverlap:true, mDimmed:false
releasing fp wakelock
Permission Denial: broadcasting Intent { act=<*> flg=<*> } from <*> (pid=<*>, uid=<*>) requires <*> due to registered receiver BroadcastFilter{<*> u0 ReceiverList{<*> <*> system<*> local:<*>}}
Get no-perm notification callback <*>
mDateString is: <*>月<*>日星期六
begin
ProximitySensor, enable, <*>: en=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
fingersense_touch_up() finished
interceptKeyBeforeQueueing: key <*> , result : <*>
csr
send data return = <*>
hideTraffic
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:End to proc tunnel status change: result=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*> <*> voice home data home 中国移动 中国移动 <*> 中国移动 中国移动 <*>  GSM Unknown CSS not supported -<*> -<*> RoamInd=-<*> DefRoamInd=-<*> EmergOnly=false IsDataRoamingFromRegistration=false
bindServiceLocked, r: ServiceRecord{<*> u0 euid: <*> <*>/.<*>}, euid: <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
updateNotificationShade
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
updateClipping isOverlap:false
onEntryUpdated:<*>|<*>|<*>|null|<*>
bindServiceLocked, r: ServiceRecord{<*> u0 euid: <*> <*>/.<*>}, euid: <*>
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
getTempInfo error: null, <*>
at <*>(Native Method)
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
channel 'WindowManager (server)' ~ enqueueDispatchEntryLocked: skipping inconsistent motion event
channel 'WindowManager (server)' ~ enqueueDispatchEntryLocked: skipping inconsistent motion event
Create obj success use class <*>
<*>|getTodayTotalSteps <*>
VTCallButtonPresenter - onDetailsChanged callId=Call_12 callState=<*>
getMobileDataEnabled()+ subId=<*>
stopMotionAppsRecoAsUser motionApps: <*>
ImsServiceSubHandler : Message received: what = <*>
ImsServiceSub : Call Type 3has num updates = <*>
<*> <*> voice home data home 中国移动 中国移动 <*> 中国移动 中国移动 <*>  LTE LTE CSS not supported -<*> -<*> RoamInd=-<*> DefRoamInd=-<*> EmergOnly=false IsDataRoamingFromRegistration=false
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:<*><*>}, flags: <*>
setOverlap mOverlap:true, mDimmed:true
<*>|getTodayTotalSteps <*>
<*>|onStandStepChanged <*>
hideTraffic
querySoundEffectsEnabled...
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
onEntryAdded:<*>|<*>|<*>|null|<*>, group=<*>|<*>|<*>|null|<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
<*>|getTodayTotalSteps <*>
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
Handle message: <*>
getCurrentWeatherInfo currentTemperature is :<*>.<*> mWeatherIcon Id is: <*>
<*>|compensate received
Calling fingersense_touch_up()
m1: false
<*>|after compensate: cache step_7984
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
EventCenter Get :<*>
is3GCalling is false,mCdmaSlot is -<*>
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
<*>|before compensate: cache step_8012
<*>|rebuild notification
<*>|MSG_RECORD_DATA_TO_FILE datas.size()=<*>
<*>|getTodayTotalSteps <*>
querySoundEffectsEnabled...
<*>|getTodayTotalSteps <*>
<*>|after compensate: cache step_8097
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
No peeking: not in use: <*>|<*>|<*>|null|<*>
<*>|rebuild notification
updateNotificationShade
action:<*>, mPermissionType:<*>
<*>|getTodayTotalSteps <*>
action:<*>, mPermissionType:<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [START],Mode[ab]
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
msg.recv{<*>} XmlMsg.decodeBuf(XmlMsg.java:<*>) RECV <*> bytes [<*>]_00_03_02_05_01_04_81_FE_3D_E3_01_B8 cmdCode(CC_PCheckVersion.<*>)msgType(MT_ACK.<*>)msgClass(MC_Push.<*>)sender(ST_Mobile.<*>)crypted(false)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
state.clipTopAmount:<*>, i:<*>
handleKeyguardDoneDrawing
AllIdleAppsList  updatePackage : package[<*>] matched activity's size is <*> and data List size is <*>
Launcher.Utilities  unread scaledHeight = <*>;sBigIconSize = <*>
removeNotificationChildren
current is lockout
getTempInfo error: null, <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
Acquiring suspend blocker "PowerManagerService.WakeLocks".
updateDimmedActivatedHideSensitive overlap:false
pkg null calling: <*>, pid: <*> ,type: acquire_provider
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:Tracker: save log,<*>.huawei.espacev2<*>.log
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
getTempInfo error: null, <*>
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
Broadcasting intent ACTION_RAC_CHANGED
Create obj success use class <*>
Releasing suspend blocker "PowerManagerService.WakeLocks".
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
<*>|getTodayTotalSteps <*>
<*>|getTodayTotalSteps <*>
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) get tcp message <*>
handleBatteryUpdate
getTempInfo error: null, <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
tcp.recv{<*>} TcpClientThread.closeSocket(TcpClientThread.java:<*>) closed socket.
action:<*>, mPermissionType:<*>
No peeking: not in use: <*>|<*>|<*>|null|<*>
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
csr
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
action:<*>, mPermissionType:<*>
ImsServiceSub : Call Type 11has num updates = <*>
AutoStartupDataMgr:isUnderControll third party not in whitelist: <*>
getAntPosition Phone success antPos=-<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
QuickResponseUtils: maybeMigrateLegacyQuickResponses() - No local QuickResponses
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
DefaultState !CMD_ENABLE_RSSI_POLL  rt=<*><*> <*> <*>
Skipping, withExcluded: false, tr.intent:Intent { flg=<*> cmp=<*><*>.<*> }
null
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
onStepCounterChange stepsNum:<*>
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:-<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*>
updateNotificationShade
EventCenter Get :<*>
disableEffects=null canInterrupt=false once update: false
rotationForOrientationLw(orient=<*>, last=<*>); user=<*>
<*>|compensate <*> <*>
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:system<*>}, flags: <*>
MyOrientationListener: updateRotation.
batch:sensor(<*>) sample_rate=<*>.999925Hz report_rate_f=<*>.000000Hz curr sample rate:<*>.<*> cur rpt rate:<*> max:<*>.<*> min:<*>.<*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
clearLog2 , restrainFileNum = <*>
[UploadReceiver.onReceive] preNetStatus=-<*>
updateNotificationShade
bindServiceLocked, r: ServiceRecord{<*> u0 euid: <*> <*>/.receiver.RouteService}, euid: <*>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=<*>">
chrDateString:<*>, lastChrWithMdlogTime:<*>
radio srcPath = <*>
handleUserActivityTimeout
remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
readRilMessage: Buffer = [B@<*> HexData = [<*>]
CollectorManager--isCollectorEnabled--getBoolean: false
[CollectStarterReceiver.onReceive] interval is to short:<*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
apply mLp:<*> -> <*>; Height: -<*>; Flag: <*>
updateDimmedActivatedHideSensitive overlap:true
windowsVisibleLocked(): ActivityRecord{<*> u0 <*>/.unihome.UniHomeLauncher t297} idle: true
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
mSeekListener onProgressChanged progress:<*> fromUser:false
APS brightness=<*>.<*>,ConvertToPercentage=<*>.<*>
read Events lux:  <*>.<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
setNetworkOOSCause:  sub = <*>
[RouteService.onDestroy]
have sent: <*>
setStreamVolumeIndex() stream <*>, device <*>, index <*>
Create obj success use class <*>
removeNotificationChildren
disableEffects=null canInterrupt=false once update: false
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
fingersense_touch_up() finished
update_calls: cur_state=<*> new_state=<*> vsid=<*>
platform_check_codec_backend_cfg:<*>: afe: Codec selected backend: <*> updated bit width: <*> and sample rate: <*>
<*> -> AUDIO_SET_SIDETONE_CAL
readEvents:<*>: ProximitySensor: getTimestamp,mPendingEvent.timestamp =<*>
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
updateTint: tint=<*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
back light level before map = <*>
DefaultState{ when=<*> what=<*> target=<*>$SmHandler }
Reading a NULL string not supported here.
action:<*>, mPermissionType:<*>
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch()
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:ReadSdkGroupItem: Succeed in fetching group item[HW_W3_MDM_PASSWORD] share[<*>]
updateNotificationShade
fpc_tac_send_get_indices_cmd indices:<*>, index_count:<*>
action:<*>, mPermissionType:<*>
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
Setting mDismissKeyguard true by win Window{<*> u0 <*><*>.<*>}
updateTint: tint=<*>
at <*>(AbstractPlainSocketImpl.java:<*>)
begin
android send broadcast:<*> notify package: <*>, pid: <*>
not in link monitoring mode, ignore TCP result .
flush,<*>,handle <*>
<*>|rebuild notification
ProximitySensor - ProximitySensor{keybrd=<*>, dpad=<*>, offhook=<*>, hor=<*>, ui=<*>, aud=EARPIECE}
mIntentReceiver begin
cancelNotificationLocked,remove =<*>
read from oem info: data_valid_flag=<*>
shouldBlockLocation running ...
send: <*>
ProximitySensor - Turning on proximity sensor
Incall is gone
Change to single clock mode!
Releasing suspend blocker "PowerManagerService.WakeLocks".
Setting mDismissKeyguard true by win Window{<*> u0 <*><*>.<*>}
PFW.HwPFWService:handle PFW_MSG_SYSTEM
receive data len = <*>
updateNotification(StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)))
starting client AuthenticationClient(<*>), initiatedByClient = true)
<*>, <*>, <*>, <*>
InitialState !CMD_SCREEN_STATE_CHANGED  rt=<*><*> <*> <*>
KGSvcFp stopListeningForFingerprint(). <*>
get_spk_pa_type: pa is max98925
handle_exception_events enter
InCallActivity -  bgCallTwinkingSwitch is true inQuickExiting is false mIsForegroundActivity is false
read from oem info: data_valid_flag=<*>
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
release:lock=<*>, flg=<*>, tag="NetworkStats", name=android", ws=null, uid=<*>, pid=<*>
RCV <- {<*> <*> Tethering stats list completed}
[ACC]processReportInd: X: <*>.<*> Y: <*>.<*> Z: -<*>.<*>  x_offset:<*>.<*> y_offset:<*>.<*> z_offset:<*>.<*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> actions=<*> vis=PRIVATE publicVersion=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE))
set(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
Caller checkPermission fail
wait_finger_down, took <*> ms
begin
LightSensor, enable, <*>: flags=<*>
<*>, <*>, <*>, <*>
handle action thermal policy:<*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:system<*>}
------------startInput--------------
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, useProximitySensor=true, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=-<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=-<*>, userId=<*>
mIntentReceiver begin
CommonMethodUtil:No package name to uid:-<*>
offsetBrightness=<*>.<*>,mOffsetBrightness_last7.<*>,lux=<*>.<*>,mPosBrightness=<*>.<*>,mIsUserChange=false,mDelta=<*>.<*>,defaultBrightness=<*>.<*>,mStartLuxDefaultBrightness=<*>.04mLastLuxDefaultBrightness=<*>.<*>
FingerprintService getEnrolledFingerprints
AntiMalManager:receive Broadcast ACTION_SCREEN_OFF mOnTimeSum:<*> onTime:<*> isPowerConnected:false
WatchThread{<*>} TcpCirChannel.shutdown(TcpCirChannel.java:<*>) Login_By_Step-> shut down now connect
Cache monitor msg as screen_off
Final value: x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*>
StatusBarNotifier - cancelInCall()...
Setting mDismissKeyguard true by win Window{<*> u0 <*><*>.<*>}
tcp.conn{<*>} LoginC.resultNotify(LoginC.java:<*>) Login_By_Step->CONNECT_ERROR
KGSvcCall onStartedWakingUp.
isCloneProcess = false
dispatch ordered broadcast [foreground] BroadcastRecord{<*> u<*> <*>}, has <*> receivers
channel 'WindowManager (server)' ~ enqueueDispatchEntryLocked: skipping inconsistent motion event
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
onSignal: mSubId=<*>,currDataSubID=<*>
Display ready!
StatusBarNotifier - getNotificationBuilder
setColorTemperature:<*>
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
PowerManagerService Waking up from sleep (uid <*>)...
isDisplayFeatureSupported feature:<*>
getCurrentCellid type type = PHONE_TYPE_GSM
readEvents:<*>: ProximitySensor: getTimestamp,mPendingEvent.timestamp =-<*>
qsc_decode end
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
main{<*>} PushService.onStartCommand(PushService.java:<*>) Push Service Start by  userEvent
Create obj success use class <*>
turn off notificationLight due to incall or screenon
AwareMem_EventTracker: [SCREEN_ON_1481983126184] is abandoned for memory low <*> but policy can not execute
fpc_get_authenticator_id id <*>
onScreenTurningOn
Excessive delay in setPowerMode(): 211ms
presently, hw_update_color_temp_for_rg_led interface not achieved.
readEvents:<*>: ProximitySensor: getTimestamp,mPendingEvent.timestamp =-<*>
InitialState CMD_ENABLE_RSSI_POLL  rt=<*><*> <*> <*>
Enable LightSensor at time:mLightSensorEnableTime=<*>,mLightSensorEnableElapsedTimeNanos=<*>
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=true
LightSensor disable, event occur num: <*>
platform_set_parameters: enter: - screen_state=off
tcp.conn{<*>} LoginC.resultNotify(LoginC.java:<*>) Login_By_Step->CONNECT_ERROR
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> <*> <*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
at <*>$UEventThread.run(UEventObserver.java:<*>)
ColorTemperature read from old setting:<*>
Incall is gone
Animating brightness: target=<*>, rate=<*>
updateBarBgColor
Handle message: <*>
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> <*> <*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
setRequest ProviderRequest[OFF]
platform_set_parameters: enter: - screen_state=off
send: <*>
send data return = <*>
updateCallLayout:isBackground=false, isInteractive=true
enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|null|<*>
<*> broadcast notify, H to R!
startDreaming = true
read from oem info: x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*>
onNotificationExpansionChanged called
release:lock=<*>, flg=<*>, tag="ActivityManager-Sleep", name=android", ws=null, uid=<*>, pid=<*>
begin of formatChinaDateRange chinaDate:晚上<*>:<*>
QSEECom_send_cmd return!
QSEECom_send_cmd return!
isWiredHeadsetOn...
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch()
Change to single clock mode!
QSEECom_send_cmd return!
startAuthentication(<*>)
isSimPinSecure mSimDatas is null or empty
VideoPauseController: - VideoPauseController:onResume. Ignoring...
restoreBackgroundColor:new=<*>, old=<*>
<*>, <*>, <*>, <*>
receive data len = <*>
turn off notificationLight due to incall or screenon
mIsScreenOn is: false, WAKEUP alarm talarm.operation == null,package name is: android listenerTag is: DeviceIdleController.light creator uid is: <*>
Failure getting entry for <*> (t=<*> e=<*>) (error -<*>)
updateLightsLocked,mInCall =true,mScreenOn = true,ledNotification == null?true
RetryTaskController:Screen is off or Network is unable
updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>
Error reading charge file
at <*>$UEventThread.run(UEventObserver.java:<*>)
dispatch ordered broadcast [background] BroadcastRecord{<*> u0 <*>}, has <*> receivers
notifyInterfaceClassActivity: client is <*>@<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*>| ## MSG_DEAL_SYSTEM_EVENT <*>
bindServiceLocked, r: ServiceRecord{<*> u0 euid: <*> <*><*>.<*>}, euid: <*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:waiting for useful network..........
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
at <*>$<*>.onUEvent(UsbDeviceManager.java:<*>)
triggerStatsReport: Sat Dec <*> <*>:<*>:<*> GMT<*>:<*> <*>
getRcvData() TimeHdrLevel1 :  <*>
update()   updated:  <*>
at <*>(Looper.java:<*>)
at <*>.<init>(FileInputStream.java:<*>)
capture_image failed -<*>
Apply window Height <*>
Create obj success use class <*>
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
AbaSuspend skips CABL deactivate: state was <*>
cancelAutohide
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:waiting for useful network..........
action:<*>, mPermissionType:<*>
read from oem info: x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*>
isCloneProcess = false
onAcquired <*>
enter into handleScrnOnOffTimeStats, scrnOn = false, mIsPreScrnOn = true, mScrnSwitchTime = <*>, occurTime = <*>, delta = <*>, mScrnOffAccTime = <*>, mScrnOnAccTime = <*>
adev_set_parameters: enter: screen_state=off
MemoryRecoveryDMEPlugin: handle message MSG_MEM_LEAK_CHECK
Got ENABLE response, status = <*>, id = <*>
check dependency pid: <*> is depended by pid: <*>
APS brightness=<*>.<*>,ConvertToPercentage=NaN
updateSlider1 seekBarProgress:<*>
begin
remove pxy wl, pid: <*>, uid: <*> from pxy process list.
msg = <*> received
DisplayPowerStatesetColorFadeLevel: level=<*>.<*>
receive data len = <*>
ignore audio app: <*> stop delta time:<*>
handleProximitySensorEvent positive:true
checkNeedLivenessList:start
setDataEnabled: enabled=false
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
updateLightsLocked,turn off notificationLight
updateLowPowerMode,isPowerSaveMode:falseisInteractive:false
wakelock acquired: <*>, error no: <*>
receive data len = <*>
getMobileDataEnabled()+ subId=<*>
<*>, <*>, <*>, <*>
mActiveIface: rmnet_data0
LightSensor, enable, <*>: mEnabled=<*>
readRilMessage: Buffer = [B@<*> HexData = [<*>]
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
interpolate:mPosBrightness=<*>.0lux=<*>.<*>,mIsReboot=true,mIsUserChange=false,mDelta=<*>.<*>
Dis-Feature : <*>
<*>.
bh1745-light calling driver enable
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, useProximitySensor=true, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=-<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=-<*>, userId=<*>
MemoryRecoveryDMEPlugin: reportScene typeId = <*>
begin
removeProximityView success vp <*>@<*>
TurnOffDCState: true
cancelNotificationWithTag pid <*>,uid = <*>,tag = null,pkg =<*>,id =<*>
VideoCallFragment - onResume
getCurrentCellid type type = PHONE_TYPE_GSM
set brightness to DIM brightness:<*>
GlowPadAnswerFragment - Show answer UI: false
<*>, <*>, <*>, <*>
QSEECom_send_cmd return!
ChargingSpeed  Wattage: -<*> ST: <*> --> <*>
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
getOrInflateState subId:<*>
new ScenarioAction sPoolSize: <*>
action:<*>, mPermissionType:<*>
Client requesting input be hidden, pid=<*>
c: true, w: false, t: false, l: false
Setting mDismissKeyguard true by win Window{<*> u0 <*><*>.<*>}
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
onNotificationExpansionChanged called
PowerManagerNotifier onWakeUp: event=<*>:POWER, reasonUid=<*> opPackageName=android opUid=<*>
RCV <- {<*> <*> Tethering stats list completed}
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
mSimSubId:<*> onDataActivity: direction=<*>
clear buffer data and algo flags
huawei_audio huawei_choose_Handset_device_incall_forHWtest: test Type =<*>
showNotificationAll
begin
setDataEnabled: enabled=true
<*> -> ACDB_CMD_GET_AUDPROC_COMMON_TABLE
enable_snd_device: snd_device(<*>: handset)
<*>| ## MSG_DEAL_SYSTEM_EVENT <*>
enable_audio_route: exit
<*>, <*>, <*>, <*>
action:<*>, mPermissionType:<*>
[ACC]processReportInd: X: <*>.<*> Y: <*>.<*> Z: <*>.<*>  x_offset:<*>.<*> y_offset:<*>.<*> z_offset:<*>.<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
moveTaskToBack, resuming home stack
Failed to open database '<*>.db'.
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Set mode to can partial write! ret:<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [START],Mode[r]
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
fingersense_classify_touch() finished
Calling fingersense_touch_up()
isCurrentBySim()=false
fingersense_touch_up() finished
refresh apps
getTempInfo error: null, <*>
mSimSubId:<*> onDataActivity: direction=<*>
getOrInflateState subId:<*>
postEventFromNative: msg=<*>,arg1=<*>,arg2=<*>
Invalid profile no. <*>, total profiles <*> only
isCurrentBySim()=false
Create obj success use class <*>
overlapAmount:<*>.<*>, previousNotificationEnd:-<*>.<*>, newYTranslation:-<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*>
applyIconTint
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
getTempInfo error: null, <*>
hw fadein is disabled!
setScrollingEnabled: false
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) TCP Msg 659TCP_OK
TencentScanTask:This is hw app, ignore its data, pkg:<*>
isMusicActive...
isWiredHeadsetOn...
t:false, fl: false, p: <*>, ce: true, we: false
getTempInfo error: null, <*>
received cell-signal:<*>
mVSimCurCardType is -<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => [START]: pcFileName [cffb628ad277b3e98d6e9ae9dceca2a7_AnyOfficeSDKMDMResult]
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
instantCollapse
getOrInflateState subId:<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
csr
notifyInterfaceClassActivity: client is <*>$InterfaceObserver@<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
handleTimeUpdate
No config file found for:<*>
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch()
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
onSignal: mSubId=<*>,currDataSubID=<*>
Watch Thread{<*>} LoginC.doWatch(LoginC.java:<*>) Login_By_Step-> watch count =  <*>
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
isMusicActive...
received cell-signal:<*>
onSignal: mSubId=<*>,currDataSubID=<*>
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Switch tunnel mode to [<*>]!
Handle message: <*>
csr
isWiredHeadsetOn...
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Handshake done!
######### CMD_QUERY_PKTS ########
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
onSignal: mSubId=<*>,currDataSubID=<*>
getOrInflateState subId:<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Tunnel is online!
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
at <*>.<init>(FileInputStream.java:<*>)
send: <*>
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
TempThreshold: <*>, Shell: <*>
wifiSleepPolicy:<*>
UnreadContentObserver newUnreadCount:<*>,oldUnreadCount:<*> className :<*>
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
onSignal: mSubId=<*>,currDataSubID=<*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
Launcher.Folder childCount: <*>
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) get tcp message <*>
tcp.conn{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) tcp connection event TCP_CONNECTED
t:false, fl: false, p: <*>, ce: true, we: false
is3GCalling is false,mCdmaSlot is -<*>
isMusicActive...
onSignal: mSubId=<*>,currDataSubID=<*>
postEventFromNative: msg=<*>,arg1=<*>,arg2=<*>
ACTION_BATTERY_CHANGED pluggedType: <*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Detect id is [<*>] when login ,this time!
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
wifiSleepPolicy:<*>
getTempInfo error: null, <*>
<*>|calculateCaloriesWithCache datas.size=<*>
KGSvcCall onScreenTurnedOn.
set notification panel padding = <*>
ImsSenderRxr : [UNSL]< UNSOL_SSAC_CHANGED <*>$SsacInfo@<*>[SUB0]
cancelNotification,index:-<*>
<*>: sys<*> (No such file or directory)
<*> -> send_afe_topology
notifyInterfaceClassActivity: client is <*>$<*>@<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
msg = <*> received
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) TCP Msg 28TCP_OK
getTempInfo error: null, <*>
at d.run(Unknown Source)
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [START],Mode[ab]
handleDreamLocked
getTempInfo error: null, <*>
RemainingTimeSceneHelper:updateTimeSceneData ,deltaRmCapacity= <*>.<*> deltaTimeStamp=<*> timestamp_temp= <*>
isMusicActive...
c: true, w: false, t: false, l: false
getTempInfo error: null, <*>
hideTraffic
m1: false
mThermalService is NULL!
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
msg = <*> received
create: <*>
fpc_tac_send_cmd failed with retval: <*>
showNotificationAll
updateClipping isOverlap:false
create: <*>
send data return = <*>
#<*> <*>{<*> V.ED..... ......ID <*>,<*><*>,<*> #<*> app:id<*>}
getOrInflateState subId:<*>
csr
presently, hw_update_color_temp_for_rg_led interface not achieved.
setCurrentPicture to <*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
action:<*>, mPermissionType:<*>
apply skiped :<*>
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
mSimSubId:<*> onDataActivity: direction=<*>
[Thermal_Hw] temperature_filter: get invalid temperature, use old temp
WatchThread{<*>} TcpCirChannel.shutdown(TcpCirChannel.java:<*>) Login_By_Step-> shut down now connect
Watch Thread{<*>} LoginC.doWatch(LoginC.java:<*>) Login_By_Step-> watch count =  <*>
t:false, fl: false, p: <*>, ce: true, we: false
hideTraffic
apply skiped :<*>
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:system<*>}, flags: <*>
isSimPinSecure mSimDatas is null or empty
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching
sending broadcast to Pid = <*>, Uid = <*>
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
isCardAbsent slot:<*> slotState:<*>
getStatic,count:<*>,work status:false
getOrInflateState subId:<*>
fingersense_classify_touch() finished
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
Multiple rapid taps detecting, aborting Knuckle Gestures.
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
getOrInflateState subId:<*>
getOrInflateState subId:<*>
######### CMD_QUERY_PKTS ########
create: <*>
chinaDateTime:半夜<*>:<*>
action:<*>, mPermissionType:<*>
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
do not support AFT because of no config
Calling fingersense_classify_touch()
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
Display ready!
presently, hw_update_color_temp_for_rg_led interface not achieved.
presently, hw_update_color_temp_for_rg_led interface not achieved.
main{<*>} PushService.onStartCommand(PushService.java:<*>) Push Service Start by  alarmCheck
authenticate by <*> mode!
acquire lock=<*>, flags=<*>, tag="mWakeLockForThread", name=android, ws=null, uid=<*>, pid=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
send data return = <*>
apply mLp:<*> -> <*>; Height: -<*>; Flag: <*>
updateNotificationShade
isSimPinSecure mSimDatas is null or empty
Releasing suspend blocker "PowerManagerService.Broadcasts".
needTrimMemory: trimFrom = <*>, avail = <*>, vmSize = <*>, vssLimit = <*>, totalPss = <*>, pssLimit = <*>, agressiveGrowthLimit = <*>, gentleGrowthLimit = <*>, availablePmThreshold = <*>, availableVmThreshold = <*>
is3GCalling is false,mCdmaSlot is -<*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
mVSimCurCardType is -<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:true isRoaming:false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
RemainingTimeSceneHelper:updateTimeSceneData ,deltaRmCapacity= <*>.<*> deltaTimeStamp=<*> timestamp_temp= <*>
received cell-signal:<*>
tcp.recv{<*>} TcpClientThread.readSocket(TcpClientThread.java:<*>) <<< ERROR(<*>) >>> socket read length failure -<*>
Heartbeat timer.timers{<*>} SimpleThread.onDeath_i(SimpleThread.java:<*>) thread end
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
presently, hw_update_color_temp_for_rg_led interface not achieved.
onNotificationExpansionChanged called
Acquiring suspend blocker "PowerManagerService.WakeLocks".
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*>
onScreenTurnedOn
platform_get_output_snd_device: enter: output devices(<*>) mode <*>, bt_wb_speech_enabled <*>
platform_check_backends_match: snd_device1 = speaker, snd_device2 =
mActiveIface: null
Lib:oem_qmi_cmd: Send to server  passed!!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
receive data len = <*>
getOrInflateState subId:<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [START],Mode[r]
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
getTempInfo error: null, <*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
isCardAbsent slot:<*> slotState:<*>
fingersense_touch_up() finished
ACTIVITY check resid: <*>, size=<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
LoginThread{<*>} LoginThread.cancel(LoginC.java:<*>) Login_By_Step-> thread cancel <*>
Alarm triggering (type <*> or <*>): [Alarm{<*> type <*> when <*> android}]
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
m1: false
platform_set_channel_map: set mapping(<*> <*> <*> <*> <*> <*> <*> <*>) for channel:<*>
csr
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte
isCurrentBySim()=false
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
GetAddrInfoHandler addr: <*> {<*>, <*>, <*>} <*>
isCurrentBySim()=false
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
csr
onSignal: mSubId=<*>,currDataSubID=<*>
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
presently, hw_update_color_temp_for_rg_led interface not achieved.
receive data len = <*>
at <*>(Native Method)
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:<*>:service<*>}, flags: <*>
transitionTo: mode=MODE_TRANSPARENT, animate=false
FingerStat Visible: true; Interactive: false; Switching: false; Bouncer:false; GoingToSleep: false Occluded: false; dreaming: false; Authenticated: false
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) get tcp message <*>
pool<*>-thread<*>{<*>} XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes [<*>]_00_00_00_9C_00_03_01_08_01_05_89_5F_46_77_81_1D cmdCode(CC_QueryRecentSessions.<*>)msgType(MT_ARG.<*>)msgClass(MC_RecentSessions.<*>)sender(ST_Mobile.<*>)crypted(true)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
send_cmd_kernel: cmd=<*>
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
dropped event (cpu0)
<*> -> send_asm_topology
isCloneProcess = false
queryIntentActivitiesAsUser size results:<*>, for package:<*>
shouldBlockLocation running ...
hasFingerprintUnlockTimedOut = true
refreshState=hishare, BooleanState[,icon=ResourceIcon[resId=<*>],label=Huawei Share,labelTint=<*>,textChangedDelay=<*>,contentDescription=Huawei Share,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=<*>,expandedAccessibilityClassName=<*>,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=false]
oldFocusWindow: Window{<*> u0 StatusBar}, currentFocusWindow: null, currentFocusApp: AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>/.ui.LauncherUI t383}}}
######  output <*>
CubicBezierInterpolator  mControlPoint1x = <*>.<*>, mControlPoint1y = <*>.<*>, mControlPoint2x = <*>.<*>, mControlPoint2y = <*>.<*>
updateNotificationShade
dispatch ordered broadcast [background] BroadcastRecord{<*> u0 <*>}, has <*> receivers
acquire lock=<*>, flags=<*>, tag="WifiSuspend", name=android, ws=null, uid=<*>, pid=<*>
send: <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
getOrInflateState subId:<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:idle state change to IDLE
LoginThread{<*>} LoginC.doLoginByStep(LoginC.java:<*>) Login_By_Step-> at BeginConnect
set notification panel padding = <*>
hasFingerprintUnlockTimedOut = true
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
mActiveIface: null
isCardAbsent slot:<*> slotState:<*>
t:false, fl: false, p: <*>, ce: true, we: false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
isCurrentBySim()=false
getOrInflateState subId:<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
Thread<*>{<*>} TcpClient.clearAll(TcpClient.java:<*>) ==================== TCP CLIENT CLEAR ALL ====================
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
presently, hw_update_color_temp_for_rg_led interface not achieved.
loadPic: <*>
Ignore update FP: <*> true
mIsScreenOn is: false, WAKEUP alarm trigger action = <*> package name is: <*>
begin
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
getOrInflateState subId:<*>
getRcvData() TimeCdmaLevel2 :  <*>
the log(event) is exist.
msg = <*> received
m1: false
[Timer rat:<*> level:<*>] suspend
onChangeState mState= <*>, mTargetState = <*>, state = <*>
transitionTo: mode=MODE_TRANSPARENT, animate=false
Finished screen turning on...
Access denied finding property "<*>"
onNotificationExpansionChanged called
Pid:<*> MediaPlayer destructor
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte
showTraffic
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
isCurrentBySim()=false
isCardAbsent slot:<*> slotState:<*>
######### CMD_QUERY_PKTS ########
send_cmd_kernel: cmd=<*>
fingersense_classify_touch() finished
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Calling fingersense_touch_up()
getStatic,count:<*>,work status:false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Sending non-protected broadcast <*> from system <*>:<*><*> pkg <*>
getStreamMaxVolume  treamType: <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
isCurrentBySim()=false
Launcher.LauncherProvider  launcher call - method:setAppBadgeCount arg:null extras:[app_shortcut_custom_id=[shortcut_c3a551c28e1ac387c29ec290c2b278c2aa62c3b1c284c3acc291117ec3adc3b9]][app_shortcut_class_name=<*>][app_badge_count=<*>] uid =<*> pid =<*>
bh1745-light calling driver disable
Acquiring suspend blocker "PowerManagerService.WakeLocks".
isCurrentBySim()=false
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*>:push<*>}, intent:<*>, receiver size:<*>, flags: <*>
onAcquired(<*>)
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
KGSvcFp onAuthenticationHelp. msg:<*>
begin
refreshState=data, BooleanState[,icon=ResourceIcon[resId=<*>],label=移动数据,labelTint=<*>,textChangedDelay=<*>,contentDescription=移动数据,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=<*>,expandedAccessibilityClassName=<*>,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=true]
setOutputDevice() device <*> delayMs <*> force <*>
MemoryRecoveryDMEPlugin: interrupt
stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false
NewEspaceMessageContentObserver  getNewEspaceMessageCount: <*>
removeNotificationChildren
generateAddAnimation:null, false
onDataActivity: direction=<*>
action:<*>, mPermissionType:<*>
dispatch ordered broadcast [background] BroadcastRecord{<*> u0 <*>}, has <*> receivers
I<*> ulp_brain_process_zpp_position_report(const enum loc_sess_status, LocPosTechMask, UlpLocation *), report ZPP position to providers,report_position = <*>
getOrInflateState subId:<*>
fingersense_touch_up() finished
isCurrentBySim()=false
fingersense_classify_touch() finished
mVSimCurCardType is -<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
presently, hw_update_color_temp_for_rg_led interface not achieved.
presently, hw_update_color_temp_for_rg_led interface not achieved.
BatteryIntent received: <*>
getTempInfo error: null, <*>
received cell-signal:<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
load icon id : <*>, pkgName : <*>
LoginThread{<*>} LoginThread.doinLoop(LoginC.java:<*>) Login_By_Step-> Thread is over  true <*>
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch()
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:engine <*>, id = "gmt", name = "GMT engine support"
onAuthenticated(fid=-<*>, gid=<*>)
tcp.recv{<*>} TcpClientThread.readSocket(TcpClientThread.java:<*>) <<< ERROR(<*>) >>> socket read length failure -<*>
obtain, mHwFlags=<*>
action:<*>, mPermissionType:<*>
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
onSignal: mSubId=<*>,currDataSubID=<*>
Fingerprint timeout
c: true, w: false, t: false, l: false
hideTraffic
isWiredHeadsetOn...
notifyInterfaceClassActivity: client is <*>$InterfaceObserver@<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
formatChinaDateTime, change to China normalTime:半夜<*>:<*>
updateDimmedActivatedHideSensitive overlap:false
proc: <*>:PhoneService launch 1times, lastTimes = <*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:AnyOffice_ReconnectTunnel : tunnel is available, do not need to reconnect
Acquiring suspend blocker "PowerManagerService.WakeLocks".
c: true, w: false, t: false, l: false
getTempInfo error: null, <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
[SocketRead_23:<*>:<*><*>]isSupportCtrlSocketV2, ctrlSocket(android<*>:-<*>)
CtrlSocket processCtrlSocket pid = <*> cmd = <*> para = <*>
isCardAbsent slot:<*> slotState:<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:idle state change to BUSY
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
Permission Denial: broadcasting Intent { act=<*> flg=<*> (has extras) } from null (pid=-<*>, uid=-<*>) requires <*> due to registered receiver BroadcastFilter{<*> u0 ReceiverList{<*> <*> <*><*> remote:<*>}}
QOS_level:<*>(<*>),use RAT:4G;signalLvl:<*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
release:lock=<*>, flg=<*>, tag="RILJ_ACK_WL", name=<*>", ws=null, uid=<*>, pid=<*>
Failure getting entry for <*> (t=<*> e=<*>) (error -<*>)
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
isWiredHeadsetOn...
received cell-signal:<*>
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:end of list
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:AnyOffice_ReconnectTunnel : L4VPN in use
Failed to get bastet service
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
main{<*>} XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes [<*>]_00_00_00_7C_00_03_01_06_0E_05_8A_08_2E_FE_D8_1E cmdCode(CC_ReqCircleState.<*>)msgType(MT_ARG.<*>)msgClass(MC_FriendsCircle.<*>)sender(ST_Mobile.<*>)crypted(true)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
AutoStartupDataMgr:retrieveStartupSettings type <*> of <*> is <*>
<*> -> AUDIO_SET_VOL_CAL cal type = <*>
tcp.conn{<*>} ServiceC.connectedNotify(ServiceC.java:<*>) <*>
ProviderCallUtils callBadge isCloned = false
[Thermal_Hw] temperature_filter: get invalid temperature, use old temp
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
is3GCalling is false,mCdmaSlot is -<*>
getOrInflateState subId:<*>
ImsServiceSubHandler : Message received: what = <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
getOrInflateState subId:<*>
Watch Thread{<*>} LoginC.doWatch(LoginC.java:<*>) Login_By_Step-> watch count =  <*>
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
is3GCalling is false,mCdmaSlot is -<*>
m1: false
sending broadcast to Pid = <*>, Uid = <*>
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
connect :true
csr
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
sending alarm Alarm{<*> type <*> when <*> <*>},repeatInterval = <*>,listenerTag =null
monitor check touch devices
c: true, w: false, t: false, l: false
set(PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
getOrInflateState subId:<*>
MSG_QUERY_TCP_INFO called,count:<*>
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
msg.recv{<*>} DeviceManager.getIdeskIP(DeviceManager.java:<*>) HW_VIRTUAL_CARD ip  == null
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte
User[<*>] Rolling over usage stats complete. Took <*> milliseconds
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:HandShake to SVN was done
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Currently udp detect response ok,detect id is [<*>],ack id is [<*>]!
Launcher.Folder childCount: <*>
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u0 <*>}: prev had <*>
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch()
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
t:false, fl: false, p: <*>, ce: true, we: false
LoginThread{<*>} XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes [<*>]_00_00_02_8C_00_03_01_01_01_05_8A_42_B9_66_20_47 cmdCode(CC_Login.<*>)msgType(MT_ARG.<*>)msgClass(MC_PersonalInformation.<*>)sender(ST_Mobile.<*>)crypted(true)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
tcp.conn{<*>} XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes [<*>]_00_00_00_60_00_03_01_05_01_04_82_58_00_00_00_00 cmdCode(CC_PCheckVersion.<*>)msgType(MT_ARG.<*>)msgClass(MC_Push.<*>)sender(ST_Mobile.<*>)crypted(false)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
getOrInflateState subId:<*>
received cell-signal:<*>
onSignal: mSubId=<*>,currDataSubID=<*>
getTempInfo error: null, <*>
onShowStatusChange show:false
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
Client requesting input be hidden, pid=<*>
JIT profile information will not be recorded: profile file does not exits.
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
answer call by keyCode = <*>, down = true, isSupVolumnkeyAnswerCall = false
transitionTo: mode=MODE_TRANSPARENT, animate=false
obtain, mHwFlags=<*>
isCardAbsent slot:<*> slotState:<*>
mVSimCurCardType is -<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:CMTM_AddDNSRequest ok,pucURL =<*>,self =<*>,iOldGatewayLock =<*>
Acquiring suspend blocker "PowerManagerService.WakeLocks".
onFling::not valid gesture or touch plus on, false, return!
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
getOrInflateState subId:<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
release:lock=<*>, flg=<*>, tag="RILJ_ACK_WL", name=<*>", ws=null, uid=<*>, pid=<*>
getTempInfo error: null, <*>
action:<*>, mPermissionType:<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
m1: false
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
Application <*> is im app and connected ok, delay to H!
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
mVSimCurCardType is -<*>
ImsServiceSub : broadcastVopsSsacIntent Vops = true , Ssac = false
interceptKeyTq keycode=<*> interactive=true keyguardActive=false policyFlags=<*> down false canceled false
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
isCurrentBySim()=false
mSimSubId:<*> onDataActivity: direction=<*>
report state:<*> event type:<*> pid:<*> uid:<*> pkg:null to pid: <*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
APS: 2DSDR: <*>, we will clear SDR ratio
begin of formatChinaDateRange chinaDate:半夜<*>:<*>
Calling fingersense_classify_touch()
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
cleanUpApplicationRecordLocked, pid: <*>, restart: false
VM with version <*> has multidex support
Calling fingersense_classify_touch()
action:<*>, mPermissionType:<*>
Sending non-protected broadcast <*> from system <*>:<*><*> pkg <*>
[aware_mem] process cleaner success pid:<*>,uid:<*>,<*>,[<*>],mHasShownUi:false,base,class:<*>,<*>,<*>,<*>,adj:<*> is killed
action:<*>, mPermissionType:<*>
RCV <- {<*> IfaceClass active <*> <*> <*>}
notifyInterfaceClassActivity: client is <*>$<*>@<*>
onProcessDied pid = <*>, uid = <*>
power log dlsym ok
new ScenarioAction sPoolSize: <*>
fingersense_touch_up() finished
formatChinaDateTime, change to China normalTime:半夜<*>:<*>
onDataActivity: direction=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
fingersense_touch_up() finished
Application <*> is im app and connected ok, delay to H!
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
APS: 2DSDR: CanvasContext::setSDRZoomout(), the SDR ratio from ViewRootImpl is -<*>.<*>, native window width = <*>, height = <*>
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...
onFling::not valid gesture or touch plus on, false, return!
is3GCalling is false,mCdmaSlot is -<*>
ActivityManagerService,attachApplication,callingPid = <*>
Releasing suspend blocker "PowerManagerService.WakeLocks".
mIsScreenOn is: true, WAKEUP alarm trigger action = <*> package name is: <*>
received cell-signal:<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
ImsSenderRxr : Response data: [<*>, <*>, -<*>, -<*>, -<*>, -<*>, <*>, <*>, <*>, -<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, -<*>, <*>, <*>, <*>, <*>, -<*>, -<*>, <*>, <*>, <*>, -<*>, <*>, <*>, <*>, <*>, -<*>, -<*>, <*>, <*>][SUB0]
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
Acquiring suspend blocker "PowerManagerService.WakeLocks".
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
ImsSenderRxr : Response data: [<*>, <*>, -<*>, -<*>, -<*>, -<*>, <*>, <*>, <*>, -<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, -<*>, <*>, <*>, <*>, <*>, -<*>, -<*>, <*>, <*>, <*>, -<*>, <*>, <*>, <*>, <*>, -<*>, -<*>, <*>, <*>][SUB0]
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
getOrInflateState subId:<*>
Calling fingersense_classify_touch()
getOrInflateState subId:<*>
isCurrentBySim()=false
not 3G net type. do nothing.
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Client requesting input be hidden, pid=<*>
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>
mVSimCurCardType is -<*>
RCV <- {<*> IfaceClass idle <*> <*>}
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...
onDataActivity: direction=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
Calling fingersense_classify_touch()
mVSimCurCardType is -<*>
onFling::not valid gesture or touch plus on, false, return!
onDataActivity: direction=<*>
APS: 2DSDR: <*>(), SDR ratio = <*>.<*>, layer height = <*>, scroll view height = <*>
isCurrentBySim()=false
isCurrentBySim()=false
c: true, w: false, t: false, l: false
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=-<*>.<*>,bLux1=<*>.<*>,dLux1=-<*>.<*>
isCardAbsent slot:<*> slotState:<*>
mVSimCurCardType is -<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=-<*>.<*>,bLux1=<*>.<*>,dLux1=-<*>.<*>
suspendAutohide
Calling fingersense_classify_touch()
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
send_cmd_kernel: cmd=<*>
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
APS: 2DSDR: CanvasContext::setSDRZoomout(), the SDR ratio from ViewRootImpl is -<*>.<*>, native window width = <*>, height = <*>
onForegroundActivitiesChanged pid = <*>, uid = <*>
bmp is null : false
This is not beta user build
shouldBlockLocation  ret:false
getOutputForDevice() returns output <*>
start_output_stream: enter: stream(<*>)usecase(<*>: low-latency-playback) devices(<*>)
<*> -> send_audstrmtable
CtrlSocket Receiver,disable: false locked: false action: <*> mSmartKeyguardLevel: normal_level mStartPowerSaving: false
[Timer rat:<*> level:<*>] suspend
showPrimarySecurityScreen(turningOff=false)
resetCommute
postEventFromNative: msg=<*>,arg1=<*>,arg2=<*>
msg = <*> received
set notification panel padding = <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
formatChinaDateTime equals.
Lib:oem_qmi_cmd: Send to server  passed!!
Daemon: delta <*> genoff <*>
remove(null) changed bounds; rebatching
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u<*> <*>}: prev had <*>
I<*> ulp_brain_process_criteria_update() index at <*>, isNew = <*>, mask <*>, provider source = <*>,accuracy = <*>, singleshot = <*>, tbf = <*> emergency_request = <*>
at <*>(FileUtils.java:<*>)
<*>: sys<*> (No such file or directory)
is Beta User, userType = <*>
ScheduleRecordPowerConsumeReceiver:onReceive: Action = <*>
no controller energy info supplied
isMusicActive...
ImsServiceSub : StatusForAccessTech networkMode = -<*> registered = <*> status = <*> restrictCause = <*>
hideTraffic
update()   updated:  <*>
ImsSenderRxr :  Tag -<*> <*> <*> <*>[SUB0]
send: <*>
ImsSenderRxr : isValid = true type = <*> status = <*> userdata = null[SUB0]
getTempInfo error: null, <*>
m1: false
t:false, fl: false, p: <*>, ce: true, we: false
at <*>$UEventThread.run(UEventObserver.java:<*>)
oem-qmi: Connection accepted
RCV <- {<*> <*> Bandwidth command succeeeded}
NormalTrafficAnalysis:alert byte = <*> last alert byte = <*>
ImsServiceSub : onGWModemInfo begin
Caused by: <*>: method not supported.
at <*>(HandlerThread.java:<*>)
QmiChr_FetchModemInfo, result =<*>, outputLen =<*>
is Beta User, userType = <*>
Failing getSupportedFeatureset because HAL isn't started
action:<*>, mPermissionType:<*>
ImsSenderRxr : isValid = true type = <*> status = <*> userdata = null[SUB0]
send: <*>
action:<*>, mPermissionType:<*>
at <*>(Native Method)
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u0 <*>}: prev had <*>
description : <*>|<*>@<*>|<*>
getRcvData() TimeWcdmaLevelOther :  <*>
clear info:clearTimerSharedPref
send: <*>
[main<*>]isAllFirmwareInstallSuccessUnderAB is false(hwouc<*>.java:<*>)
<*> { running duration=<*> } transition to: doze reason:
Remaining Num Attempts = <*>
<*> goes to hibernation overtime: <*>
action:<*>, mPermissionType:<*>
Animating brightness: target=<*>, rate=<*>
[SdcardManager.isMounted]Path:<*>
getCurrentCellid PHONE_TYPE_GSM cellidString = <*>
authenticate(sid=<*>, gid=<*>)
qsc_send_cmd finish
getNextIndex: <*>; from <*> to <*>; size: <*>
RCV <- {<*> <*> Tethering stats list completed}
AutoCleanReceiveServer:telemamanger state isIdle:false
Get no-perm notification callback <*>
updateClipping isOverlap:false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
oem-qmi: Connection accepted
action:<*>, mPermissionType:<*>
getSeekBarProgress isAutoMode:true current brightness:<*> percentage:NaN
stopWakeUpReadyInternal, mBrightnessWaitModeEnabled = true enableBright = true
audio_extn_utils_send_app_type_cfg:<*>: adm: app_type <*>, acdb_dev_id <*>, sample_rate <*>
InitialState CMD_SCREEN_STATE_CHANGED  rt=<*><*> <*> <*>
transitionTo: mode=MODE_TRANSLUCENT, animate=false
transitionTo:mode=<*>, isEmuiStyle=false
onInterceptTouchEvent: MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mSwipingInProgress=false, mOnlyScrollingInThisMotion=false, mExpandingNotification=false, mDisallowDismissInThisMotion=false, mExpandedInThisMotion=false, isCustomizing=false, isRemoteInputing=false, mOwnScrollY=<*>
is3GCalling is false,mCdmaSlot is -<*>
onTouchEvent: code=<*>, action=<*>, event=MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }
new above launcher pkgs: [<*>]
keyAppBroadcastQueueForIntent intent Intent { act=<*> flg=<*> (has extras) } on bgkeyapp queue
: successes to get AllImpl object and return....
QSEECom_send_cmd return!
getStatic,count:<*>,work status:false
fingersense_classify_touch() finished
HwDPMS received transaction_getHwFrameworkAdminList user: <*>:<*>
action:<*>, mPermissionType:<*>
csr
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
mSimSubId:<*> onDataActivity: direction=<*>
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
getOrInflateState subId:<*>
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
getOrInflateState subId:<*>
isCurrentBySim()=false
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=-<*>.<*>,bLux1=<*>.<*>,dLux1=-<*>.<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
RCV unsolicited event from native daemon, event = <*> IfaceClass active <*> <*> <*>
c: true, w: false, t: false, l: false
Calling fingersense_classify_touch()
fingersense_classify_touch() finished
dispatch ordered broadcast [bgkeyapp] BroadcastRecord{<*> u0 <*>}, has <*> receivers
mVSimCurCardType is -<*>
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch()
notifyInterfaceClassActivity: client is <*>@<*>
Calling fingersense_classify_touch()
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
ImsSenderRxr : [UNSL]< UNSOL_SSAC_CHANGED <*>$SsacInfo@<*>[SUB0]
getOrInflateState subId:<*>
getTempInfo error: null, <*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
onFling::not valid gesture or touch plus on, false, return!
getOrInflateState subId:<*>
getOrInflateState subId:<*>
m1: false
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=-<*>.<*>,bLux1=<*>.<*>,dLux1=-<*>.<*>
isCurrentBySim()=false
notifyInterfaceClassActivity: client is <*>$<*>@<*>
mSimSubId:<*> onDataActivity: direction=<*>
is3GCalling is false,mCdmaSlot is -<*>
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
getOrInflateState subId:<*>
no controller energy info supplied
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch()
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
fingersense_touch_up() finished
fingersense_classify_touch() finished
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
VolumeDialogController.Callbacks onDismissRequested reason = <*>
<*> { hibernation duration=<*> } transition to: end, reason:stop_ash
audio_extn_sound_trigger_update_device_status: device <*> of type <*> for Event <*>, with Raise=<*>
HwSystemManager:HwDebug:false HwModuleDebug:false
isCurrentBySim()=false
onSignal: mSubId=<*>,currDataSubID=<*>
audio_extn_set_anc_parameters: anc_enabled:<*>
ApkCacheScanTask:apk cache scan task do task flag is: true
mSimSubId:<*> onDataActivity: direction=<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
Failure getting entry for <*> (t=<*> e=<*>) (error -<*>)
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
Report temperature: [charger_ic] temp :<*>  report_threshold:<*>
sending alarm Alarm{<*> type <*> when <*> <*>},repeatInterval = <*>,listenerTag =null
mDateString is: <*>月<*>日星期日
[Thermal_Hw] temperature_filter: get invalid temperature, use old temp
Report temperature: [ap] temp :<*>  report_threshold:<*>
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
closed = true
Launcher.Folder childCount: <*>
Heartbeat timer.timers{<*>} TimerObject.call(TimerObject.java:<*>) stop timer <*>$HeartbeatTimer@<*>.5000ms(<*>)
Sending non-protected broadcast <*> from system uid <*> pkg android
isWiredHeadsetOn...
isMusicActive...
notifyInterfaceClassActivity: client is <*>$<*>@<*>
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) TCP Msg 1718TCP_OK
pool<*>-thread<*>{<*>} XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes [<*>]_00_00_00_9C_00_03_01_08_01_05_8A_8C_0E_62_10_56 cmdCode(CC_QueryRecentSessions.<*>)msgType(MT_ARG.<*>)msgClass(MC_RecentSessions.<*>)sender(ST_Mobile.<*>)crypted(true)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
m1: false
m1: false
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
RCV <- {<*> IfaceClass active <*> <*> <*>}
t:false, fl: false, p: <*>, ce: true, we: false
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Udp resume detect packet add to conn ok,detect id is [<*>]!
Launcher.Folder childCount: <*>
at f.run(Unknown Source)
c: true, w: false, t: false, l: false
getOrInflateState subId:<*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
csr
ImsServiceSubHandler : Message received: what = <*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
send data return = <*>
platform_check_and_set_codec_backend_cfg:<*>: afe: bitwidth <*>, samplerate <*> channels <*>, backend_idx <*> usecase = <*> device (speaker)
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
receive data len = <*>
begin
Moving to PAUSED: ActivityRecord{<*> u0 <*>/.unihome.UniHomeLauncher t297} (pause complete)
Acquiring suspend blocker "PowerManagerService.WakeLocks".
worker idle
acquire lock=<*>, flags=<*>, tag="show keyguard", name=<*>, ws=null, uid=<*>, pid=<*>
getNextIndex: <*>; from <*> to <*>; size: <*>
begin
selectOutput() commonFlags for output <*>, <*>
platform_can_split_snd_device: snd_device(<*>) num devices(<*>) new_snd_devices(<*>)
WatchThread{<*>} TcpClient.clearAll(TcpClient.java:<*>) ==================== TCP CLIENT CLEAR ALL ====================
updateAlaphaAndScaleForChild <*>  <*>{<*> V.E...... ......ID <*>,<*><*>,<*> #<*> app:id<*>}
huawei_common_set_parameters: exit with code(<*>)
Sending non-protected broadcast <*> from system <*>:<*><*> pkg <*>
TrafficNotifyAfterLocked:screen notification will not notify
I<*> ulp_msg_process_system_update(const UlpSystemEvent): systemEvent:<*>
action:<*>, mPermissionType:<*>
Create obj success use class <*>
msg.recv{<*>} XmlMsg.decodeBuf(XmlMsg.java:<*>) RECV <*> bytes [<*>]_00_03_02_05_01_04_82_7C_80_FF_9F_5D cmdCode(CC_PCheckVersion.<*>)msgType(MT_ACK.<*>)msgClass(MC_Push.<*>)sender(ST_Mobile.<*>)crypted(false)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
postEventFromNative: msg=<*>,arg1=<*>,arg2=<*>
mSeekListener onProgressChanged progress:<*> fromUser:false
PowerManagerService goToSleepNoUpdateLocked: eventTime=<*>, reason=<*>, flags=<*>, uid=<*>
platform_set_parameters: enter: - srs_cfg:trumedia_enable=<*>
FingerStat Visible: false; Interactive: true; Switching: false; Bouncer:false; GoingToSleep: true Occluded: false; dreaming: false; Authenticated: false
receive data len = <*>
onScreenTurnedOff()
Got DISABLE response, status = <*>, id = <*>
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u<*> <*>}: prev had <*>
start wakelock monitor.
[SocketRead_07:<*>:<*><*>]conetEntity.channelType:ChannelType_Secure(android<*>:-<*>)
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
ChangeMode:readSaveMode, old function, it does not work from <*>.<*>
getRcvData() TimeGsmLevel2 :  <*>
send: <*>
process buffer and get message
applyInPlace=true shouldPeek=false alertAgain=true
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
queryIntentActivitiesAsUser size results:<*>, for package:<*>
getOrInflateState subId:<*>
mDateString is: <*>月<*>日星期日
dispatch ordered broadcast [background] BroadcastRecord{<*> u0 <*>}, has <*> receivers
EventCenter Get :<*>
readRilMessage: Buffer = [B@<*> HexData = [<*>]
getOutput() device <*>, stream <*>, samplingRate <*>, format <*>, channelMask <*>, flags <*>
start_output_stream: enter: stream(<*>)usecase(<*>: low-latency-playback) devices(<*>)
getTempInfo error: null, <*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
processOp opType: <*>, uid: <*>, pid: <*>
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) get tcp message <*>
mVSimCurCardType is -<*>
getOrInflateState subId:<*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
Acquiring suspend blocker "PowerManagerService.WakeLocks".
received cell-signal:<*>
Received Broadcast Intent ACTION_UNSOL_RESPONSE_OEM_HOOK_RAW
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Rcvd UNSOL response with <*> bytes data for SUB0
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
######### CMD_QUERY_PKTS ########
querySoundEffectsEnabled...
m1: false
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
isCurrentBySim()=false
isCurrentBySim()=false
is3GCalling is false,mCdmaSlot is -<*>
mSimSubId:<*> onDataActivity: direction=<*>
isCurrentBySim()=false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
WeatherDynamicUpdater update before : mDrawingData[<*>] = tempc:<*>, <*>, <*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
getCurrentCellid type is PHONE_TYPE_GSM
Calling fingersense_touch_up()
c: true, w: false, t: false, l: false
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
c: true, w: false, t: false, l: false
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>
received cell-signal:<*>
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
received cell-signal:<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
send_cmd_kernel: cmd=<*>
WatchThread{<*>} TcpClient.disconnect_i(TcpClient.java:<*>) ==================== TCP CLIENT DISCONNECT ====================
<*> -> ACDB_AVSYNC_INFO: ACDB_CMD_GET_DEVICE_PROPERTY
out_get_latency: Latency <*>
show
hideTraffic
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
Couldn't create directory for SharedPreferences file <*>.android.settings<*>.xml
isCurrentBySim()=false
getOutputForAttr() usage=<*>, content=<*>, tag= flags=<*> session <*> selectedDeviceId <*>
acquire lock=<*>, flags=<*>, tag="AudioMix", name=audioserver, ws=null, uid=<*>, pid=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Received Broadcast Intent ACTION_UNSOL_RESPONSE_OEM_HOOK_RAW
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
getCurrentCellid type type = PHONE_TYPE_GSM
interfaceStatusChanged wlan0, false
dispatch ordered broadcast [background] BroadcastRecord{<*> u<*> <*>}, has <*> receivers
p2p0: Shared frequencies (len=<*>): completed iteration
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
nl80211: RFKILL status not available
DefaultState{ when=<*> what=<*> target=<*>$SmHandler }
HS20: Delete all stored icons
HAL event thread stopped successfully
Create obj success use class <*>
readRilMessage: Buffer = [B@<*> HexData = [<*>]
Acquiring suspend blocker "PowerManagerService.WakeLocks".
Launcher.IconCache, cacheLocked  Utilities.createIconBitmap entry.title = 微信 ComponentName:ComponentInfo{<*><*>.<*>} user:UserHandle{<*>}
audio_extn_utils_send_app_type_cfg PLAYBACK app_type <*>, acdb_dev_id <*>, sample_rate <*>
<*> -> ACDB_AVSYNC_INFO: ACDB_CMD_GET_DEVICE_PROPERTY
Rcvd UNSOL response with <*> bytes data for SUB0
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
getTempInfo error: null, <*>
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, metaState=<*>, flags=<*>, hwFlags=<*>, repeatCount=<*>, eventTime=<*>, downTime=<*>, deviceId=-<*>, source=<*> }
interceptKeyBeforeQueueing: key <*> , result : <*>
action:<*>, mPermissionType:<*>
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
received cell-signal:<*>
onChangeState mState= <*>, mTargetState = <*>, state = <*>
Launcher.Folder childCount: <*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4GPLUS isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
Enqueueing ordered broadcast[bgkeyapp] BroadcastRecord{<*> u0 <*>}: prev had <*>
isCardAbsent slot:<*> slotState:<*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
fingersense_touch_up() finished
hideSecSoftInput = false
ImsSenderRxr :  Tag -<*> <*> <*> <*>[SUB0]
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
at y.bh(Unknown Source)
Couldn't create directory for SharedPreferences file <*>.android.settings<*>.xml
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
new ScenarioAction sPoolSize: <*>
t:false, fl: false, p: <*>, ce: true, we: false
MSG_QUERY_TCP_INFO called,count:<*>
is3GCalling is false,mCdmaSlot is -<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
Calling fingersense_touch_up()
onProposedRotationChanged, rotation=<*>
onCellLocationChanged
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
fingersense_classify_touch() finished
getOrInflateState subId:<*>
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
Enqueueing ordered broadcast[foreground] BroadcastRecord{<*> u0 <*>}: prev had <*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
notifyInterfaceClassActivity: client is <*>$<*>@<*>
getProcessInfo: failed to find this proc
DisplayPowerController updatePowerState mPendingRequestLocked=policy=DIM, useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=-<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=-<*>, userId=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte
adev_set_parameters: exit with code(<*>)
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|null|<*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
shouldBlockLocation  ret:false
work start startId : <*>
is3GCalling is false,mCdmaSlot is -<*>
mVSimCurCardType is -<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Releasing suspend blocker "PowerManagerService.WakeLocks".
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
getSeekBarProgress isAutoMode:true current brightness:<*> percentage:<*>.<*>
back light level before map = <*>
updateSlider2 seekBarProgress:<*>
mSeekListener onProgressChanged progress:<*> fromUser:false
getSeekBarProgress isAutoMode:true current brightness:<*> percentage:<*>.<*>
Client requesting input be hidden, pid=<*>
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
need to force refresh view
Invalid profile no. <*>, total profiles <*> only
c: true, w: false, t: false, l: false
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
presently, hw_update_color_temp_for_rg_led interface not achieved.
presently, hw_update_color_temp_for_rg_led interface not achieved.
presently, hw_update_color_temp_for_rg_led interface not achieved.
presently, hw_update_color_temp_for_rg_led interface not achieved.
mSeekListener onProgressChanged progress:<*> fromUser:false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4GPLUS),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
action:<*>, mPermissionType:<*>
reusing notification for key: <*>|<*>|<*>|null|<*>
mVSimCurCardType is -<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
mVSimCurCardType is -<*>
InputDispatcher::monitor frozen check!
<*>|after compensate: cache step_997
isCurrentBySim()=false
allowVideoCallsInLowBattery: false isCarrierOneSupported: false mIsLowbattery: false
notifyInterfaceClassActivity: client is <*>$<*>@<*>
getOrInflateState subId:<*>
isMonitorCellId mInfos.size() = <*>
current cell id is not monitor ..... cellid = <*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
action:<*>, mPermissionType:<*>
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
updateTint: tint=<*>
Caller checkPermission fail
onReceive intent:act:<*>  flag:<*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*>
LightSensor, enable, <*>: mEnabled=<*>
updateAutoBrightness: mScreenAutoBrightness=<*>, newScreenAutoBrightness=<*>
getCurrentCellid type is PHONE_TYPE_GSM
getCurrentWeatherInfo currentTemperature is :<*>.<*> mWeatherIcon Id is: <*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
ApStaDisabledState what=<*>
refreshBatteryInfo: null
Model  onReceive intent=Intent { act=<*> flg=<*> (has extras) }
notifyInterfaceClassActivity: client is <*>@<*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
Failure getting entry for <*> (t=<*> e=<*>) (error -<*>)
isMusicActive...
[ReceiverDispatcher<*>]read to Send:DA(android<*>:-<*>)
updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
Thread<*>{<*>} TcpClientThread.connect(TcpClientThread.java:<*>) will connect to <*>:<*>
getTempInfo error: null, <*>
Rcvd UNSOL response with <*> bytes data for SUB0
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
isSimPinSecure mSimDatas is null or empty
checkAndSetVolume() stream <*> muted count <*>
platform_check_codec_backend_cfg:<*>: afe: Codec selected backend: <*> current bit width: <*> sample rate: <*> channels: <*>
getOrInflateState subId:<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
acquire lock=<*>, flags=<*>, tag="hibernation", name=<*>, ws=null, uid=<*>, pid=<*>
收到子线程消息
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
release:lock=<*>, flg=<*>, tag="RILJ_ACK_WL", name=<*>", ws=null, uid=<*>, pid=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
tcp.recv{<*>} SimpleThread.close(SimpleThread.java:<*>) stopping Heartbeat timer.timers{<*>}
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
getTempInfo error: null, <*>
at <*>(FileUtils.java:<*>)
at <*>$<*>.onUEvent(UsbDeviceManager.java:<*>)
at <*>.<init>(FileInputStream.java:<*>)
Broadcasting intent ACTION_RAC_CHANGED
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...
Couldn't create directory for SharedPreferences file <*>.android.settings<*>.xml
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
isCurrentBySim()=false
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
dispatch ordered broadcast [foreground] BroadcastRecord{<*> u<*> <*>}, has <*> receivers
pool<*>-thread<*>{<*>} <*>.doInBackground(TupHelper.java:<*>) UnRegister VOIP end
action:<*>, mPermissionType:<*>
getTempInfo error: null, <*>
queryIntentActivitiesAsUser size results:<*>, for package:<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Error reading charge file
Error reading charge file
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
[SocketRead_08:<*>:<*><*>]broadcast(),and mReceivers  <*>(android<*>:-<*>)
onReceive intent:act:<*>  flag:<*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
release:lock=<*>, flg=<*>, tag="eventloop", name=android", ws=null, uid=<*>, pid=<*>
Error reading charge file
action:<*>, mPermissionType:<*>
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
at <*>$<*>.onUEvent(UsbDeviceManager.java:<*>)
platform_get_backend_index:napb: backend port - <*> device - <*>
getTempInfo error: null, <*>
isCurrentBySim()=false
KGSvcCall updateKeyguardState <*>-><*>; false false
removeListener <*>{<*> VFED..C.. ......ID <*>,<*><*>,<*> #<*> app:id<*>}
huawei_audio huawei_choose_Handset_device_incall_forHWtest: test Type =<*>
send data return = <*>
DisplayPowerState Updating screen state: state=ON, backlight=<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=true,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
updateSlider1 seekBarProgress:<*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [START],Mode[r]
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
report state:<*> event type:<*> pid:<*> uid:<*> pkg:null to pid: <*>
APS brightness=<*>.<*>,ConvertToPercentage=<*>.<*>
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, metaState=<*>, flags=<*>, hwFlags=<*>, repeatCount=<*>, eventTime=<*>, downTime=<*>, deviceId=-<*>, source=<*> }
Launcher.Utilities  startActivitySafely begin startActivity() for current user
back light level before map = <*>
ContentChange for slot: <*>
updateSlider2 seekBarProgress:<*>
updateSlider2 seekBarProgress:<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
APS brightness=<*>.<*>,ConvertToPercentage=<*>.<*>
getRecentTasks: topActivity=ComponentInfo{<*><*>.<*>}
APS brightness=<*>.<*>,ConvertToPercentage=<*>.<*>
<*>|onStandStepChanged <*>
obtain, mHwFlags=<*>
<*>|before compensate: cache step_1423
audio_extn_get_parameters: returns
unproxy <*> broadcast OK !
<*>: sys<*> (No such file or directory)
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:listing available engine types
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
onShowStatusChange show:false
csr
getOrInflateState subId:<*>
trim and enqueue bgkeyapp Parallel:(<*>) Ordered:(<*>)(BroadcastRecord{<*> u0 <*>})
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
AwareMem_DMEServer: start
msg = <*> received
No peeking: unimportant notification: <*>|<*>|<*>|null|<*>
isCurrentBySim()=false
stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false
resumeTopActivityLocked: Skip resume: some activity pausing.
Skipping, withExcluded: false, tr.intent:Intent { act=<*> flg=<*> pkg=<*> cmp=<*>/.controller.SecureCameraActivity (has extras) }
@@@@@@@@@@@@ uid :<*> download :false
Application requested orientation <*>, got rotation <*> which has compatible metrics
transitionTo: mode=MODE_TRANSPARENT, animate=false
oldFocusWindow: Window{<*> u0 <*><*>.<*>}, currentFocusWindow: null, currentFocusApp: AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>/.ui.LauncherUI t383}}}
#<*> <*>{<*> V.ED..... ......ID <*>,<*><*>,<*> #<*> app:id<*>}
MODE_TRANSLUCENT -> MODE_OPAQUE animate=false
is3GCalling is false,mCdmaSlot is -<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false
ImsSenderRxr :  Tag -<*> <*> <*> <*>[SUB0]
not 3G net type. do nothing.
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
removeNotificationChildren
<*>|onStandStepChanged <*>
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
mSimSubId:<*> onDataActivity: direction=<*>
isCurrentBySim()=false
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*><*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true
getOrInflateState subId:<*>
getTempInfo error: null, <*>
Calling fingersense_classify_touch()
<*> -> ACDB_CMD_GET_AUDPROC_STREAM_TABLE_V2
receive data len = <*>
getTempInfo error: null, <*>
getTempInfo error: null, <*>
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
getOrInflateState subId:<*>
updateTint: tint=<*>
set again repeat alarm: next ,nextElapsed = <*>,repeatInterval = <*>
need to force refresh view
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
getTempInfo error: null, <*>
<*>|getTodayTotalSteps <*>
getTempInfo error: null, <*>
at <*>(Native Method)
<*>|REPORT : <*> <*> <*> <*>
clear hibernation actions!
Unproxy wakelock uid = <*> pid = <*>
proxyBroadcast:[<*>] proxy:false
shouldBlockLocation  ret:false
pid=<*>, cmd=<*>, param=<*>
Error reading charge file
SND -> {<*> bandwidth setglobalalert <*>}
dispatch ordered broadcast [foreground] BroadcastRecord{<*> u<*> <*>}, has <*> receivers
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
isCurrentBySim()=false
is3GCalling is false,mCdmaSlot is -<*>
onReceive intent:act:<*>  flag:<*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*>
ConnectivityBroadcastReceiver.onReceive() action: <*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号强度为三格。 typeContentDescription:EDGE isTypeIconWide:false showActivity:true activityIn:false activityOut:false isRoaming:false
<*>: sys<*> (No such file or directory)
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
<*> goes to D overtime: <*>
<*>|calculateAltitudeWithCache datas.size=<*>
<*>:  read normal Exit
queryIntentActivitiesAsUser size results:<*>, for package:<*>
proxyWakeLockByPidUid, pid: <*>, uid: <*>, proxy: true
action:<*>, mPermissionType:<*>
Rcvd UNSOL response with <*> bytes data for SUB0
handleLteCaStatusChange
<*>|standStepCounter report <*> steps,write fe
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
action:<*>, mPermissionType:<*>
shouldBlockLocation running ...
showNotificationAll
######### CMD_QUERY_PKTS ########
readRilMessage: Buffer = [B@<*> HexData = [<*>]
Rac Change (PDC) data: [-<*>, -<*>]
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
hideTraffic
[ap] temp_new :<*>  temp_old :<*>
getTempInfo error: null, <*>
AutoStartupDataMgr:retrieveStartupSettings type <*> of <*> is <*>
AdBlockService:onReceive action=<*>
StartupResidentService:InnerHandler Message:<*>
onReceive
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
rmt_storage_client_thread: <*>: clnt_h=<*> About to block rmt_storage client thread (th_id: <*>) wakelock released: <*>, error no: <*>
onShowStatusChange show:false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
chinaDateTime:上午<*>:<*>
RemainingTimeSceneHelper:invalid condition, do not update time scene.
update()   updated:  <*>
db.close()  has closed
getTempInfo error: null, <*>
getTempInfo error: null, <*>
DialpadFragment mBroadcastReceiver action:<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
isCarrierConfigEnabled bundle is null
getTempInfo error: null, <*>
getTempInfo error: null, <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<*>: sys<*> (No such file or directory)
<*> -> ACDB_AVSYNC_INFO: ACDB_CMD_GET_DEVICE_PROPERTY
enable_audio_route: apply mixer and update path: low-latency-playback speaker
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:-<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*>
scheduleTimeTickEvent triggerAtTime = <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Process ipc result is [<*>]
Permission Denial: broadcasting Intent { act=<*> flg=<*> (has extras) } from null (pid=-<*>, uid=-<*>) requires <*> due to registered receiver BroadcastFilter{<*> u0 ReceiverList{<*> <*> <*><*> remote:<*>}}
release:lock=<*>, flg=<*>, tag="dispatcher", name=android", ws=null, uid=<*>, pid=<*>
suspendAutohide
Turning vibrator on for <*> ms.
@@@@@@@@@@@@ uid :<*> download :true
GenericSource::disconnect end
action:<*>, mPermissionType:<*>
Moving to STOPPING: ActivityRecord{<*> u0 <*>/.<*> t383 f} (finish requested)
<*>#loadLibrary(String, ClassLoader) is private and will be removed in a future Android release
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FileSec: write app bundle id  = &<*>ߢ[
[HttpClient.getDataWithRetryNoLogin] success
is3GCalling is false,mCdmaSlot is -<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
presently, hw_update_color_temp_for_rg_led interface not achieved.
Skipping, withExcluded: false, tr.intent:Intent { act=<*> dat=file://<*>.apk typ=application<*>.android.package-archive flg=<*> cmp=<*>/.PackageInstallerActivity (has extras) }
getNextIndex: -<*>; from <*> to <*>; size: <*>
BlurBitmap  draw super <*>.<*>
Store template db took <*> ms
WatchThread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown output: <*>: Socket is closed
getOrInflateState subId:<*>
onDataActivity: direction=<*>
overlapAmount:<*>.<*>, previousNotificationEnd:-<*>.<*>, newYTranslation:-<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*>
updateNotificationShade
state.clipTopAmount:<*>, i:<*>
updateClipping isOverlap:true
shouldBlockLocation running ...
onQsExpansionStarted
huawei_common_set_parameters: exit with code(<*>)
FingerprintService authenticate
fpc_tac_send_get_indices_cmd indices:<*>, index_count:<*>
loadPagerImageView loadType:<*> mCurrentPosition:<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
bindServiceLocked, r: ServiceRecord{<*> u0 euid: <*> <*>/.<*>}, euid: <*>
setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*>
release:lock=<*>, flg=<*>, tag="hibernation", name=<*>", ws=null, uid=<*>, pid=<*>
<*>|compensate <*> <*>
getTempInfo error: null, <*>
activate: <*> activate sensors is <*>
DefaultState MSG_SCREEN_ON
unproxy <*> broadcast OK !
shouldBlockLocation running ...
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
postEventFromNative: msg=<*>,arg1=<*>,arg2=<*>
at <*>.<init>(FileInputStream.java:<*>)
MSG_QUERY_TCP_INFO called,count:<*>
m1: false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
setFocusedApp update app ops, mTaskChanged set to:false
getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>
bright trace:<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>,<*><*>
getOrInflateState subId:<*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
shouldBlockLocation  ret:false
Report temperature: [charger_ic] temp :<*>  report_threshold:<*>
rotationForOrientationLw(orient=<*>, last=<*>); user=<*>
mSeekListener onProgressChanged progress:<*> fromUser:false
presently, hw_update_color_temp_for_rg_led interface not achieved.
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
fingersense_classify_touch() finished
readFile,  file_len=<*>
back light level before map = <*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
baidu location service start1 ...<*>
fingerprintdex--dev->need_liveness_authentication = false;
ContentChange for slot: <*>
HWCDisplay::SetPowerMode: display = <*>, mode = <*>
apply skiped :<*>
isSimPinSecure mSimDatas is null or empty
set notification panel padding = <*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
release:lock=<*>, flg=<*>, tag="WakerLock:<*>", name=<*>", ws=null, uid=<*>, pid=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
AppHiber_Task:  Screen   Off  State, frozenInhandleMsg Return
applyIconTint ignore
Change to single clock mode!
mVSimCurCardType is -<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
remove(PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}) changed bounds; rebatching
<*>|rebuild notification
Report temperature: [charger_ic] temp :<*>  report_threshold:<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
begin
updateClipping isOverlap:false
RecentLogic{<*>} RecentLogic.addConversationEntity(RecentLogic.java:<*>) add chat recent!
formatChinaDateTime equals.
[ION DEBUG]ion len:<*>, heap_id:<*>, flag:<*>
init  mFrameAllocator:<*>  this:<*>  getMyType:<*>
[ION DEBUG] Alloc type:<*>
void android::HwAlgorithmicInformation::setSmartAeInfo(int, int*, SmartAE_EXIF_INFO_t*), frameNum = <*>, expo = <*>, set smartAE output hdr values to default
isAutoSceneRunning false
void android::IppAlgoSmartAE::setHdrAndExifInfo(AE_OutputData *), isHDR=<*>, frameNumber=<*>
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) mAlgoAeCompToDriver[<*>]=<*>, resultComp[<*>]=<*>
enter ois_get_vibrate_status_func
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) TAE_Rect (left,top)=(<*>,<*>), (right,bottom)=(<*>,<*>)
static void qcamera::QCamera2HardwareInterface::metadata_stream_cb_routine(mm_camera_super_buf_t*, qcamera::QCameraStream*, void*) pMetaData->ae_params.settled = <*>
void android::IppAlgoSmartAE::setHdrAndExifInfo(AE_OutputData *), isHDR=<*>, frameNumber=<*>
isAutoSceneRunning false
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int),awbRgain=<*>,awbGgain=<*>,adbBgain=<*>,cct=<*>
onTransact in code is: <*>
void android::HwAlgorithmicInformation::setSmartAeInfo(int, int*, SmartAE_EXIF_INFO_t*), Enter frameNum = <*>, expo = <*>, pExif = <*>
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int), saturationCompValid = <*>
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int),format:<*>,buffer0xe9530000,wide:<*>,height:<*>
getMMIPdafTestMode: mode : (null)
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int), start fill parameters for frame <*>
Enter void qcamera::IppAlgoColorEffect::onNewArrival(int, void *, int, int, const char *, const void *), fmt = <*>, addr = <*>, width = <*>, height = <*>, effect = (null), param = <*>, gEffect = none, gParam = , rotation = <*>
received cell-signal:<*>
hideSecSoftInput = false
at <*>$BgPicLoader$<*>.run(MagazineWallpaper.java:<*>)
LightSensor, enable, <*>: en=<*>
isCurrentBySim()=false
readRilMessage: Buffer = [B@<*> HexData = [<*>]
send_cmd_kernel: cmd=<*>
Sending SAM_ENABLE to fs_data
onChange selfChange:false uri.toString():content:/<*> mIsObserveAutoBrightnessChange:true
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
mVSimCurCardType is -<*>
loadPic: <*>
getNextIndex: <*>; from <*> to <*>; size: <*>
Cameralayout setVisibility. true false  <*>
mTiffStream skip = <*>
ExtraTrafficSetting:result is empty
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
updateNotificationShade
PowerManagerNotifier onWakeUp: event=startWakeUpReady, reasonUid=<*> opPackageName=<*> opUid=<*>
read Events lux:<*>.<*>
qsc_decode end
Store template db took <*> ms
isLockScreenDisabled HwKeyguardManagerImpl result = false
<*> -> ACDB_CMD_GET_AUDPROC_COMMON_TABLE_SIZE
stopFilter m_filterIsStarted:false
csr
presently, hw_update_color_temp_for_rg_led interface not achieved.
Acquiring suspend blocker "PowerManagerService.WakeLocks".
not 3G net type. do nothing.
csr
getTempInfo error: null, <*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
InitialState CMD_SET_SUSPEND_OPT_ENABLED  rt=<*><*> <*> <*>
Unproxy wakelock uid = <*> pid = <*>
receive data len = <*>
onAuthenticated <*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
get the task from ActivityManager size is <*> AMS:getRecentTasksForUser,args:numTasksToQuery=<*>,flags=<*>,userId=<*>
windowsVisibleLocked(): ActivityRecord{<*> u0 <*>/.<*> t383} idle: true
showNotificationAll
onTransact in code is: <*>
isPasswordInputType = false, inputType = <*>
audio_extn_fbsp_set_parameters: Speaker protection disabled
out_set_parameters: enter: usecase(<*>: low-latency-playback) kvpairs: routing=<*>
DisplayPowerStatesetColorFadeLevel: level=<*>.<*>
RGB565toARGB888 create bmp = 162x288
DefaultState !CMD_SCREEN_STATE_CHANGED  rt=<*><*> <*> <*>
transitionTo: mode=MODE_TRANSPARENT, animate=false
notifyInterfaceClassActivity: client is <*>$<*>@<*>
create: <*>
<*>| getTodayTotalDetailSteps from Prefence success and todaySendorSteps= <*>##<*>##<*>##<*>##<*>##<*>
updateTint: tint=<*>
handleLteCaStatusChange
formatChinaDateTime equals.
there are no wakeup alarms and the screen is off, we can delay what we have so far until the future
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u0 <*>}: prev had <*>
RefreshBatteryInfo isBatteryLow: <*>
Action: BatChange
at <*>.<init>(FileInputStream.java:<*>)
send: <*>
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
applyIconTint ignore
getCurrentCellid type type = PHONE_TYPE_GSM
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
restrainFilesNum, count = <*>
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
EventCenter Get :<*>
Create obj success use class <*>
getTempInfo error: null, <*>
BatteryInfo updated:  3lpc<*>
updateClipping isOverlap:false
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription: isTypeIconWide:false showActivity:false activityIn:false activityOut:false isRoaming:false
NormalTrafficAnalysis:alert byte = <*> last alert byte = <*>
action:<*>, mPermissionType:<*>
mVSimCurCardType is -<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
keyAppBroadcastQueueForIntent intent Intent { act=<*> flg=<*> (has extras) } on bgkeyapp queue
getStatic,count:<*>,work status:false
getTempInfo error: null, <*>
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=-<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>]
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
onShowStatusChange show:false
mAm.startProcessLocked for service: ServiceRecord{<*> u0 euid: <*> <*>/.IndexSearchService}, appinfo euid: <*>
platform_check_codec_backend_cfg:<*>: afe: Codec selected backend: <*> current bit width: <*> sample rate: <*> channels: <*>
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
newUnreadCount:<*>,oldUnreadCount:<*>
releaseOutput() <*>
audio_extn_utils_send_app_type_cfg:<*>: adm: app_type <*>, acdb_dev_id <*>, sample_rate <*>
setOutputDevice() device <*> delayMs <*> force <*>
getTempInfo error: null, <*>
getTempInfo error: null, <*>
chinaDateTime:中午<*>:<*>
RemainingTimeSceneHelper:updateTimeSceneData ,deltaRmCapacity= <*>.<*> deltaTimeStamp=<*> timestamp_temp= <*>
action =<*>
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u0 <*>}: prev had <*>
query() sql:select * from 'SignalTime' where CardIndex = '<*>'
<*>: sys<*> (No such file or directory)
getTempInfo error: null, <*>
release:lock=<*>, flg=<*>, tag="wake-and-unlock wakelock", name=<*>", ws=null, uid=<*>, pid=<*>
collapsePanel2
action:<*>, mPermissionType:<*>
needTrimMemory: trimFrom = <*>, avail = <*>, vmSize = <*>, vssLimit = <*>, totalPss = <*>, pssLimit = <*>, agressiveGrowthLimit = <*>, gentleGrowthLimit = <*>, availablePmThreshold = <*>, availableVmThreshold = <*>
chinaDateTime:中午<*>:<*>
RCV <- {<*> <*> Tethering stats list completed}
CollectorManager--isCollectorEnabled--getBoolean: false
[SocketRead_12:<*>:<*><*>]ctrlSocket success(android<*>:-<*>)
Destroying TransactionService
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:runtime config: cfgflag[<*>] netflag[<*>] realip[<*>]!
[SocketRead_12:<*>:<*><*>]broadcast(),and mReceivers  <*>(android<*>:-<*>)
Calling a method in the system process without a qualified user: <*>:<*> <*>:<*> <*>:<*> <*>:-<*> <*>$<*>.handleMessage:<*>
HandlePowerStatistic:uap.power <*>.<*> uap.uid=<*>
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:FSM_Tool_LibcAccess ==> call access err path:<<*>+qSoV>, errno:<<*>>
[SdcardManager.isMounted]Path:<*>
WeatherDynamicUpdater update before : mDrawingData[<*>] = mostlycloudy:<*>, <*>, <*>
requestLayout() improperly called by <*>{<*> V.ED..C.. ......ID <*>,<*><*>,<*> #<*> android:id<*>} during layout: running second layout pass
set(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
WeatherDynamicUpdater update before : mDrawingData[<*>] = num1:<*>, <*>, <*>
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():<*>
isCurrentBySim()=false
CubicBezierInterpolator  mControlPoint1x = <*>.<*>, mControlPoint1y = <*>.<*>, mControlPoint2x = <*>.<*>, mControlPoint2y = <*>.<*>
updateNotificationShade
release:lock=<*>, flg=<*>, tag="*launch*", name=android", ws=WorkSource{<*>}, uid=<*>, pid=<*>
onProcessDied pid = <*>, uid = <*>
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
AwareMem_Kill: updateGroupList process: move high frequent=<*>, uid=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte
Create obj success use class <*>
Create obj success use class <*>
ConversationList @<*>  lifecycle onStop
isCurrentBySim()=false
state.clipTopAmount:<*>, i:<*>
obtain, mHwFlags=-<*>
set(null) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
Daemon: Time-services: Waiting to acceptconnection
action: ACTION_SERVICE_STATE_CHANGED
ImsServiceSubHandler : After detect, ims register state is <*>
GetAddrInfoHandler addr: <*> {<*>, <*>, <*>} <*>
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
NatTrafficNotifyService:delta byte = <*> no traffic delta = 0Traffic state is <*>
acquire lock=<*>, flags=<*>, tag="WakerLock:<*>", name=<*>, ws=null, uid=<*>, pid=<*>
<*>|upLoadOneMinuteDataToEngine time=<*> step=<*> altitude=<*> motion=<*>
transferRemoteInputFocus: <*>
transferRemoteInputFocus: <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
action:<*>, mPermissionType:<*>
updateRulesForGlobalChangeLocked(false) took 2347ms
tcp.conn{<*>} TcpSocket.connect_i(TcpSocket.java:<*>)
Oem ID in QCRILHOOK UNSOL RESP is QOEMHOOK
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
create: <*>
handle_exception_events enter
Oem ID in QCRILHOOK UNSOL RESP is QOEMHOOK
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
at <*>.<init>(FileInputStream.java:<*>)
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
ACTION_BATTERY_CHANGED pluggedType: <*>
cancelNotification,index:-<*>
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
dispatch ordered broadcast [background] BroadcastRecord{<*> u0 <*>}, has <*> receivers
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
keyAppBroadcastQueueForIntent intent Intent { flg=<*> cmp=<*>/.booter.MMReceivers$AlarmReceiver (has extras) } on bgkeyapp queue
[SdcardManager.isMounted]Path:<*>
action:<*>, mPermissionType:<*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
applyInPlace=true shouldPeek=false alertAgain=true
enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|null|<*>
<*>|REPORT : <*> <*> <*> <*>
updateNotificationShade
GetAddrInfoHandler: getaddrinfo failed! count=<*>, total=<*> <*> {<*>,<*>,<*>,<*>,<*>}
getUidWakeLock uid: <*> wakelock(minutes): <*>
Error reading charge file
onEntryUpdated:<*>|<*>|<*>|null|<*>
Daemon:Delta read on boot mseconds = <*>
getSeekBarProgress isAutoMode:true current brightness:<*> percentage:<*>.<*>
no controller energy info supplied
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Tracker: start do upload
_resolv_set_nameservers_for_net: netid = <*>, addr = <*>
[SdcardManager.isMounted]Path:<*>
StartupResidentService:InnerHandler Message:<*>
WatchThread{<*>} TcpClient.disconnect_i(TcpClient.java:<*>) ==================== TCP CLIENT DISCONNECT ====================
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
[CheckNewVersionThread<*>]CheckNewVersion synchronized run(<*>.java:<*>)
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => [START]: pcFileName [anyofficeuserorgcode]
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FileSec: have right to open file due to cur app sec level = <*> is higher than file app(&<*>ߢ[
moveTaskToTop mTaskChanged:true
MainActivity_start_tokennull
HoldService:PHONE_CODE_PERMISSION  is allowed  . packagename =  <*>
RmO1UsxQMDnMutpsPWe<*>+APg30RKLgHnrgCGdS
Reporting idle of ActivityRecord{<*> token=<*>@<*> {<*><*>.<*>}} finished=true
AwareMem_Kill: kill action canBeExecuted waiting next operation, real interval=<*>
onProcessDied pid = <*>, uid = <*>
onTouchEvent: code=<*>, action=<*>, event=MotionEvent { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }
onForegroundActivitiesChanged pid = <*>, uid = <*>
[requestLocationUpdatesLocked] 定位..Wifi/基站定位
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
isCurrentBySim()=false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
buildLogFile enter for metricId=<*>
c: true, w: false, t: false, l: false
HoldService:locationInfo switch is on . pid = <*>
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
<*>, <*>, <*>, <*>
NaviBar defValue = <*>
shouldBlockLocation  ret:false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
getNeighboringCellInfo calling app is <*>
handleANRFilterFIFO,uid = 10113cmd = <*>
mIsScreenOn is: true, WAKEUP alarm trigger action = ALARM_ACTION(<*>) package name is: <*>
shouldBlockLocation  ret:false
handleANRFilterFIFO,uid = 10113cmd = <*>
at <*>(GoogleHttpClient.java:<*>)
c: true, w: false, t: false, l: false
querySoundEffectsEnabled...
shouldBlockLocation running ...
handleANRFilterFIFO,uid = 10113cmd = <*>
Calling fingersense_classify_touch()
mVSimCurCardType is -<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
shouldBlockLocation running ...
HoldService:locationInfo switch is on . pid = <*>
Calling fingersense_touch_up()
Releasing suspend blocker "PowerManagerService.WakeLocks".
9Gdo3qZj7mPbvP3WYuBaw+49VPpccYLQBU4PKvUm1+YjerYEKahr3iCwAcHB+nuBv1iBh3m<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Can't find ssid.
mVSimCurCardType is -<*>
shouldBlockLocation running ...
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
shouldBlockLocation  ret:false
CubicBezierInterpolator  mControlPoint1x = <*>.<*>, mControlPoint1y = <*>.<*>, mControlPoint2x = <*>.<*>, mControlPoint2y = <*>.<*>
transitionTo: mode=MODE_TRANSPARENT, animate=false
ImsSenderRxr :  Tag -<*> <*> <*> <*>[SUB0]
Calling fingersense_classify_touch()
playSoundEffect   effectType: <*>
m1: false
isCurrentBySim()=false
showWindow: showing!
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
onInterceptTouchEvent: MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }
SND -> {<*> softap fwreload wlan0 STA}
device_name='MLA-AL00'
nl80211: Supported cipher <*>-0f-ac:<*>
CTRL_IFACE SET 'update_config'='<*>'
CTRL_IFACE: GET_NETWORK id=<*> name='ca_path'
wlan0: Control interface command 'GET_NETWORK <*> ieee80211w'
Received WIFI_P2P_THIS_DEVICE_CHANGED_ACTION: mThisDevice= Device: HUAWEI MAIMANG <*>
NearBy-Service:====>UNHANDLE MSG:<*>
CTRL-DEBUG: ctrl_sock-sendmsg: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
random pool - hexdump(len=<*>): [REMOVED]
Enqueueing ordered broadcast[foreground] BroadcastRecord{<*> u<*> <*>}: prev had <*>
receive:<*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 4e <*> <*> 0d <*> ...
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
updateLightsLocked --> mBatteryLight.turnOff
setProgress: <*>
updateClipping isOverlap:false
Skipping, withExcluded: false, tr.intent:Intent { act=<*> flg=<*> cmp=<*>/.InCallActivity (has extras) }
onInterceptTouchEvent MotionEvent { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }, mBlockTouches=false
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
oem-qmi: Waiting to accept connection
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
CTRL_IFACE: GET_NETWORK id=<*> name='wep_tx_keyidx'
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
mIntentReceiver begin
.handleEvent().NETWORK_STATE_CHANGED.DetailedState:CONNECTING
wpa_driver_nl80211_driver_cmd RXFILTER-START len = <*>, <*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
<*>
scheduleCheckFreezeScreen sendMessageDelayed
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
AutoStartupDataMgr:retrieveStartupSettings type <*> of <*> is <*>
MODEM is support BIP!
onDemandTimeInjection=true, refreshSuccess=true, delay=<*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:system<*>}, flags: <*>
wlan0: Scan completed in <*>.<*> seconds
WPS: attr type=<*> len=<*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>
reportArpDetail: <*>  f4:<*>:cd:<*>:c8:<*>   <*>   wlan0
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
msg.recv{<*>} TcpSocket.setDSCP(TcpSocket.java:<*>) set dscp = <*>
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
get AllImpl object = <*>@<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [END]
gettimer:interval=<*>
new ScenarioAction sPoolSize: <*>
Skipping, withExcluded: false, tr.intent:Intent { act=<*> flg=<*> pkg=<*> cmp=<*>/.controller.SecureCameraActivity (has extras) }
windowsGone(): ActivityRecord{<*> u0 <*><*>.<*> t393}
is Beta User, userType = <*>
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
handleANRFilterFIFO,uid = 10113cmd = <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
wlan0: Control interface command 'SIGNAL_POLL'
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
bmp is null : false
Client requesting input be hidden, pid=<*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:system<*>}
<*>:<*>:<*>:<*>:<*>:0c history loss[-<*>]=<*>%, volume=<*>
Application requested orientation <*>, got rotation <*> which has compatible metrics
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
SimCardMethod:<*>: imsi is null
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
id : 6344type : uploadingname : size : 12011512isModemLog : false
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
nspTs1482041557
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
WPS: WFA subelement id=<*> len=<*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
<*> -> ACDB_CMD_GET_AUDPROC_COMMON_TABLE
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
permit restrict net app: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
action:<*>, mPermissionType:<*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:system<*>}
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
during_ms:<*>,period_ms:<*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
overlapAmount:<*>.<*>, previousNotificationEnd:-<*>.<*>, newYTranslation:-<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
<*>|after compensate: cache step_8082
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
no expired. level:<*>
<*>|before compensate: cache step_8084
updateNotificationShade
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
transferRemoteInputFocus: <*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
obtain, mHwFlags=-<*>
send_cmd_kernel: cmd=<*>
ContentChange for slot: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u0 <*>}: prev had <*>
notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source:  (<*>)
onChange selfChange:false uri.toString():content:/<*> mIsObserveAutoBrightnessChange:true
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
oldFocusWindow: Window{<*> u0 <*><*>.<*>}, currentFocusWindow: null, currentFocusApp: AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*>/.ui.LauncherUI t383}}}
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
get AllImpl object = <*>@<*>
transitionTo:mode=<*>, isEmuiStyle=false
shouldBlockLocation running ...
HoldService:locationInfo switch is on . pid = <*>
windowsGone(): ActivityRecord{<*> u0 <*><*>.<*> t393 f}
shouldBlockLocation running ...
transitionTo: mode=MODE_OPAQUE, animate=false
#<*> <*>{<*> V.ED..... ........ <*>,<*><*>,<*> #<*> app:id<*>}
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
HoldService:locationInfo switch is on . pid = <*>
mAccessWebStatus : rx = <*>, tx = <*>
upload success200type = <*>
should not do the transition or the transition anim is null or it is running or the mContainer view is null or mContainer view hasn't been drawn to screen
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
HoldService:locationInfo switch is on . pid = <*>
WPS: attr type=<*> len=<*>
Acquiring suspend blocker "PowerManagerService.WakeLocks".
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
gettimer:interval=<*>
setFocusedApp update app ops, mTaskChanged set to:false
MODEM is support BIP!
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:system<*>}
msg what=<*> arg1(token)=<*> arg2(mode)=<*> delay=<*>
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source:  (<*>)
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_1","data":null}
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
wlan0: Own scan request started a scan in <*>.<*> seconds
formatChinaDateTime equals.
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
bindServiceLocked, r: ServiceRecord{<*> u0 euid: <*> <*>/.controller.BootDaemonService}, euid: <*>
getNeighboringCellInfo calling app is <*>
handleANRFilterFIFO,uid = 10113cmd = <*>
reportStatus status: <*>
[ACC]processReportInd: X: -<*>.<*> Y: <*>.<*> Z: <*>.<*>  x_offset:<*>.<*> y_offset:<*>.<*> z_offset:<*>.<*>
handleANRFilterFIFO,uid = 10113cmd = <*>
handleANRFilterFIFO,uid = 10113cmd = <*>
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:<*><*>}, flags: <*>
random_mix_pool - hexdump(len=<*>): [REMOVED]
result = <*>
handleANRFilterFIFO,uid = 10113cmd = <*>
shouldBlockLocation running ...
shouldBlockLocation  ret:false
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
HoldService:locationInfo switch is on . pid = <*>
updatArpSummery mRSSI:-<*>  HwCHRWifiRSSIGroup [rssi_index=<*>, rtt_tcp_packets=<*>, rtt_tcp_duration=<*>, rtt_lan_duration=<*>, rtt_lan_failures=<*>, rtt_lan_succ=<*>, rtt_lan_max=<*>, rtt_lan_min=<*>,same_area_frequency=<*>,adjacent_area_frequency=<*>]
send_cmd_kernel: cmd=<*>
msg = <*> received
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, metaState=<*>, flags=<*>, hwFlags=<*>, repeatCount=<*>, eventTime=<*>, downTime=<*>, deviceId=-<*>, source=<*> }
Launcher onBackPressed zoomEnable=false
SystemUI may crashed at earlier time. <*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
set(PendingIntent{<*>: PendingIntentRecord{<*> <*> startService}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
at <*>$UEventThread.run(UEventObserver.java:<*>)
AutoStartupDataMgr:isUnderControll third party not in whitelist: <*>
wifi_send_command: cmd:'IFNAME=wlan0 ENABLE_NETWORK <*> no-connect'
AppAutoStartupPolicy:prevent start receiver of package <*> for action <*>
Got NetworkAgent Messenger
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
CREATE SOCKET begin
mVSimCurCardType is -<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:ReadSdkGroupItem: Succeed in fetching group item[HW_W3_ACCOUNT] share[<*>]
NatTrafficNotifyService:delta byte = <*> no traffic delta = 0Traffic state is <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
<*>|getTodayTotalSteps <*>
doze package: <*>, visible: false
Create obj success use class <*>
handleMessage(<*>)
perform hibernation actions!
proxy app:<*>,uid:<*>,result:true
action:<*>, mPermissionType:<*>
Model  onReceive intent=Intent { act=<*> flg=<*> (has extras) }
Rac Change (PDC) data: [-<*>, -<*>]
action:<*>, mPermissionType:<*>
onSignal: mSubId=<*>,currDataSubID=<*>
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
Create obj success use class <*>
isCardAbsent slot:<*> slotState:<*>
at <*>$UEventThread.run(UEventObserver.java:<*>)
release:lock=<*>, flg=<*>, tag="WakerLock:<*>", name=<*>", ws=null, uid=<*>, pid=<*>
at <*>(TcpSocket.java:<*>)
action:<*>, mPermissionType:<*>
getTempInfo error: null, <*>
<*>: sys<*> (No such file or directory)
shouldBlockLocation running ...
at <*>(FileUtils.java:<*>)
onStepCounterChange stepsNum:<*>
updateClipping isOverlap:false
set(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=<*>
<*>|upLoadOneMinuteDataToEngine time=<*> step=<*> altitude=<*> motion=<*>
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
handleLteCaStatusChange
EventCenter Get :<*>
updateTint: tint=<*>
isHwSoundAllow pkg=<*>, userId=<*>, cfg=<*>
updateLightsLocked --> mBatteryLight.turnOff
DeviceActiveState{ when=-6ms what=<*> target=<*>$SmHandler }
getTempInfo error: null, <*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
random pool - hexdump(len=<*>): [REMOVED]
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:system<*>}, intent:<*>, receiver size:<*>, flags: <*>
CTRL-DEBUG: ctrl_sock-sendmsg: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
bssid=<*>:<*>:<*>:8d:f7:8e;freq=<*>;level=-<*>;flags=<*>;ssid=PW_2.4G;
WPS: attr type=<*> len=<*>
bssid=bc:d1:<*>:b3:5e:c2;freq=<*>;level=-<*>;flags=<*>;ssid=FAST_B35EC2;
WPS: attr type=<*> len=<*>
applyInPlace=true shouldPeek=false alertAgain=true
msg.recv{<*>} XmlMsg.decodeBuf(XmlMsg.java:<*>) RECV <*> bytes [<*>]_00_03_02_03_13_05_8B_98_6A_A4_3F_14 cmdCode(CC_SetPersonalState.<*>)msgType(MT_ACK.<*>)msgClass(MC_InstanceMessage.<*>)sender(ST_Mobile.<*>)crypted(true)zipped(false)nobase64(true)length(<*>)version(<*>)sno(<*>)
refreshBatteryInfo: null
Error reading charge file
<*>|setWriteDBLastDataMinute to Prefence success
at <*>$UEventThread.run(UEventObserver.java:<*>)
Broadcasting intent ACTION_RAC_CHANGED
isCurrentBySim()=false
readRilMessage: Buffer = [B@<*> HexData = [<*>]
action:<*>, mPermissionType:<*>
at <*>.<init>(FileInputStream.java:<*>)
readRilMessage: Buffer = [B@<*> HexData = [<*>]
Handle message: <*>
Application <*> is depended by other app, delay to H!
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
start process:<*> reason:broadcast pid:<*> uid:<*> pkgs:null
<*>|after compensate: cache step_10073
applyInPlace=true shouldPeek=false alertAgain=true
t:false, fl: false, p: <*>, ce: true, we: true
scheduleTimeTickEvent triggerAtTime = <*>
updateWifiState: intent=act:<*>  flag:<*> *=* networkType=<*> reason=specificDisabled inetCondition=<*> extraInfo=cmnet noConnectivity=true
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
<*>|getTodayTotalSteps <*>
sendMessage with obj100
getTempInfo error: null, <*>
handle_exception_events enter
getRcvData() TimeGsmLevel2 :  <*>
<*>|compensate received
getTempInfo error: null, <*>
onShowStatusChange show:false
Acquiring suspend blocker "PowerManagerService.WakeLocks".
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
<*>|compensate <*> <*>
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
Client defaulted notificationFrames to <*> for frameCount <*>
<*> -> ACDB_CMD_GET_AUDPROC_COMMON_TABLE
disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:<*><*>}, flags: <*>
DefaultState CMD_SCREEN_STATE_CHANGED  rt=<*><*> <*> <*>
[aware_mem] process cleaner success pid:<*>,uid:<*>,<*>,[<*>],mHasShownUi:false,base,class:<*>,<*>,<*>,<*>,adj:<*> is killed
content:/<*> has changed to false
P2P: channels: <*>:<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>
isCurrentBySim()=false
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:system<*>}, intent:<*>, receiver size:<*>, flags: <*>
wlan0: Add radio work 'scan'@<*>
Dispatching event to interface: wlan0
AdBlockService:onConnectivityChanged last update success, just return
Sorted scan results
BSS: last_scan_res_used=<*><*>
Received action: <*>
[main<*>]AutoCheckReceiver romSurveyFlag = false(<*>.java:<*>)
Removed service that is not running: ServiceRecord{<*> u0 euid: <*> <*><*>.<*>}
WPS: attr type=<*> len=<*>
WPS: WFA subelement id=<*> len=<*>
[ReceiverDispatcher<*>]send msg to remote srv success(android<*>:-<*>)
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
mAm.startProcessLocked for service: ServiceRecord{<*> u0 euid: <*> <*>/.controller.BootDaemonService}, appinfo euid: <*>
cleanUpApplicationRecordLocked, pid: <*>, restart: false
t:false, fl: false, p: <*>, ce: true, we: true
receive data len = <*>
handleTimeUpdate
WPS: attr type=<*> len=<*>
is3GCalling is false,mCdmaSlot is -<*>
touch process [<*>], send to pg
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:-<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*>
state.clipTopAmount:<*>, i:<*>
bmp is null : false
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
ComposeMessageFragment @<*>   lifecycle onAttach
state.clipTopAmount:<*>, i:<*>
isCloneProcess = false
has unread messages!,isMarkAllReadEnable=false
create option menu
Classify cgroup warning: No such process
mSimSubId:<*> onDataActivity: direction=<*>
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
cleanUpApplicationRecordLocked, pid: <*>, restart: false
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*>
This method is no longer use
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
shouldBlockLocation  ret:false
getNeighboringCellInfo calling app is <*>
CubicBezierInterpolator  mControlPoint1x = <*>.<*>, mControlPoint1y = <*>.<*>, mControlPoint2x = <*>.<*>, mControlPoint2y = <*>.<*>
shouldBlockLocation running ...
shouldBlockLocation running ...
is3GCalling is false,mCdmaSlot is -<*>
HoldService:locationInfo switch is on . pid = <*>
Cannot call determinedVisibility() - never saw a connection for the pid: <*>
Continuing previous session
handleANRFilterFIFO,uid = 10113cmd = <*>
handleANRFilterFIFO,uid = 10113cmd = <*>
handleANRFilterFIFO,uid = 10113cmd = <*>
[ACC]processReportInd: X: -<*>.<*> Y: <*>.<*> Z: <*>.<*>  x_offset:<*>.<*> y_offset:<*>.<*> z_offset:<*>.<*>
shouldBlockLocation running ...
querySoundEffectsEnabled...
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
WhGgiLMYwKHSCoHmWvd1a2Hjk1HTqkaW3NP+buQAtQmRvdCKjvTB4oQH9xm15Y9xXzVTxo6d5UZm
FPSMonitor snapToPage whichPage = <*> delta = <*> duration = <*>
FPSMonitor  [Launcher , dispatchTouchEvent begin, false, true] up event  x = <*> y = <*>
playingUids:
shouldBlockLocation running ...
at <*>(ActivityThread.java:<*>)
writeSummaryFromParcelLocked, IType:<*>, mGsmCsCallTimeLen:<*>
bmp is null : false
ignore audio app: <*> stop delta time:<*>
Application requested orientation <*>, got rotation <*> which has compatible metrics
WatchThread{<*>} TcpClientThread.disconnectSocket(TcpClientThread.java:<*>) disconnecting to <*>:<*>
ClassLoader referenced unknown path: <*>
Change to single clock mode!
is3GCalling is false,mCdmaSlot is -<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Begin proc DNS response,  ip=<*>,self =<*>
svn_fopen returns:-<*>
AwareMem_EventTracker: [APP_ACTIVITY_FINISH_140370650] is abandoned for memory <*>
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
getOrInflateState subId:<*>
moveTaskToTop mTaskChanged:true
transitionTo:mode=<*>, isEmuiStyle=false
Destroyed <*> sockets on <*> in <*>.<*> ms
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
onTransact in code is: <*>
cleanUpApplicationRecord -- <*>
Active=[]; Available=[]; Errored=[]
upstreamIfaceTypes.add:<*>
nl80211: Supported vendor command: vendor_id=<*> subcmd=<*>
nl80211: Supported vendor event: vendor_id=<*> subcmd=<*>
MagicLink-BtAndWifiWrapper:====>handleWifiStateChanged: WIFI_STATE_ENABLED
CTRL_IFACE: GET_NETWORK id=<*> name='wapi_key_type'
nl80211: Scan frequency <*> MHz
c8:3a:<*>:4b:c9:<*> freq=<*> qual=<*> noise=-<*>~ level=-<*> snr=-<*> flags=<*> age=<*> est=<*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
receive data len = <*>
BoostFramework() : mPerf = <*>@<*>
random pool - hexdump(len=<*>): [REMOVED]
WPS: attr type=<*> len=<*>
WPS: WFA subelement id=<*> len=<*>
WPS: attr type=<*> len=<*>
mAm.startProcessLocked for service: ServiceRecord{<*> u0 euid: <*> <*>/.controller.BootDaemonService}, appinfo euid: <*>
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
proxyWakeLockByPidUid, pid: <*>, uid: <*>, proxy: true
getTempInfo error: null, <*>
WPS: attr type=<*> len=<*>
Calling fingersense_touch_up()
WPS: WFA subelement id=<*> len=<*>
HwSensorManager version: <*>
WPA: Derived Key MIC - hexdump(len=<*>): 3e <*> f6 0c e7 <*> <*> <*> c2 3d ff <*> 1a b4 <*> <*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
wlan0: Control interface command 'DRIVER SETSUSPENDMODE <*>'
action:<*>, mPermissionType:<*>
isCdma:false
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:svn_closeAll begin!!!![<*>]
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
DsSearchIndexablesProvider error:add raw data:智能截屏
mSingleHandSwitch =<*>
Releasing suspend blocker "PowerManagerService.WakeLocks".
stopNavigating, mStarted=false
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
getOrdinal failed name is not in the enum map, name =
PrintWoker poll timeout , shutdown
WebMonitor [mNetWorkIsSuck=<*> mUIDIsSuck=]  WebSpeed [WEBSENDSEGS=<*>  WEBRESENDSEGS=<*>  WEBRECVSEGS=<*>  WEBERRSEGS=<*>  WEBOUTRSTS=<*>  WEBESTABLISRST=<*>  WEBRTTDURATION=<*>  WEBRTTSEGS=<*>  WEBSRTT=<*>  WEBSNDDUPACKS=<*>  SENDSEGS=<*>  RESENDSEGS=<*>  RECVSEGS=<*>  ERRSEGS=<*>  OUTRSTS=<*>  ESTABLISRST=<*>  RTTDURATION=<*>  RTTSEGS=<*>  SNDDUPACKS=<*>  suckTimes=<*> recovage_times=<*>]
obtain, mHwFlags=<*>
CablComputeBacklightLevel(): UpdateType = DifferentSceneUpdate
get AllImpl object = <*>@<*>
acquire lock=<*>, flags=<*>, tag="pushagentPoxy", name=<*>, ws=null, uid=<*>, pid=<*>
nl80211: Received scan results (<*> BSSes)
random_mix_pool - hexdump(len=<*>): [REMOVED]
updateTint: tint=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
rotationForOrientationLw(orient=-<*>, last=<*>); user=<*>
MyOrientationListener: updateRotation.
Create obj success use class <*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null tick defaults=<*> flags=<*> color=<*> groupKey=nf_type_1610612739 actions=<*> vis=PRIVATE)
showNotificationAll
applyInPlace=true shouldPeek=false alertAgain=true
requestLayout() improperly called by <*>{<*> V.ED..C.. ......ID <*>,<*><*>,<*> #<*> android:id<*>} during layout: running second layout pass
updateClipping isOverlap:false
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
transferRemoteInputFocus: <*>
onEntryRemovedInternal:<*>|<*>|<*>|null|<*>, group=<*>|<*>|g:nf_type_1610612739
RCV <- {<*> <*> Tethering stats list completed}
updateNotificationShade
Good NetWork Traffic , so mOnAppSuckTime, mUnModifyCount reset <*>
gettimer:interval=<*>
GetAddrInfoHandler addr: <*> {<*>, <*>, <*>} <*>
send data return = <*>
QSEECom_send_cmd return!
receive data len = <*>
Unhandled message when=<*> what=<*> arg1=<*> arg2=<*>
WPS: attr type=<*> len=<*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
<*>$NameNotFoundException: <*>
at <*>(Settings.java:<*>)
LauncherDownloadModel onReceive intent=Intent { act=<*> dat=package:<*> flg=<*> (has extras) }
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:system<*>}, flags: <*>
read type class <*> from disk sucessfully.
AsyncTask #<*>{<*>} <*>() = <*>
action:<*>, mPermissionType:<*>
VirusPkgParser:parse InputStream is null
applyRequirementsLocked to fused
at <*>$MethodAndArgsCaller.run(ZygoteInit.java:<*>)
updateNotificationShade
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
Create obj success use class <*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
SimFactoryManager setSimLoadingState slotId=<*> Sim2=true Sim1=true
HoldService:locationInfo switch is on . pid = <*>
HoldService:checkBeforeShowDialogWithPid, current value:<*>, type:<*>, pkg:<*>
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
csr
Releasing suspend blocker "PowerManagerService.WakeLocks".
<*> drop actions:null
proxy Config type:<*> key:<*> value:null
<*> { hibernation duration=<*> } transition to: end, reason:not_running
transitionTo: mode=MODE_TRANSPARENT, animate=false
Beacon IEs - hexdump(len=<*>): <*> 0e <*> <*> 2d 4c <*> 4e 4b 5f <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> ...
onProcessDied pid = <*>, uid = <*>
HoldService:locationInfo switch is on . pid = <*>
Transact:getHwAdminCachedValue to device policy manager service.
updateBluetooth::bluetoothEnabled:false, bluetoothConnected=false, bluetoothTransfering=false
windowsGone(): ActivityRecord{<*> u0 <*>/.activity.MainActivity t400 f}
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
Report temperature: [ap] temp :<*>  report_threshold:<*>
shouldBlockLocation  ret:false
WatchThread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown output: <*>: Socket is closed
GetAddrInfoHandler addr: <*> {<*>, <*>, <*>} <*>
state.clipTopAmount:<*>, i:<*>
wlan0: nl80211: scan request
nl80211: Scan included frequencies: <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>
WPS: attr type=<*> len=<*>
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u<*> <*>}: prev had <*>
ACTIVITY check resid: <*>, size=<*>
updateBluetooth::bluetoothEnabled:false, bluetoothConnected=false, bluetoothTransfering=false
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [START],Mode[r]
bssid=c8:3a:<*>:4b:c9:<*>;freq=<*>;level=-<*>;flags=<*>;ssid=Tenda_4BC990;
WPS: attr type=<*> len=<*>
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*>
random pool - hexdump(len=<*>): [REMOVED]
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
Calling fingersense_classify_touch()
WPS: WFA subelement id=<*> len=<*>
WPS: attr type=<*> len=<*>
Enter updateQoeLevel level = <*>
shouldBlockLocation running ...
WPS: attr type=<*> len=<*>
update:rxPkts:<*>,txPkts:<*>,rxBytes:<*>,txBytes:<*>
######### GET RTT:<*> ########
Display ready!
mThermalService is NULL!
doCheckAccessInternet
C onDismissRequested reason = <*>
WPS: attr type=<*> len=<*>
total<*>,<*>:<*><*>,<*><*>,unknown:<*><*>
MSG_RETURN_AP_CURRY_RSSI rssi = -<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
QOS_level:<*>(<*>),DataDisable;use level<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
c: true, w: false, t: false, l: false
LeisureTrafficSetting:result is empty
Rcvd UNSOL response with <*> bytes data for SUB0
mRssiBadCount =<*>, RSSI not bad.
Application <*> is im app and connected ok, delay to H!
onCellLocationChanged
bssid_channel_tables count is : <*>
c: true, w: false, t: false, l: false
AwareAppMngSort: <*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,-<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>
bmp is null : false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
gettimer:interval=<*>
c: true, w: false, t: false, l: false
WPS: attr type=<*> len=<*>
WPS: attr type=<*> len=<*>
monitor check touch devices
LeisureTrafficSetting:result is empty
answer call by keyCode = <*>, down = false, isSupVolumnkeyAnswerCall = false
<*> load  mCurrentIndexOfList:<*> mLoadType:<*>
Apply window Height MATCH_PARENT
remove target not exist, maybe the UI process: uid: <*>, pid: <*>
[SocketRead_15:<*>:<*><*>]broadcast(),and mReceivers  <*>(android<*>:-<*>)
gettimer:interval=<*>
getTempInfo error: null, <*>
Thread<*>{<*>} TcpClient.disconnect_i(TcpClient.java:<*>) ==================== TCP CLIENT DISCONNECT ====================
PowerWarningParam:getValue value not exist in XML: high_level_for_freqapp_standard
setSampleRtt: rtt=<*>,rtt_pkts =<*>,rtt_when=<*>
Cache monitor msg as screen_off
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
get_spk_pa_type: pa is max98925
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
checkTransitions mState = <*>, mTargetState = <*>
huawei_audio huawei_choose_Handset_device_incall_forHWtest: test Type =<*>
Launcher.LauncherProvider  queried count: <*>
offsetBrightness=<*>.<*>,mOffsetBrightness_last59.<*>,lux=<*>.<*>,mPosBrightness=<*>.<*>,mIsUserChange=false,mDelta=<*>.<*>,defaultBrightness=<*>.<*>,mStartLuxDefaultBrightness=<*>.95333mLastLuxDefaultBrightness=<*>.<*>
Apply window without WALLPAPER
completedResumed: ActivityRecord{<*> u0 <*><*>.<*> t401}, launchTrack: outofsleep resumeTopComplete
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():<*>
Client requesting input be hidden, pid=<*>
Client requesting input be hidden, pid=<*>
Moving to PAUSED: ActivityRecord{<*> u0 <*>/.ui.LauncherUI t383} (due to timeout)
BoostFramework() : mPerf = <*>@<*>
WPS: attr type=<*> len=<*>
get AllImpl object = <*>@<*>
obtain, mHwFlags=<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
BSSID any
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
sendEvent:action=<*>, flag=<*>
RetryTaskController:Screen is off or Network is unable
stopOutput() output <*>, stream <*>, session <*>
change state: <*> --> <*>, StartLockTime=<*>
Apply window without WALLPAPER
showNotificationAll
release:lock=<*>, flg=<*>, tag="ServiceStateTracker", name=<*>", ws=null, uid=<*>, pid=<*>
oem-qmi: request_handler recv_id = <*>
hideTraffic
ACTION_BATTERY_CHANGED pluggedType: <*>
has widget app: <*>
deInit mIsReceiverRegistered : true
process buffer and get message
Releasing suspend blocker "PowerManagerService.WakeLocks".
getTempInfo error: null, <*>
Received TIME_TICK alarm; rescheduling
getRcvData() TimeScreenOn :  <*>
process buffer and get message
FingerStat Visible: false; Interactive: false; Switching: false; Bouncer:false; GoingToSleep: false Occluded: false; dreaming: false; Authenticated: true
trim and enqueue background Parallel:(<*>) Ordered:(<*>)(BroadcastRecord{<*> u0 <*>})
receive data len = <*>
qsc_decode end
stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false
Setting device_provisioned has moved from <*> to <*>.
transitionTo: mode=MODE_TRANSLUCENT, animate=false
c: true, w: false, t: false, l: false
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=true
hintUserSwitchToMobileWhileWifiDisconnected, state=CONNECTED  type =<*>
MSG_APP_mms type is null or mobile data is turned off, bail
HiWiService onCreate
[Thread<*><*>]checkingResultFlag false, start to check upgrade result(hwouc<*>.java:<*>)
trim and enqueue background Parallel:(<*>) Ordered:(<*>)(BroadcastRecord{<*> u<*> <*>})
[main<*>]getFirmwareVersion(), getDisplayFirmwareVersion MLA-AL00C00B318-log(<*>.java:<*>)
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
updateNotificationShade
parse item null
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:idle state change to IDLE
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => [START]: pcFileName [anyofficeuserorgcode]
cancelNotificationWithTag pid <*>,uid = <*>,tag = null,pkg =<*>,id =<*>
cleanupDisabledPackageReceiversLocked for userId <*>
querySoundEffectsEnabled...
<*>|getTodayTotalSteps <*>
[ReportVersionInfo.uploadVersionInfo]uploadCurrentHardwareVersion success
Calling fingersense_touch_up()
Client requesting input be hidden, pid=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
not 3G net type. do nothing.
updateTint: tint=<*>
<*>|before compensate: cache step_13663
[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>]
presently, hw_update_color_temp_for_rg_led interface not achieved.
ContentChange for slot: <*>
<*>|before compensate: cache step_13707
updateSlider1 seekBarProgress:<*>
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
Client requesting input be hidden, pid=<*>
<*>|compensate <*> <*>
EventCenter Get :<*>
onStepCounterChange stepsNum:<*>
transferRemoteInputFocus: <*>
fingersense_touch_up() finished
<*>|compensate <*> <*>
<*>|getTodayTotalSteps <*>
No peeking: unimportant notification: <*>|<*>|<*>|null|<*>
ContentChange for slot: <*>
presently, hw_update_color_temp_for_rg_led interface not achieved.
Client requesting input be hidden, pid=<*>
csr
removeNotificationChildren
disableEffects=null canInterrupt=false once update: false
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>
<*>|getTodayTotalSteps <*>
getNeighboringCellInfo calling app is <*>
APS: 2DSDR: CanvasContext::setSDRZoomout(), the SDR ratio from ViewRootImpl is -<*>.<*>, native window width = <*>, height = <*>
onEntryAdded:<*>|<*>|<*>|null|<*>, group=<*>|<*>|<*>|null|<*>
EventCenter Get :<*>
resetPagerState
<*>.
updateClipping isOverlap:false
stopMonitoringMotionLocked()
ready=false,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
onEntryUpdated:<*>|<*>|<*>|null|<*>
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE
RCV <- {<*> <*> Firewall command succeeded}
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
readRilMessage: Buffer = [B@<*> HexData = [<*>]
<*>|getTodayTotalSteps <*>
ambient lux=<*>.<*>,timeStamp =<*>
begin
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:<*><*>}, flags: <*>
getOrInflateState subId:<*>
frozenCheckLocked mDispatchFrozen=<*> mNextUnblockedEvent=<*>
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*>
mVSimCurCardType is -<*>
monitor check touch devices
check dependency pid: <*> is depended by pid: <*>
isCurrentBySim()=false
is3GCalling is false,mCdmaSlot is -<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
fingersense_classify_touch() finished
APS: 2DSDR: <*>(), SDR ratio = <*>.<*>, layer height = <*>, scroll view height = <*>
act:<*>  flag:<*> FLAG_IS_FIRST_POWER_OFF_ALARM=false <*>=<*>
Client requesting input be hidden, pid=<*>
Invalid profile no. <*>, total profiles <*> only
[Thermal_Hw] temperature_filter: get invalid temperature, use old temp
Client requesting input be hidden, pid=<*>
Animating brightness: target=<*>, rate=<*>
DisplayPowerStatesetColorFadeLevel: level=<*>.<*>
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
received broadcast <*>
QSEECom_send_cmd return!
WatchThread{<*>} TcpClientThread.disconnectSocket(TcpClientThread.java:<*>) disconnecting to <*>:<*>
WatchThread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown output: <*>: Socket is closed
mThermalService is NULL!
Error reading charge file
APS: 2DSDR: <*>, we will clear SDR ratio
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
notifyInterfaceClassActivity: client is <*>$InterfaceObserver@<*>
mSimSubId:<*> onDataActivity: direction=<*>
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
@@@@@@@@@@@@ uid :<*> download :true
shouldBlockLocation  ret:false
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc
t:false, fl: false, p: <*>, ce: true, we: false
updateSignalStrength: signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte
at <*>(SQLiteConnection.java:<*>)
[ap] temp_new :<*>  temp_old :<*>
getSeekBarProgress isAutoMode:true current brightness:<*> percentage:<*>.<*>
get fingerprint key and deviceId is : <*>
oldFocusWindow: Window{<*> u0 <*><*>.<*>}, currentFocusWindow: null, currentFocusApp: AppWindowToken{<*> token=Token{<*> ActivityRecord{<*> u0 <*><*>.<*> t402}}}
presently, hw_update_color_temp_for_rg_led interface not achieved.
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
: successes to get AllImpl object and return....
main aa instance created!
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:<*>,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>]
HoldService:locationInfo switch is on . pid = <*>
Start pausing: ActivityRecord{<*> u0 <*>/.unihome.UniHomeLauncher t297}
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
received cell-signal:<*>
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
Skipping, withExcluded: false, tr.intent:Intent { act=<*> dat=file://<*>.apk typ=application<*>.android.package-archive flg=<*> cmp=<*>/.PackageInstallerActivity (has extras) }
enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|null|<*>
<*>|before compensate: cache step_14006
<*>|REPORT : <*> <*> <*> <*>
Create obj success use class <*>
showNotificationAll
BaiduLocation:locType: <*>
isCloneProcess = false
AwareMem_Kill: updateGroupList package: move high frequent=<*>, uid=<*>
cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>
SND -> {<*> bandwidth gettetherstats}
WatchThread{<*>} TcpClientThread.connect(TcpClientThread.java:<*>) will connect to <*>:<*>
onNotificationExpansionChanged called
No config file found for:<*>
getOrInflateState subId:<*>
is3GCalling is false,mCdmaSlot is -<*>
isCardAbsent slot:<*> slotState:<*>
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>, <*>.<*><*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*>
Create obj success use class <*>
isCloneProcess = false
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it
finishKeyguardDrawn -> waitForAllWindowsDrawn
onAcquired <*>
Proxy wakelock uid = <*> pid = <*>
isCurrentBySim()=false
at <*>.<init>(FileInputStream.java:<*>)
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
at <*>$UEventThread.run(UEventObserver.java:<*>)
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:<*><*>}, intent:<*>, receiver size:<*>, flags: <*>
sending alarm Alarm{<*> type <*> when <*> <*>},repeatInterval = <*>,listenerTag =null
SND -> {<*> firewall set_uid_rule standby <*> deny}
Can't find ssid.
at <*>(FileUtils.java:<*>)
updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>
Error reading charge file
Releasing suspend blocker "PowerManagerService.WakeLocks".
ScheduleRecordPowerConsumeReceiver:onReceive: Action = <*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
at <*>$UEventThread.run(UEventObserver.java:<*>)
becomeActiveLocked, reason = screen
Excessive delay in setPowerMode(): 216ms
Invalid profile no. <*>, total profiles <*> only
select_devices for use case (low-latency-playback)
applyIconTint ignore
getRecentTasks: topActivity=ComponentInfo{<*><*>.<*>}
unproxy <*> broadcast OK !
connect :true
c: true, w: false, t: false, l: false
PowerManagerNotifier onUserActivity: event=<*>, uid=<*>
Skipping, withExcluded: false, tr.intent:Intent { act=<*> dat=file://<*>.apk typ=application<*>.android.package-archive flg=<*> cmp=<*>/.PackageInstallerActivity (has extras) }
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...
release:lock=<*>, flg=<*>, tag="AudioMix", name=audioserver", ws=null, uid=<*>, pid=<*>
do_identify: result:<*> score:<*> index:<*> updated_template_size:<*> coverage:<*> quality:<*>
notifyFinishedGoingToSleep
setBackgroundColor:new=<*>, old=<*>
onWakeLockChanging: flags=<*>, tag="*alarm*", packageName=android, ownerUid=<*>, ownerPid=<*>, workSource=WorkSource{<*>}
main{<*>}
at <*>(Native Method)
getTempInfo error: null, <*>
send: <*>
stop: <*><*><*> <*>:<*>:<*>
create: <*>
RCV unsolicited event from native daemon, event = <*> IfaceClass active <*> <*> <*>
<*>|upLoadOneMinuteDataToEngine time=<*> step=<*> altitude=<*> motion=<*>
not in link monitoring mode, ignore TCP result .
notifyInterfaceClassActivity: client is <*>$<*>@<*>
Proxy wakelock uid = <*> pid = <*>
getTempInfo error: null, <*>
getTempInfo error: null, <*>
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<*>: sys<*> (No such file or directory)
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) <<< ERROR(<*>) >>> connect fail to <*>:<*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*>:DaemonService<*>}
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
shouldBlockLocation  ret:false
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry
isCurrentBySim()=false
at <*>.<init>(FileInputStream.java:<*>)
update()   updated:  <*>
PackAutoLog onPrePack
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
updateTint: tint=<*>
RCV <- {<*> IfaceClass idle <*> <*>}
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
<*>| ## MSG_DEAL_SYSTEM_EVENT <*>
currentUid = <*> userId=<*>
send data return = <*>
sending alarm Alarm{<*> type <*> when <*> <*>},repeatInterval = <*>,listenerTag =null
[ReceiverUtils.resumeLogUpload]
getOrInflateState subId:<*>
database changes while still querying, cancel last query <*>@<*>
out_get_latency: Latency <*>
Workspace updateCustomizeShortcuts view invalidate ShortcutInfo(title=微信)
releaseOneDevice: not sending command, device argument (<*>) does not match any registered device
startQuery: query times arrive max, return!
<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;
t:false, fl: false, p: <*>, ce: true, we: false
CFG_DIRS length : <*>
shouldBlockLocation running ...
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output
onDataActivity: direction=<*>
onDataActivity: direction=<*>
transferRemoteInputFocus: <*>
BadgeContentObserver  getBadgeNumber: <*> mComponentName :ComponentInfo{<*><*>.<*>}
onNotificationExpansionChanged called
onTransact in code is: <*>
transferRemoteInputFocus: <*>
Enqueueing ordered broadcast[background] BroadcastRecord{<*> u0 <*>}: prev had <*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
Client requesting input be hidden, pid=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
fingersense_touch_up() finished
onSignal: mSubId=<*>,currDataSubID=<*>
new ScenarioAction sPoolSize: <*>
Client requesting input be hidden, pid=<*>
APS: 2DSDR: CanvasContext::setSDRZoomout(), the SDR ratio from ViewRootImpl is <*>.<*>, native window width = <*>, height = <*>
removeNotificationChildren
Client requesting input be hidden, pid=<*>
ImsServiceSubHandler : Message received: what = <*>
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
isCurrentBySim()=false
[aware_mem] process cleaner success pid:<*>,uid:<*>,<*>:dppushservice,[<*>],mHasShownUi:false,base,class:<*>,<*>,<*>,<*>,adj:<*> is killed
formatChinaDateTime equals.
getTempInfo error: null, <*>
summary = null
onSignalStrengthsChanged signalStrength=SignalStrength: -<*> <*> -<*> <*> -<*> <*> -<*> <*> <*> <*> -<*> -<*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*>
Transact:setSystemUIColor to status bar service
search
obtain, mHwFlags=<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g
doTemperatueWarning, health:<*>
removeNotificationViews:<*>|<*>|<*>|null|<*>
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>
received cell-signal:<*>
onEntryAdded:<*>|<*>|<*>|null|<*>, group=<*>|<*>|<*>|null|<*>
stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false
WatchThread{<*>} TcpClient.connect(TcpClient.java:<*>) ==================== TCP CLIENT CONNECT [<*>] ====================
QOS_level:<*>(<*>),use RTTLvl:<*>;RATLvl:<*>
Invalid profile no. <*>, total profiles <*> only
GetAddrInfoHandler addr: <*> {<*>, <*>, <*>} <*>
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>
getOrInflateState subId:<*>
showNotificationAll
updateClipping isOverlap:false
updateNotificationShade
InputDispatcher::monitor frozen check!
disableEffects=null canInterrupt=false once update: false
setOverlap mOverlap:true, mDimmed:false
updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true
isCurrentBySim()=false
getOrInflateState subId:<*>
No peeking: not allowed notification: <*>|<*>|<*>|null|<*>
mSimSubId:<*> onDataActivity: direction=<*>
interceptKeyBeforeQueueing: key <*> , result : <*>
Create obj success use class <*>
[Thermal_Hw] temperature_filter: get invalid temperature, use old temp
Start proc <*>:<*>:dppushservice<*> for service <*><*>.<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Invalid profile no. <*>, total profiles <*> only
updateNotification(StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=-<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)))
applyInPlace=true shouldPeek=false alertAgain=true
updateNotificationShade
isCurrentBySim()=false
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte
shouldBlockLocation  ret:false
[pa_0] temp_new :<*>  temp_old :<*>
WeatherDynamicUpdater update before : mDrawingData[<*>] = num0:<*>, <*>, <*>
bmp is null : false
begin
begin
mIntentReceiver begin
getTimeTickInfo:[mMillisUntilFinished:<*>, mHour:<*>, mMinute:<*>, mSecond:<*>]
no controller energy info supplied
getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>
P2pDisabledState{ when=<*> what=<*> target=<*>$SmHandler }
onReceive ,intent:Intent { act=<*> flg=<*> cmp=<*>/.<*> (has extras) }
handle action thermal policy:<*>
updateDimmedActivatedHideSensitive overlap:false
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*>
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte
action:<*>, mPermissionType:<*>
<*>: sys<*> (No such file or directory)
notifyInterfaceClassActivity: client is <*>$<*>@<*>
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
Create obj success use class <*>
Create obj success use class <*>
Acquiring suspend blocker "PowerManagerService.WakeLocks".
c: true, w: false, t: false, l: false
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
mVSimCurCardType is -<*>
at <*>$<*>.onUEvent(UsbDeviceManager.java:<*>)
getTempInfo error: null, <*>
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
applyIconTint ignore
Proxy wakelock uid = <*> pid = <*>
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:<*><*>}
action:<*>, mPermissionType:<*>
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
at <*>(HwBastet.java:<*>)
acquire lock=<*>, flags=<*>, tag="RILJ_ACK_WL", name=<*>, ws=null, uid=<*>, pid=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
proxyWakeLockByPidUid, pid: <*>, uid: <*>, proxy: false
AwareUserHabit: getMostFrequentUsedApp is called
onShowStatusChange show:false
at <*>.<init>(FileInputStream.java:<*>)
at <*>(FileUtils.java:<*>)
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
action:<*>, mPermissionType:<*>
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
at <*>$<*>.onUEvent(UsbDeviceManager.java:<*>)
updateClipping isOverlap:false
release:lock=<*>, flg=<*>, tag="eventloop", name=android", ws=null, uid=<*>, pid=<*>
Acquiring suspend blocker "PowerManagerService.WakeLocks".
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
EventCenter Get :<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Send register tunnel request msg ok!
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => [START]: pcFileName [anyofficeuserorgcode]
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
at <*>(FileUtils.java:<*>)
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*>
notifyInterfaceClassActivity: client is <*>$<*>@<*>
at <*>.<init>(FileInputStream.java:<*>)
handleMessage what = <*>
Releasing suspend blocker "PowerManagerService.WakeLocks".
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4_5G_for_mcc
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false
onDataConn: mSubId=<*>,state=<*>,networkType=<*>
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null
StartupResidentService:InnerHandler Message:<*>
come into oem_qmi_common_stream_from_modem_len --->modem
handle_exception_events enter
create: <*>
create: <*>
RemainingTimeSceneHelper:invalid condition, do not update time scene.
proxy app:<*>,uid:<*>,result:true
Setting HAL auto-suspend mode to false
process buffer and get message
Unfreeze <*> OK !
[tiger]setBastetFilterInfo action 3pid <*>
[ReceiverManager] ReceiverManager action: <*>
STATS_UNLOCK_FILE doesn't exist!
wakeUpService: start transaction service ...
Connectivity Change to notify im app: <*>
retrieveServiceLocked, callerApp: ProcessRecord{<*> <*>:<*><*>}, flags: <*>
[DisposeLogUploadProgress.dispose] exception is not null
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
at <*>(Looper.java:<*>)
No Network Security Config specified, using platform default
[ls, -l, <*>.apk]
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:SetRegisterAuthID : create tunnel service type is sdk
<<*><*><*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:L4VPN Create Tunnel!
WidgetDataManager:colorType : <*>
report state:<*> event type:<*> pid:<*> uid:<*> pkg:null to pid: <*>
@@@@@@@@@@@@ uid :<*> download :true
icon : <*> found in app
AutoMode=true,Target=<*>,Current=<*>,amount=<*>.<*>,duration=<*>.<*>
<*>|before compensate: cache step_14585
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:false activityOut:true isRoaming:false
New app record ProcessRecord{<*> <*>:<*><*>} thread=<*>@<*> pid=<*> procname=<*>
mSeekListener onProgressChanged progress:<*> fromUser:false
<*>|before compensate: cache step_14596
presently, hw_update_color_temp_for_rg_led interface not achieved.
updateClipping isOverlap:false
obtain, mHwFlags=<*>
isSpeakerphoneOn...
mVSimCurCardType is -<*>
out_get_latency: Latency <*>
VolumeDialogController.Callbacks onScreenOff
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
readRilMessage: Buffer = [B@<*> HexData = [<*>]
notifyInterfaceClassActivity: client is <*>$Stub$Proxy@<*>
at <*>(Native Method)
<*>|before compensate: cache step_14801
mIsScreenOn is: false, WAKEUP alarm trigger action = ALARM_ACTION(<*>) package name is: <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
at <*>(Native Method)
<*>: sys<*> (No such file or directory)
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
notifyInterfaceClassActivity: client is <*>$<*>@<*>
<*>| getTodayTotalDetailSteps from Prefence success and todaySendorSteps= <*>##<*>##<*>##<*>##<*>##<*>
updateTint: tint=<*>
[SocketRead_19:<*>:<*><*>]total connect Time:<*> process quit, so close socket(android<*>:-<*>)
applyInPlace=true shouldPeek=false alertAgain=true
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
hideTraffic
keyAppBroadcastQueueForIntent intent Intent { act=<*> flg=<*> (has extras) } on bgkeyapp queue
<*>|getTodayTotalSteps <*>
remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching
Heartbeat timer.timers{<*>} SimpleThread.onDeath_i(SimpleThread.java:<*>) thread end
<*>: sys<*> (No such file or directory)
EventCenter Get :<*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
action:<*>, mPermissionType:<*>
getConfigForPhoneId phoneId is invalid
Rcvd UNSOL response with <*> bytes data for SUB0
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
Rac Change (PDC) data: [-<*>, -<*>]
at <*>$UEventThread.sendEvent(UEventObserver.java:<*>)
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4GPLUS isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false
at <*>(TcpSocket.java:<*>)
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g
onNotificationPosted: StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*>
is3GCalling is false,mCdmaSlot is -<*>
Broadcasting intent ACTION_RAC_CHANGED
at <*>$UEventThread.run(UEventObserver.java:<*>)
RCV <- {<*> IfaceClass active <*> <*> <*>}
<*>|MSG_RECORD_DATA_TO_FILE datas.size()=<*>
[ReceiverDispatcher<*>]init bastet error(android<*>:-<*>)
[ReceiverDispatcher<*>]read to Send:DA(android<*>:-<*>)
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*>
Proxy wakelock uid = <*> pid = <*>
disableEffects=null canInterrupt=false once update: false
hideTraffic
handleKeyguardDone
Apply window without WALLPAPER
<*> -> ACDB_CMD_GET_AUDPROC_COMMON_TABLE
read Events lux:  <*>.<*>
enqueueNotificationInternal: pkg=<*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)
updateDimmedActivatedHideSensitive overlap:false
ConversationListFragment @<*>  lifecycle onResume
Application requested orientation -<*>, got rotation <*> which has compatible metrics
CallList - onUpdateCall
StatusBarNotifier - cancelInCall()...
CallButtonFragment - showSpeakerphoneOnIcon: false
check_usecases_capture_codec_backend:<*>: force routing <*>
ready=true,policy=<*>,wakefulness=<*>,wksummary=<*>,uasummary=<*>,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=-<*>,adj=<*>.0userId=<*>
action:<*>, mPermissionType:<*>
process buffer and get message
<*>|compensate <*> <*>
TelephonyConnection: Update state from DIALING to ALERTING for [TelephonyConnection objId:<*> telecomCallID:TC@<*> type:gsm state:DIALING capabilities:[Capabilities: CAPABILITY_SUPPORT_HOLD CAPABILITY_MUTE CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO] properties:[Properties:] address:xxxxxxxxxxxxxxxxxxxx originalConnection: callId: TC@<*> incoming: false state: ALERTING post dial state: NOT_STARTED partOfConf:N]
release:lock=<*>, flg=<*>, tag="RILJ_ACK_WL", name=<*>", ws=null, uid=<*>, pid=<*>
AwareMem_EventTracker: [APP_ACTIVITY_FINISH_142853225] is abandoned for memory <*>
fpc_tac_send_get_indices_cmd indices:<*>, index_count:<*>
updateBarBgColor:emuiStyle=<*>,statusBarColor=#<*>,navigationBarColor=#<*>, isEmuiLight=<*>
DisplayPowerStatesetColorFadeLevel: level=<*>.<*>
onFinishedGoingToSleep(<*>)
fpc_get_authenticator_id id <*>
call busy and not start clean apps.
updateTint: tint=<*>
StatusBarNotifier - isTopIsFullscreen = true--isTopIsFullscreenInput()--false
updateNotification(StatusBarNotification(pkg=<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|<*>|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=<*> flags=<*> color=<*> vis=PRIVATE)))
framework setLivenessSwitch is ok ---end
Setting mDismissKeyguard true by win Window{<*> u0 <*><*>.<*>}
Cache monitor msg as screen_off
NormalTrafficAnalysis:alert byte = <*>, so return
removeNotificationChildren
TafficState:default sub id = 0slotIndex = <*> subscriptionId = <*>
send: <*>
action:<*>, mPermissionType:<*>
showNotificationAll
MyOrientationListener: updateRotation.
obtain, mHwFlags=<*>
platform_get_output_snd_device: exit: snd_device(voice-handset)
QSEECom_send_cmd return!
EventCenter Get :<*>
receive data len = <*>
InCallPresenter - onCallListChange oldState= NO_CALLS newState=NO_CALLS
receive data len = <*>
msg.recv{<*>} TupHelper.configSip(TupHelper.java:<*>) getLocalIp = <*>
begin
begin
send data return = <*>
receive data len = <*>
begin
qsc_send_cmd finish
QSEECom_send_cmd return!
QSEECom_send_cmd return!
begin
qsc_decode end
begin
send data return = <*>
begin
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
<<*><*><*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*><*><*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed!
