EventTemplate,Occurrences
registerPluginDataListener <*> ,1
<*> <*> <*> <*> <*> <*> <*> is not <*> ,1
action:huawei.android.intent.action.SILENTDOWNLOAD_ALARM, mPermissionType:<*> ,1
isNetworkAvailable::netInfo isConnected! ,3
StatusBarNotifier - <*> <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
action:android.intent.action.PHONE_STATE, mPermissionType:<*> ,1
Start proc <*> <*> <*> <*> <*> ,1
collectReceiverComponents, callerApp: ProcessRecord{506ad58 <*>:com.android.systemui/u0a33}, intent:com.android.systemui.statusbar.visible.change, receiver size:<*>, flags: <*> ,2
<*> <*> <*> <*> outq=<*> send_len=<*> ,5
<*> <*> <*> <*> euid: <*> ,12
<*> <*> <*> = true ,2
<*> <*> <*> <*> <*> java.net.SocketException: Socket <*> <*> <*> ,1
<*> <*> <*> type <*> <*> <*> <*> <*> ,8
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> state = <*> ,1
huawei_audio huawei_choose_HandsFree_device_incall_forHWtest: test Type =<*> ,6
netType<*> ,1
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.04mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,1
proxyBroadcast:[com.huawei.appmarket] proxy:false ,1
Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW <*> <*> <*> cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) } ,4
printPackageInfo end. ,1
onTrimMemory level:<*> ,1
apply hwPhoneState.mSubId:<*> anyMobileVisible:false mIsAirplaneMode:false, mobileGroupVisible=true ,309
wifi_send_command: cmd:'IFNAME=wlan0 <*> <*> <*> ,2
cancelNotificationLocked,remove =com.sankuai.meituan ,2
[SdcardManager.isMounted]Mounted:/storage/emulated/<*>:true ,18
InCallPresenter - <*> <*> <*> <*> ,1
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,13
ActivityThread,callActivityOnCreate ,3
Apply window without WALLPAPER ,8
Enter QmiChr_FetchSignalFromModem ,1
<a href="http://www.huawei.com"> ,2
iqiyi message: failed to open /proc/<*>/cmdline ,15
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> do not need to <*> ,2
setSimCardReady <*> ,2
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x2b,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
<*> state is not <*> <*> ,2
<*> Branch <*> ,1
wapi_type='qualcomm' ,1
<*> <*> <*> <*> <*> <*> ......ID <*>,<*>-<*>,<*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> not in <*> <*> <*> <*> <*> <*> ,7
<*> <*> <*> <*> <*> = <*> <*> = <*> ,3
mThermalService is NULL! ,22
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Send <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> type is [<*>]! ,2
AdBlockService:onReceive action=android.net.conn.CONNECTIVITY_CHANGE ,2
<*> <*> RTT[<*>]=<*>, volume=<*> ,11
<*> : <*> <*> <*> <*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> ,1
sub =<*>,strMccMnc <*> <*> <*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> ,23
<<*>-<*>-<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> ,3
<*> stream <*>, <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> y = <*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> detect response <*> <*> id is [<*>]! ,1
enter setFunsToDefault() ,1
motionLocked() ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> : <*> ,9
<*> BSS: <*> <*> id <*> BSSID <*> <*> <*> <*> <*> ,1
Heartbeat timer.timers{<*>} <*> <*> <*> <*> ,5
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false ,37
<*> callerApp: <*> <*> <*> receiver size:<*>, flags: <*> ,1
getSeekBarProgress isAutoMode:true current brightness:<*> percentage:<*>.<*> ,39
<*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,2
onStartCommand com.huawei.lcagent.RESUME_UPLOAD ,2
stopMonitoringMotionLocked() ,14
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,71
Can't find ssid. ,11
getMode... ,6
platform_set_parameters: <*> <*> <*> ,5
<*> <*> android broadcastIntent}}) changed bounds; rebatching ,21
setAlarmsPending ... ,23
null ,4
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:FSM_Tool_LibcAccess ==> call <*> <*> <*> <*> ,1
[main-<*>]Network changed(hwouc/DownloadReceiver.java:<*>) ,1
Launcher onPause() ,5
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_Tree_Enc_Path =>Access <*> real path ok ,2
<*> <*> level = <*> ,3
<*> <*> <*> <*> <*> <*> x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,1
iqiyi message: ==== isProcesssExist: stat=<*>, errno=<*> ,21
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,7
<*> <*> what=<*> target=com.android.internal.util.StateMachine$SmHandler } ,5
DisplayPowerState :OFF ,9
<*> <*> <*> <*> <*> (<*> * <*> * <*> * <*> <*> <*> <*> <*> (<*> * <*> * <*> * <*> <*> ,1
<*> <*> <*> <*> <*> <*> = <*> <*> <*> <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,1
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*> ,1
<*> <*> <*> <*> } ,4
wifi_send_command: cmd:'IFNAME=wlan0 <*> <*> ,1
bssid=<*>:<*>:<*>:a3:5d:2e;freq=<*>;level=<*>;flags=<*>;ssid=KJS; ,1
<*> <*> <*> <*> is not <*> <*> <*> ,9
<*> <*> V.ED..... ......ID <*>,<*>-<*>,<*> #7f1403e3 app:id/speed} ,5
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x11,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,16
wlan0: Control interface command 'GET_NETWORK <*> <*> ,23
setVoLTECallStatisResult: chrVolteStatisticInfo= mCount=<*>, mAvgValue=<*>, mMaxValue=<*>, mMinValue=<*> ,1
fd received! ,1
setMobileDataIndicatorsHuawei subId:<*> visible:true <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
at android.os.Looper.loop(Looper.java:<*>) ,17
setBackgroundColor:new=<*>, old=<*> ,22
<*> = false, <*> = false, <*> = true, <*> = true, <*> = false, <*> = false, <*> = false ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> is: <*> ,1
notifyUiVisibilityChanged:vis=0xc0000700, SystemUiVisibility=0xc<*> ,4
notifyUiVisibilityChanged:vis=0x8608, SystemUiVisibility=0x<*> ,8
<*> <*> <*> can not <*> ,1
<*> <*> <*> <*> <*> <*> <*> = <*> ,5
notifyStartedGoingToSleep ,1
<*> <*> is null <*> <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Send udp detect packet ok when login,id:[<*>];count:[<*>]! ,7
<*> <*> <*> <*> <*> <*> size is <*> <*> <*> <*> size is <*> ,1
becomeInactiveIfAppropriateLocked() ,8
<*> connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,1
<*> <*> <*> type <*> <*> id <*> ,1
bssid=d8:<*>:ac:<*>:e7:dc;freq=<*>;level=<*>;flags=<*>;ssid=HX; ,1
bssid=e4:d3:<*>:8b:1e:a4;freq=<*>;level=<*>;flags=<*>;ssid=<*>; ,1
oem-qmi: recv_id_l = <*> recv_id=<*> ,1
wifi_send_command: cmd:'IFNAME=wlan0 SIGNAL_POLL' ,4
<*> <*> <*> <*> package: com.tencent.mm, pid: <*> ,1
onReceive, action:android.intent.action.BATTERY_CHANGED ,7
RCV unsolicited event from native daemon, event = <*> IfaceClass idle <*> <*> ,19
setLift <*>.<*> ,4
<*> <*> <*> <*> <*> <*> pid=<*> ,1
isAutoSceneRunning false ,14
acquire <*> <*> <*> <*> ws=null, uid=<*>, pid=<*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> <*> <*> <*> ,2
<*> <*> <*> u0 euid: <*> <*> euid: <*> ,10
setColorTemperatureAccordingToSetting new. ,7
virtual void android::IppAlgoSmartAE::onNewArrival(void *, void *, int, int, int) exit ,2
<*> - hexdump(len=<*>): ,1
dispatch ordered broadcast [background] <*> u0 android.intent.action.LTE_CA_STATE}, has <*> receivers ,4
WatchThread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown input: java.net.SocketException: Socket is closed ,4
state is <*> ,3
mobile iface:rmnet_data<*> ,2
[SmsProvider.query]读取短信数据 ,2
<*> <*> <*> <*> <*> to uc.huawei.com:<*> ,3
bssid=<*>:fc:<*>:<*>:<*>:ee;freq=<*>;level=<*>;flags=<*>;ssid=TP-LINK_90EE; ,1
clearAppTrackerData AppName:com.sankuai.meituanhd ,1
releaseOutput() <*> ,1
mLogUploadInfo.getUserType():<*> ,1
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) <*> <*> <*> <*> <*> <*> <*> to uc.huawei.com:<*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x23,uasummary=0x4,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,42
ImsSenderRxr : Tag <*> <*> <*> <*>[SUB0] ,35
getTempInfo error: null, <*> ,700
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,4
notifyInterfaceClassActivity: <*> <*> <*> ,5
proxyBroadcast:[com.huawei.appmarket] proxy:true ,1
<*> <*> <*> <*> does not <*> <*> <*> ,6
ImsServiceSub : <*> ,3
<*> when=<*> what=<*> target=com.android.internal.util.StateMachine$SmHandler } ,7
at com.android.providers.settings.SettingsProvider.insertGlobalSetting(SettingsProvider.java:<*>) ,1
[RouteService.onDestroy] ,3
ProximitySensor - Proximity wake lock already acquired ,5
<*> <*> size is <*> <*> <*> is <*> ,5
at java.io.FileOutputStream.<init>(FileOutputStream.java:<*>) ,1
BatteryStatisticsHelper:counts =<*> ,4
<*> - <*> is null ,1
com.android.bluetooth <*> ,1
CommandQueue, setBarBackgroundColor ,10
TelephonyConnection: clearOriginalConnection ,1
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> 6c <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
enable_audio_route: exit ,3
<*> <*> <*> <*> <*> is not in the <*> <*> name = <*> ,1
WPS: attr type=0x1049 len=<*> ,34
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x10,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,9
flush,<*>,handle <*> ,9
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*>, <*>, <*> <*> <*>, <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>, <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
[ReceiverDispatcher-<*>]send msg to remote srv success(android/null:<*>) ,5
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:KeySpace <*> <*> <*> <*> <*> ,3
checkPolicyOver currentTimeMillis-beforeTimeMillis<*> ,2
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*> ,1
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> <*> 2a <*> <*> <*> <*> <*> <*> <*> ... ,1
<*> = false, <*> = false, <*> = false, <*> = true, <*> = true, <*> = true, <*> = false ,4
acquire lock=<*>, flags=0x1, <*> <*> <*> uid=<*>, pid=<*> ,6
onError <*> ,5
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:<*>) ,1
RCV <- {<*> IfaceClass active <*> <*> <*>} ,46
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null <*> <*> <*> <*> <*> <*> <*> <*> ,1
MainActivity_stop_android.os.BinderProxy@f132d3f ,1
at com.android.systemui.qs.QSTile$H.handleMessage(QSTile.java:<*>) ,1
<*> <*> <*> <*> <*> false ,2
mVSimCurCardType is -<*> ,314
Setting HAL auto-suspend mode to true ,2
SimCardMethod:/getSimCardInfo: imsi is null ,2
refreshState=flashlight, BooleanState[,icon=ResourceIcon[resId=0x7f020212],label=手电筒,labelTint=<*>,textChangedDelay=<*>,contentDescription=手电筒,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=false] ,4
keyAppBroadcastQueueForIntent intent Intent { act=com.tencent.mm.ui.ACTION_DEACTIVE flg=0x10 (has extras) } on bgkeyapp queue ,1
unproxy app:com.huawei.espacev2,uid:<*>,result:true ,2
[ReceiverDispatcher-<*>]lastnetWorkType:<*> curNetWorkType:<*>(android/null:<*>) ,2
I/LocTech-Label :: OSOBSERVER :: Data Items In ,8
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) <*> <*> <*> ,5
onAuthenticated <*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:KeySpace : getkey <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> = <*> ,16
left handleScrnOnOffTimeStats, mScrnOffAccTime = <*>, mScrnOffAccTime = <*>, mScrnOnAccTime = <*> ,3
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null <*> <*> <*> <*> <*> <*> ,1
bssid=<*>:c5:8a:1a:4d:<*>;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,1
send data return = <*> ,122
<*> <*> <*> <*> <*> <*> (has extras) } <*> <*> <*> ,2
AutoStartupDataMgr:retrieveStartupSettings type <*> of <*> is <*> ,35
getDBOptId() ,1
reusing notification for key: <*> ,7
moveTaskToTop mTaskChanged:true ,21
<*> = false ,22
ImsSenderRxr : <*> = <*> status = <*> <*> = <*> <*> <*> <*> ,3
queryIntentActivitiesAsUser size <*> <*> <*> ,5
sending alarm <*> type <*> when <*> android},repeatInterval = <*>,listenerTag <*> <*> <*> <*> <*> ,2
<*> <*> = true ,17
handleNotifyScreenTurnedOn ,2
<*> - hexdump(len=<*>): <*> ,3
BluetoothManagerService:Message: <*> ,3
Is User Assigned Wallpaper? : <*> false ,1
<*> <*> <*> size is <*> ,5
sendMessage <*> <*> <*> <*> <*> ,2
<*> <*> <*> <*> <*> <*> <*> <*>, <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> ,1
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] is abandoned for memory <*> ,9
onReceive intent:act:android.intent.action.BATTERY_CHANGED flag:<*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*> ,9
read Events <*> ,5
AppAutoStartupPolicy:prevent start receiver of package com.ss.android.article.news for action <*> ,1
CablComputeBacklightLevel(): UpdateType = DifferentSceneUpdate ,2
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) enter ,3
OEMINFO_TPCOLOR_TYPE FAIL! ,5
AllIdleAppsList updatePackage <*> <*> <*> <*> size is <*> <*> <*> <*> size is <*> ,1
mTiffStream skip = <*> ,17
ImsSenderRxr : isValid = true type = <*> status = <*> <*> <*> <*> ,2
dispatch <*> <*> <*> <*> <*> <*> <*> <*> receivers ,4
<*> <*> <*> <*> = <*> <*> = <*> ,2
key: nsp-file-md<*> ,1
resumeSuspendedAutohide ,10
DisplayPowerController updatePowerState <*> useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, <*> screenAutoBrightness=<*>, userId=<*> ,1
Couldn't create directory for SharedPreferences file /data/user_de/<*>/com.android.settings/shared_prefs/caStatePreferences.xml ,8
TelecomServiceImpl: isInCall callState is <*>: <*> ,14
<*> <*> <*> = false ,36
WPS: attr type=0x1047 len=<*> ,39
DynamicUpdater registerReceiver ,10
<*> Visible: <*> <*> <*> Switching: false; Bouncer:false; GoingToSleep: false Occluded: false; dreaming: false; Authenticated: false ,1
<*> <*> <*> <*> <*> *, const <*> *, const void <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,1
Sending non-protected broadcast <*> from system uid <*> pkg <*> ,3
EventCenter Get <*> ,10
WPS: attr <*> <*> ,102
<*> <*> Intent { <*> <*> (has extras) } <*> <*> <*> ,1
<*> <*> <*> <*> = <*>, <*> = <*>, <*> = <*>, result = <*> ,2
call refreshData ,1
<*> <*> size is <*> ,2
WindowOrientationListener disabled ,6
<*> <*> V.ED..... ......ID <*>,<*>-<*>,<*> <*> app:id/msim_status_bar_operators_card_one_id} ,2
<*> Intent { <*> <*> ,6
[enter]setLteMobileDataState state=<*> ,1
<*> <*> com.android.phone broadcastIntent}}) changed bounds; rebatching ,13
Launcher.LauncherProvider launcher call - method:setAppBadgeCount arg:null extras:[app_shortcut_custom_id=null][app_shortcut_class_name=com.tencent.mm.ui.LauncherUI][app_badge_count=<*>] uid =<*> pid =<*> ,4
<*> <*> <*> is -<*> ,6
<*> no net <*> ,2
update_config=<*> ,1
0x55, 0x0, 0x0, 0x<*> ,6
<*> <*> is -<*> ,1
<*> <*> <*> disabled ,1
CalculateTrafficMethod:getAllUidBytesInPeriod start = <*>-<*>-<*> <*>:<*>:<*> end = <*>-<*>-<*> <*>:<*>:<*> ,1
AutoStartupDataMgr:isUnderControll third party not in whitelist: <*> ,46
onReceive: action=android.net.conn.CONNECTIVITY_CHANGE ,1
act:android.intent.action.TIME_TICK flag:<*> FLAG_IS_FIRST_POWER_OFF_ALARM=false android.intent.extra.ALARM_COUNT=<*> ,11
MediaExtractor::Create (null) ,1
<*> <*> = true, <*> <*> <*> <*> ,1
<*> <*> home <*> ,1
ImsServiceSub : <*> <*> = <*> ,6
key:logType value:<*> ,1
querySoundEffectsEnabled... ,42
BatteryIntent received: android.intent.action.BATTERY_CHANGED ,9
virtual void android::IppAlgoSmartAE::onNewArrival(void *, void *, int, int, int) enter ,1
GZeuYqV1VxUJdH8L9PrbTFi2bJfjSn3ihBF4kxkAiLRyFbDxAn6ehYfXVM+8IKH/t3fdbjVG4he<*> ,1
tcp.conn{<*>} TcpSocket.connect_i(TcpSocket.java:<*>) <*> <*> <*> ,1
<*> <*> not in <*> <*> ,3
<*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> <*> java.net.SocketException: Socket is not <*> ,1
Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.MAIN flg=0x10840000 cmp=com.android.incallui/.InCallActivity (has extras) } ,1
keyAppBroadcastQueueForIntent intent Intent { <*> flg=0x10 (has extras) } on bgkeyapp queue ,10
updateSlider2 seekBarProgress:<*> ,43
read from oem info: <*> ,8
Failed to get <*> ,4
handle action thermal policy:<*> ,1
<*> <*> <*> <*> <*> u0 euid: <*> <*> ,4
at java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:<*>) ,1
<*> <*> rt=<*>/<*> <*> <*> <*> <*> <*> ,1
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:true isRoaming:false ,6
<*> <*> Connect to server <*> <*> <*> <*> = <*> ,2
start ,1
install ,1
onEntryAdded:<*>|com.android.browser|<*>|null|<*>, group=<*>|com.android.browser|g:nf_type_<*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
qsc_send_cmd finish ,116
<*> <*> <*> add to <*> ,1
iqiyi message: create--runOnSubprocess isProcessExist true ,17
Watch Thread{<*>} <*> <*> <*> <*> = <*> ,6
StatusBarNotifier - <*> <*> <*> <*> in the <*> <*> <*> ,1
updateDNS:<*>.<*>.<*>.<*> ,1
cancelAutohide ,22
notifyListenerHuawei::origin typeIcon:<*> <*> <*> <*> <*> <*> ,4
[qiyi_LOG_INFO DownloadEpisodeAdapter] setUnFinishedText:DownloadObject{albumId='<*>', tvId='<*>', <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> downloadRequestUrl='', displayType=TV_TYPE, fileSize=<*>, progress=<*>.<*>, status=FINISHED, clicked=<*>, videoDuration=<*>, clm='锦绣未央', _a_t='锦绣未央', episode=<*>, year='<*>', playRc=<*>, taskStatus=<*>, mNeedDel=<*>, isDownloadPlay=true, speed=<*>, errorCode='', downloadTime=<*>, _pc=<*>, auto=<*>, cid=<*>, <*> <*> <*> <*> <*> segidx='null', accelerate_speed0'} ,1
CtrlSocket processCtrlSocket pid = <*> cmd = <*> param = <*> ret = <*> ,4
checkPackageLogState ,1
[LoginActivity.getIntentData]action：android.intent.action.MAIN ,1
addCurrentApInfo addCellIdInfo ,1
Launcher.LauncherProvider launcher-restore query - uri:content://com.huawei.android.launcher.settings/badge ,4
<*> <*> uid = <*> pid = <*> ,6
BaiduLocation:locType: <*> ,4
PoiDetailActivity_stop_android.os.BinderProxy@ed1bee<*> ,1
process buffer and get message ,56
proxy app:com.android.gallery3d,uid:<*>,result:true ,1
get_android_log_exception_write comes... ,1
reusing notification for key: <*>|com.huawei.health|<*>|null|<*> ,56
onScreenTurnedOff() ,16
<*> im app <*> <*> <*> <*> <*> <*> ,3
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null <*> <*> <*> <*> <*> <*> <*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*> ,1
tcp.conn{<*>} TcpSocket.connect_i(TcpSocket.java:<*>) connecting to <*> <*> <*> ,5
onStartedWakingUp() ,1
<<*>-<*>-<*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*>]:PubEvt_Close Getting a socket[<*>] from the Socket-table Failed! ,1282
<*> <*>.<*>/<*>, <*>.<*>/<*>, <*> ,2
total/<*>/<*>,android.uid.system:<*>/<*>/<*>,com.android.browser/<*>/<*> ,1
at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:<*>) ,2
<*> compensate: cache step_<*> ,4
<*> <*> <*> is <*> ,7
WPS: attr type=0x104a len=<*> ,36
<*>|calculateCaloriesWithCache datas.size=<*> ,9
updateCallLayout:isBackground=false, isInteractive=true ,2
cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*> ,3
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x10,uasummary=0x2,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> euid: <*> ,1
sendEvent:action=<*>, flag=<*> ,16
<*> : <*> <*> <*> ,1
Moving to PAUSED: <*> <*> <*> <*> (pause <*> ,1
setSystemUiVisibility vis=<*> mask=ffffffff oldVal=<*> <*> <*> ,1
at android.os.UEventObserver$UEventThread.run(UEventObserver.java:<*>) ,115
<MCT >< INFO> <*>: <*> <*> <*> <*> ,1
notifyInterfaceClassActivity: client is android.net.ip.IpManager$<*>@4c99c<*> ,27
Oem ID in QCRILHOOK UNSOL RESP is QOEMHOOK ,20
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,489
begin ,254
keyAppBroadcastQueueForIntent intent Intent { act=com.tencent.mm.plugin.report.service.KVCommCrossProcessReceiver flg=0x10 cmp=com.tencent.mm/.plugin.report.service.KVCommCrossProcessReceiver (has extras) } on bgkeyapp queue ,2
notifyUiVisibilityChanged:vis=0xc0000600, SystemUiVisibility=0xc<*> ,3
<*> is empty ,6
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=true, brightnessWaitRet=false, screenAutoBrightness=<*>, userId=<*> ,3
removeSensor,mHandles:{} ,3
ServiceNeeded not <*> <*> <*> u0 euid: <*> <*> ,5
measureTask <*> <*> <*> <*> <*> <*> <*> ,5
upstreamIfaceTypes.add:<*> ,7
onLayout:left=<*>, top=<*>, right=<*>, bottom=<*>, offset=<*> ,11
need to <*> <*> <*> ,6
new ScenarioAction sPoolSize: <*> ,49
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
onShowStatusChange show:false ,90
<*> <*> to server <*> ,4
<*> <*> <*> <*> <*> <*> <*> <*> uid: <*>, pid: <*> ,4
<*> <*> <*> void *, int, int, const char *, <*> <*> <*> <*> = <*>, <*> <*> <*> width = <*>, height = <*>, <*> <*> <*> param = <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,2
<*> <*> <*> <*> = <*> ,53
total/<*>/<*>,android.uid.system:<*>/<*>/<*>,com.android.browser/<*>/<*>,unknown:<*>/<*>/<*> ,3
register_com_android_bluetooth_a2dp ,1
Split enqueueing broadcast [callerApp]:ProcessRecord{580cfb2 <*>:com.huawei.health:DaemonService/u0a99} ,58
c: true, w: true, t: false, l: false ,3
Transact:getHwAdminCachedValue to device policy manager service. ,12
<*> <*> <*> mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=<*>, mDataState=<*>, <*> <*> <*> <*> <*> mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] ,3
queryIntentActivitiesAsUser size results:<*>, for package:com.huawei.espacev<*> ,9
getOrInflateState subId:<*> ,598
[main-<*>]HwOucApplication--onCreate, start(/HwOucApplication.java:<*>) ,1
<*> <*> <*> <*> <*> in the <*> <*> <*> <*> <*> ,3
<*>-<*>-<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
ImsServiceSubHandler : Message received: what = <*> ,35
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, getLocationOnScreen():-<*> ,53
ScreenState <*> ,2
[qiyi_LOG_INFO Utility] isQiyiPackage PackageName:com.qiyi.video ,4
<*> TcpClientThread.connect(TcpClientThread.java:<*>) will connect to <*> ,1
InCallActivity - <*> ,6
onScreenTurnedOn() ,14
HsmStat_event:"<*>","{TIME:<*>}" ,1
RCV <- {<*> Iface linkstate <*> <*> ,3
handleNotifyScreenTurningOn ,8
onTouchEvent: code=<*>, action=<*>, event=MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,1
setScrollingEnabled: false ,3
InCallPresenter - onCallListChange callList=com.android.incallui.CallList@86c7f<*> ,1
getRecentTasks: topActivity=ComponentInfo{com.android.browser/com.UCMobile.main.UCMobile} ,1
<*> <*> <*> rt=<*>/<*> <*> <*> ,3
unkown type ,1
onEntryRemoved:<*>|com.android.incallui|<*>|null|<*> ,5
APS brightness=<*>.<*>,ConvertToPercentage=<*>.<*> ,49
removeFreezeProcess pkg:com.tencent.mm ,2
Start proc <*> <*> <*> <*> ,6
Skipping, withExcluded: false, tr.intent:Intent { <*> <*> <*> ,7
<*> <*> <*> <*> <*> <*> <*> Bouncer:false; GoingToSleep: false Occluded: false; dreaming: false; Authenticated: false ,1
Heartbeat timer.timers{<*>} XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes <*> <*> ,2
<*> is not <*> so return <*> <*> <*> <*> ,3
RCV unsolicited event from native daemon, event = <*> IfaceClass active <*> <*> <*> ,23
<*> <*> <*> <*> <*>.<*>.<*>.<*> ,3
NetworkAgentInfo [WIFI <*> <*> <*> <*> <*> <*> <*> <*> ,1
Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW dat=file:///storage/emulated/<*>/tencent/TMAssistantSDK/Download/com.tencent.mm/1a41cb224d6d4b020176381a7c790891 typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) } ,3
updateSignalStrength: signalStrength=SignalStrength: <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> false gw|lte ,126
setFocusedApp update app ops, mTaskChanged set to:false ,1
acquire lock=<*>, flags=0x1, tag="eventloop", name=android, ws=null, uid=<*>, pid=<*> ,13
stopSelfIfIdle: STOP! ,4
formatChinaDateTime, change to China normalTime:晚上<*>:<*> ,4
<*>|upLoadOneMinuteDataToEngine time=<*> step=<*> altitude=<*> motion=<*> ,13
<*>| ## MSG_DEAL_SYSTEM_EVENT <*> ,4
bssid=<*>:f4:<*>:a1:<*>:7a;freq=<*>;level=<*>;flags=<*>;ssid=ChinaNet-u2yr; ,1
<*> = false, <*> = true, <*> = true, <*> = true, <*> = <*> ,1
hw_get_smart_display_supported: start++ ,2
release:lock=<*>, flg=0x0, <*> name=com.android.phone", ws=null, uid=<*>, pid=<*> ,1
DefaultState MSG_SCREEN_ON ,1
stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=false ,19
<*> <*> is invalid, do not <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> type is <*> <*> <*> <*> ,2
refreshBatteryInfo: null ,9
<*> <*> mask=ffffffff oldVal=<*> <*> <*> ,3
updateDataConnectionState: state=<*>,networkType=<*> ,2
<*> <*> size is <*> <*> <*> ,1
tcp.conn{<*>} TcpSocket.connect_i(TcpSocket.java:<*>) connecting to ip address <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:Send <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
org.iqiyi.video.ui.ci.onProgressChanged()<<*>> : 当前进度：<*> 缓冲大小:<*> 缓冲进度：<*> ,70
FingerStat Visible: <*> <*> <*> Switching: false; Bouncer:false; GoingToSleep: <*> Occluded: false; dreaming: false; Authenticated: false ,1
[qiyi_LOG_INFO DownloadEpisodeAdapter] <*> ,32
onExpandingStarted ,7
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:<*>.<*>, location:<*>, <*> <*> <*> ,1
<*> <*> need to <*> <*> <*> ,1
+CiZBXmWxJXQK7OqQ7nSoB/4NzSkui1K0jAWDY4TE3rjHk4rj48TpwF8sIGt4VLlq2gI5Gdg15aC ,1
NuPlayer::resetAsync() ,1
onTouchEvent: code=<*>, action=<*>, <*> { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,1
<*> <*> <*> called by <*> <*> <*> <*> <*> <*> <*> <*> ,2
<*> <*> <*> does not hold REAL_GET_TASKS; limiting output ,2
<*> type <*> <*> <*> is <*> ,3
remove:kg_policy_pswd_pin_patten_x0_<*> ,2
<*> <*> <*> <*> actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,3
<*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
setSystemUiVisibility vis=<*> mask=ffffffff oldVal=<*> newVal=<*> diff=<*> ,6
<*> <*> state = <*> <*> <*> <*> <*> ,1
AutoStartupDataMgr:retrieveStartupSettings type <*> <*> <*> is <*> ,4
HwPanelView restoreDrawState ,2
getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.plugin.subapp.ui.friend.FMessageConversationUI} ,1
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 6c <*> <*> <*> ,1
AbsProtectAppControl:handleMessage:<*> ,1
Dis-Feature : <*> ,13
moveDataForNVersion isNVersion ,1
mScreenBrightnessOverrideFromWindowManager=<*> ,1
<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>, ,1
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 actions=<*> vis=PRIVATE publicVersion=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
<*> <*> <*> <*> uid: <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
APS: 2DSDR: CanvasContext::setSDRZoomout(), the SDR ratio from ViewRootImpl is <*>.<*>, native window width = <*>, height = <*> ,42
<*>.<*>.<*>.<*> ,1
<*> <*> V.ED..... ......ID <*>,<*>-<*>,<*> <*> app:id/battery_outside_percent} ,2
<*> <*> user=UserHandle{<*>} id=<*> tag=null key=<*>|com.huawei.health|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> <*> <*> <*> <*> <*> ,1
transitionTo:mode=<*>, isEmuiStyle=true ,10
key:version value:<*> ,2
scheduleLightAlarmLocked(<*>) ,15
AutoStartupDataMgr:retrieveStartupSettings type <*> of com.netease.newsreader.activity is <*> ,4
<*> <*> <*> <*> false ,4
setBarState:<*> ,6
<*> <*> Intent { <*> <*> <*> (has extras) } <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,3
LightSensor, enable, <*>: en=<*> ,10
* freq_hint=<*> ,1
GetAddrInfoHandler addr: <*> {<*>, <*>, <*>} <*>.<*>.<*>.<*> ,39
<*> <*> <*> <*> <*> Intent { <*> (has extras) } ,1
StatusBarNotifier - <*> <*> <*> <*> ,10
<*> <*> ==================== TCP CLIENT <*> <*> ,6
<*> <*> <*> <*> sweep <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,3
<*> <*> <*> <*> <*> <*> ,834
<*> <*> does not <*> ,8
keyAppBroadcastQueueForIntent intent Intent { <*> <*> <*> (has extras) } on bgkeyapp queue ,8
action:android.intent.action.SIG_STR, mPermissionType:<*> ,206
<*> <*> due to no <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> eventTime=<*>, downTime=<*>, deviceId=<*>, <*> <*> ,2
action:android.intent.action.LTE_CA_STATE, mPermissionType:<*> ,19
screen off <*> delay to <*> ,1
InCallActivity - <*> <*> <*> ,2
<*> <*> bytes <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:KeySpace : Succeed in fetching group <*> ,1
<*> <*> <*> visible: false ,9
<*> <*> = <*> <*> = <*> <*> = <*> ,1
Calling a method in the system process without a qualified user: <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> V.ED..... ........ <*>,<*>-<*>,<*> #7f14004e app:id/msim_status_bar_operators_card_one_id} ,3
<*> is <*> ,10
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.52mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,2
<*> <*> type = <*> ,10
stopAuthentication() ,2
setKeyguardViewState: false-false ,3
<*> <*> <*> <*> is null ,2
at android.content.ContentProvider$Transport.query(ContentProvider.java:<*>) ,3
<*> <*> <*> duration=<*> } transition to: <*> <*> ,9
chinaDateTime:傍晚<*>:<*> ,6
CommonWebViewActivity_stop_android.os.BinderProxy@148f<*> ,1
Display device changed <*> <*> <*> ,1
action:qualcomm.intent.action.ACTION_RAC_CHANGED, mPermissionType:<*> ,58
moveToDoneDir ,2
<*> <*> <*> <*> <*> app ,2
LoginThread{<*>} LoginC.doLoginByStep(LoginC.java:<*>) Login_By_Step-> at <*> ,11
<*> <*> <*> <*> <*> state = <*> ,1
sending broadcast to Pid = <*>, Uid = <*> ,61
HwLocationManager:stopLocation. ,1
Ending session ,1
<*> <*> <*> <*> <*> <*> = <*>, <*> <*> <*> <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> type is <*> ,1
enter addToIdleMessage(type:<*>), mainloop is busy, add to idleMessage ,7
addOrUpdateApInfoRecord enter. ,1
at android.os.Handler.dispatchMessage(Handler.java:<*>) ,16
we: true ,1
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 actions=<*> vis=PRIVATE publicVersion=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x0 color=0xff33b5e5 <*> ,1
duration: <*> <*> <*> <*> (<*> * <*> * <*> * <*> <*> <*> <*> <*> (<*> * <*> * <*> * <*>) day ,2
notifyInterfaceLinkStateChanged <*> ,2
[qiyi_LOG_INFO Utility] isQiyiPackage <*> ,2
<*> <*> <*> <*> java.net.SocketException: Socket is closed ,2
onSignalStrengthsChanged signalStrength=SignalStrength: <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> false gw|lte level=<*> isSuspend=false levelOld=<*>,mSignalStrength level=<*> ,124
removeNotificationViews:<*>|com.sankuai.meituan|<*>|null|<*> ,2
<*> <*> sock=<*> sndbuf=<*> outq=<*> send_len=<*> ,4
proxy app:com.android.browser,uid:<*>,result:true ,1
bssid=<*>:<*>:bc:0a:f9:<*>;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,5
updateQsState:true ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> H! ,1
Reading a NULL string not supported here. ,33
<*> = null ,6
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4GPLUS isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false ,21
at com.huawei.keyguard.util.BitmapUtils.getSuggestColorInfo(BitmapUtils.java:<*>) ,6
<*> <*> <*> <*> <*> U=<*> StackId=<*> <*> <*> <*> <*> <*> U=<*> StackId=<*> <*> <*> <*> <*> U=<*> StackId=<*> <*> ,1
platform_get_native_support:napb: ui Prop enabled(<*>) version(<*>) ,6
action:android.intent.action.SCREEN_OFF, mPermissionType:<*> ,3
icon : <*> found in <*> ,1
is3GCalling is false,mCdmaSlot is -<*> ,288
dumpTcpResult: len=<*>,rtt=<*>,rttPkt=<*>,rttWn=<*>,cgt=<*>,cgtWn=<*> ,2
Animating brightness: target=<*>, rate=<*> ,55
<*> <*> line <*> <*> ,8
setColorTemperature:<*> ,6
bssid=<*>:<*>:<*>:a3:5e:<*>;freq=<*>;level=<*>;flags=<*>;ssid=KJS; ,1
acquire lock=<*>, flags=0x1, <*> <*> ws=null, uid=<*>, pid=<*> ,39
RCV unsolicited event from native daemon, event = <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> - hexdump(len=<*>): <*> ,1
scheduleCheckFreezeScreen sendMessageDelayed ,10
earliestValidTime + POWER_ON_BRIGHTENING_LIGHT_DEBOUNCE ,112
onDataConn: mSubId=<*>,state=<*>,networkType=<*> ,4
<*> <*> to hibernation overtime: <*> ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> : <*> <*> <*> <*> ,1
AwareMem_EventTracker: [APP_ACTIVITY_FINISH_<*>] is abandoned for memory <*> <*> <*> policy can not execute ,1
<*> ActivityRecord{930e418 u0 com.huawei.android.launcher/.unihome.UniHomeLauncher <*> <*> <*> ,1
setSystemUiVisibility <*> mask=ffffffff oldVal=<*> <*> <*> ,1
notifyUiVisibilityChanged:vis=0x40000000, SystemUiVisibility=0x<*> ,1
CtrlSocket restoreScrOnStatus <*> ,1
getTimeTickInfo:[mMillisUntilFinished:<*>, mHour:<*>, mMinute:<*>, mSecond:<*>] ,13
InCallPresenter - onCallListChange <*> <*> <*> ,1
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) <*> <*> <*> = <*> ,2
<*> <*> <*> is empty ,1
<*> <*> <*> Intent { <*> <*> (has extras) } <*> <*> <*> <*> <*> <*> due to <*> <*> <*> <*> <*> <*> <*> <*> ,2
domain不匹配http://tyaqy.m.cn.miaozhen.com company.domain.url:s.cr-nielsen.com ,1
pa2240-proximity calling driver <*> ,2
stopNavigating, mStarted=false ,11
hash_str: [B@b76b<*> ,1
statusBarIconTint=#B3FFFFFF,navigationBarIconTint=#FF<*> ,2
at com.baidu.location.g.a$a.handleMessage(Unknown) ,2
<*> <*> <*> int, int, const <*> <*> <*> <*> <*> <*> <*> <*> ,1
HwSystemManager:HwDebug:false HwModuleDebug:false ,1
<*> <*> <*> <*> <*> <*> <*> WEBERRSEGS=<*> WEBOUTRSTS=<*> WEBESTABLISRST=<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
ACDB -> <*> <*> <*> = <*> <*> = <*> ,4
transfLength<*> ,1
<*> <*> to device <*> <*> <*> <*> ,2
Dispatch frozen. Waiting some more. <*> <*> <*> ,4
huawei_audio huawei_choose_Handset_device_incall_forHWtest: test Type =<*> ,8
AutoStartupDataMgr:isUnderControll third party not in <*> <*> ,5
EAPOL: getSuppRsp ,2
come into oem_qmi_common_stream_from_modem_len --->modem ,2
total/<*>/<*>,android.uid.system:<*>/<*>/<*> ,1
<*> <*> <*> from <*> ,2
ensure_entropy_file_exists ,1
[<*>.<*>/<*>, <*>.<*>/<*>] ,3
ash->screen unlock ,12
handleProximitySensorEvent positive:true ,3
<*> <*> <*> <*> <*> <*> <*> <*> delay to H! ,1
action =android.net.conn.CONNECTIVITY_CHANGE ,2
MSG_QUERY_TCP_INFO called,count:<*> ,67
getNumberLocationResultAsync getGeoNumLocation ,1
<*> <*> <*> <*> <*> U=<*> StackId=<*> sz=<*>}, <*> <*> <*> <*> U=<*> StackId=<*> sz=<*>}, <*> <*> <*> U=<*> StackId=<*> sz=<*>} ,4
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
<*> <*> rt=<*>/<*> <*> <*> <*> <*> ,1
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:com.sankuai.meituan,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>] ,34
refreshState=bt, BooleanState[,icon=ResourceIcon[resId=0x7f0201b7],label=蓝牙,labelTint=<*>,textChangedDelay=<*>,contentDescription=蓝牙关闭。,打开蓝牙设置。,dualLabelContentDescription=蓝牙,minimalContentDescription=蓝牙：%s。,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=false] ,2
updateIsPoweredLocked: wasPowered=false, mIsPowered=false, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*> ,4
showTraffic ,6
<*> <*> to true by win Window{e6a6b5e u0 com.android.incallui/com.android.incallui.InCallActivity} ,1
<*> stream <*>, <*> <*> <*> <*> device <*> ,1
<*> <*> <*> <*> <*> = null ,3
at com.android.systemui.qs.tiles.WifiTile.handleUpdateState(WifiTile.java:<*>) ,2
<*> <*> is not <*> ,7
mDateString is: <*> ,9
Launcher onResume() ,4
fingersense_on_pause() finished ,3
kWhatSetAudioSink ,2
at com.huawei.hwvplayer.app.HwVPlayerApp.onConfigurationChanged(HwVPlayerApp.java:<*>) ,1
sendScreenOnEvent enter. ,5
refreshState=rotation, BooleanState[,icon=null,label=null,labelTint=<*>,textChangedDelay=<*>,contentDescription=null,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=null,expandedAccessibilityClassName=null,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=false] ,1
<*> <*> <*> <*> ,1428
<*> !CMD_SET_SUSPEND_OPT_ENABLED rt=<*>/<*> <*> <*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,6
<*> <*> <*> took <*> <*> ,1
bssid=fc:d7:<*>:a5:e5:dc;freq=<*>;level=<*>;flags=<*>;ssid=想连wifi，臣妾做不到; ,3
Change in <*> <*> <*> <*> ,5
<*> updatePowerState <*> <*> useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,1
LocalReceiver receives:android.intent.action.PACKAGE_RESTARTED,pkg:com.sankuai.meituanhd,uid:<*> ,1
MagicLink2-BroadcastReceiver:====>WIFI_P2P_THIS_DEVICE_CHANGED_ACTION ,1
report state:<*> event type:<*> pid:<*> uid:<*> <*> <*> pid: <*> ,1
onStartCommand ,3
<*>|Enter stopReconnectBLE(). ,2
Launcher.IconCache, cacheLocked Utilities.createIconBitmap entry.title = eSpace ComponentName:ComponentInfo{com.huawei.espacev2/com.huawei.espace.module.start.ui.StartActivity} user:UserHandle{<*>} ,1
<*> <*> <*> Intent { <*> <*> (has extras) } <*> <*> <*> <*> <*> <*> <*> due to <*> <*> <*> <*> ,2
audio_extn_set_anc_parameters: anc_enabled:<*> ,23
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,2
action:com.tencent.mm.plugin.openapi.Intent.ACTION_HANDLE_APP_REGISTER, mPermissionType:<*> ,11
<*> | <*> = <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> ,8
<*> <*> <*> <*> <*> <*> <*> need to <*> <*> <*> = <*> , <*> = <*> ,3
notifyInterfaceClassActivity: client is <*> ,67
proxyBroadcast:[com.android.browser] proxy:true ,4
<*> <*> OK ! ,15
FingerprintService authenticate ,3
<*> callerApp: <*> <*> flags: <*> ,1
hideSecSoftInput = false ,7
processOp opType: <*>, uid: <*>, pid: <*> ,5
getNeighboringCellInfo calling app is com.sankuai.meituanhd ,11
[enter]mapDataStateToLteDataState state=CONNECTED ,1
<*> <*> <*> <*> <*> <*> <*> need to <*> <*> <*> = <*> <*> <*> = <*> ,2
<*> Window{e6a6b5e u0 <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
t:false, fl: false, p: <*>, ce: true, we: false ,236
CallObjectMethod strat ,6
<*> <*> <*> <*> <*> <*> <*> <*> <*> ,286
Change to single clock mode! ,53
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:ReadSdkGroupItem: <*> <*> <*> <*> <*> ,5
showWindow: showing! ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> for <*> ,2
<*> <*> <*> is: <*> ,2
<*> <*> <*> <*> package: com.tencent.mm, <*> <*> ,1
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x10,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,5
<*>-<*>-<*> <*>:<*>:<*>.<*> T:<*> <*> <*> <*> ,1
<*> <*> <*> <*> : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,18
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, <*> <*> screenAutoBrightness=<*>, userId=<*> ,6
<*> <*> <*> <*> <*> <*> = <*>.<*> ,3
DisplayPowerController updatePowerState mPendingRequestLocked=policy=OFF, useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,4
[UploadReceiver.onReceive] netType=<*> ,1
release:lock=<*>, flg=0x0, <*> name=android", ws=null, uid=<*>, pid=<*> ,30
notifyUiVisibilityChanged:vis=0x40000500, SystemUiVisibility=0x<*> ,1
<*> TcpCirChannel.shutdown(TcpCirChannel.java:<*>) Login_By_Step-> shut down now connect ,3
updateCallLayout:isBackground=false, isInteractive=false ,2
mIsScreenOn is: <*> WAKEUP alarm trigger action = <*> package name is: <*> ,1
3e8n7PVvTe8HaG5vqIBVsLqoGVW9nn2ZzSAqox9Z49EYCl5D7g17j1U1T1IulR1fJdlS0GYySJNU ,1
<*> <*> <*> <*> action = <*> ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> ,2
<*> <*> <*> id <*> <*> <*> <*> <*> due to no <*> <*> <*> ,1
<*> action = <*> ,17
bssid=<*>:c3:<*>:<*>:4d:d6;freq=<*>;level=<*>;flags=<*>;ssid=SD; ,1
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,9
<*> <*> <*> = <*>.<*> ,2
activate called handle:<*> enable:<*> ,4
cancelNotification ,2
<*> <*> V.ED..... ......ID <*>,<*>-<*>,<*> #7f1401be app:id/battery_outside_percent} ,2
action:com.tencent.mm.ACTION.note_tracemsg_unlock, mPermissionType:<*> ,1
cleanUpApplicationRecordLocked, pid: <*>, restart: false ,13
Final value: x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*> ,3
<*> is not <*> <*> <*> <*> <*> <*> <*> ,3
onNotificationExpansionChanged called ,26
InCallPresenter - <*> state = <*> ,3
dispatch ordered broadcast <*> <*> <*> <*> has <*> receivers ,28
CTRL_IFACE: GET_NETWORK id=<*> <*> ,22
action:com.huawei.android.action.action_home_city_weather, mPermissionType:<*> ,1
getCurrentCellid PHONE_TYPE_GSM cellidString = <*> ,16
collectReceiverComponents, callerApp: <*> <*> <*> receiver size:<*>, flags: <*> ,52
playingUids: ,6
<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|com.huawei.health|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,2
<*> <*> <*> <*>-<*>-<*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:FSM_Tool_Tree_Enc_Path <*> <*> <*> ,5
<*> = <*> <*> <*> ,3
<*> <*> loss[<*>]=<*>%, volume=<*> ,5
CTRL_IFACE: Failed to get <*> <*> <*> ,5
ImsServiceSub : StatusForAccessTech networkMode = <*> registered = <*> status = <*> restrictCause = <*> ,2
collectReceiverComponents, callerApp: ProcessRecord{24cdca7 <*>:com.android.phone/<*>}, intent:android.intent.action.LTE_CA_STATE, receiver size:<*>, flags: <*> ,16
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, <*> dataConnected=false, isRoaming=false ,1
onChange selfChange:false uri.toString():content://settings/system/screen_auto_brightness mIsObserveAutoBrightnessChange:true ,53
Split enqueueing broadcast [callerApp]:ProcessRecord{24cdca7 <*>:com.android.phone/<*>} ,38
key: nsp-content-range ,1
remove pxy wl, pid: <*>, uid: <*> from pxy process list. ,1
at java.lang.Thread.run(Thread.java:<*>) ,2
isCarrierConfigEnabled bundle is null ,8
action:android.provider.Telephony.SMS_RECEIVED, mPermissionType:<*> ,1
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, useProximitySensor=true, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,12
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> udp detect <*> <*> id is <*> id is [<*>]! ,1
notifyListenerHuawei::origin typeIcon:<*> <*> isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false ,5
JNI_OnLoad ,2
<*> event due to no window focus: <*> <*> <*> <*> <*> x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,1
RCV <- {<*> <*> <*> <*> <*> <*> <*>} ,1
onExpandingFinished ,2
getRecentTasks: topActivity=ComponentInfo{com.android.browser/com.uc.browser.InnerUCMobile} ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> * <*> <*> <*> <*> <*> <*> <*> <*> ,2
action:com.qualcomm.intent.action.ACTION_UNSOL_RESPONSE_OEM_HOOK_RAW, mPermissionType:<*> ,29
<*> <*> <*> <*> <*> event x = <*> y = <*> ,1
<*> = <*>, <*> <*> <*> <*> <*> <*> ,1
isMobileDataEnable::dateEnable=false, cotrollerEnable=false ,1
<*> <*> <*> <*> <*> <*> <*> = false ,3
<*> <*> <*> <*> <*> in the <*> <*> ,2
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, <*> <*> <*> <*> eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x101 } ,5
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.16mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,1
read from oem info: x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*> ,1
moveToUploaingDir ,3
<*> <*> <*> <*> <*> = false, <*> = false, <*> = <*> ,1
Dispatching event <*> <*> <*> ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> id is <*> id is <*> ,1
[ReceiverUtils.launchCheckVersionService] ,2
clear info:clearTimerSharedPref ,1
<*> TcpCirChannel.connect(TcpCirChannel.java:<*>) Connect to server address = <*> port = <*> ,2
keyAppBroadcastQueueForIntent intent Intent { act=com.tencent.mm.ui.ACTION_ACTIVE flg=0x10 (has extras) } on bgkeyapp queue ,4
<*> uid <*> is not <*> ,1
<*> <*> <*> <*> <*> <*> <*> is <*> <*> <*> <*> <*> is <*> ,3
<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*> ,8
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => [START]: pcFileName [anyofficeuserorgcode] ,12
logUploadRequest start ,1
bh1745-light calling driver setDelay <*> ms ,3
onError(<*>) ,4
<*> <*> V.ED..... ........ <*>,<*>-<*>,<*> <*> <*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,2
bssid=<*>:<*>:bc:0b:<*>:a1;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,1
<*> <*> <*> <*> <*> <*> screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, <*> <*> <*> <*> <*> <*> ,2
p2p0: CTRL-EVENT-TERMINATING ,1
CTRL_IFACE: <*> <*> <*> ,5
<*> <*> V.ED..... ........ <*>,<*>-<*>,<*> <*> app:id/battery_outside_percent} ,3
<*> <*> <*> is not in the <*> <*> <*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x3b,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
<*> <*> is null <*> <*> <*> ,8
NumTracks(<*>) ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> third party <*> <*> ,5
getRecentTasks: topActivity=ComponentInfo{com.android.mms/com.android.mms.ui.ConversationList} ,1
<*> calling driver <*> ,1
setRequest ProviderRequest[OFF] ,10
ImsSenderRxr : Response data: [<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>][SUB0] ,21
setColorTemperatureAccordingToSetting ,20
<*> is called ,1
[PhoneIntfMgr] <*> <*> <*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> to open <*> due to <*> <*> <*> <*> = <*> is <*> <*> <*> <*> ,5
at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:<*>) ,4
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> ,6
wfyvHx2zDFsvDbHBrsjsHbKOpozMelwwUtWRPzfptxFRrpVkYt3DE5J7QCZkQZTTSsjSfg2Z0g6f ,1
dumpTrace::setTracingEnabled: false ,2
<*> is null ,7
handle_exception_events enter ,63
Calling fingersense_touch_up() ,118
<*> <*> <*> = <*> <*> = <*> <*> <*> <*> ,1
onTouchEvent: code=<*>, action=<*>, <*> <*> <*> actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,2
playSoundEffect effectType: <*> ,5
VideoCallPresenter - <*> <*> <*> <*> <*> <*> <*> <*> <*> CAPABILITY_MUTE CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO], children:[], parent:null, conferenceable:[], videoState:Audio Only, <*> <*> <*> ,1
<*> enter: <*> ,1
<*> <*> <*> <*> <*> <*> <*> --> <*> <*> --> <*> <*> --> <*> <*> --> <*> <*> --> <*> <*> <*> <*> ,7
<*> <*> <*> = <*>, <*> = <*>, <*> = <*> ,6
action:com.tencent.mm.ACTION.note_tracemsg_lock, mPermissionType:<*> ,5
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, <*> useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,5
ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*> ,11
<*> <*> <*> id = <*> ,1
InitCupidEpisode() ,1
getResourceName: resourceName:ORDEREDBROADCAST ,1
setOverlap mOverlap:false, mDimmed:false ,3
action:android.media.STREAM_DEVICES_CHANGED_ACTION, mPermissionType:<*> ,1
<*> <*> <*> <*> <*> <*> pid: <*> ,7
action:android.scroff.ctrlsocket.status, mPermissionType:<*> ,1
ImsServiceSub : <*> <*> = true <*> <*> = false ,1
<*> subId=<*> retVal=true ,3
DialpadFragment mBroadcastReceiver <*> ,3
4G, isCAState=false ,5
MainActivity_stop_tokennull ,1
onEntryRemoved:<*>|com.huawei.systemmanager|<*>|null|<*> ,1
isWiredHeadsetOn... ,45
KGSvcFp onAuthenticationError.<*> ,1
mStatsXtProcUid: /proc/net/comm/stats does not exist! ,10
notifyUiVisibilityChanged:vis=0x8308, SystemUiVisibility=0x<*> ,1
PowerManagerNotifier onWakefulnessChangeStarted: wakefulness=<*>, <*> <*> <*> <*> ,2
mExtDataOld:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] mExtData:ExtData [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] ,91
getRecentTasks: topActivity=ComponentInfo{com.huawei.intelligent/com.huawei.intelligent.main.TodoActivity} ,1
StatusBarNotifier - <*> = false ,2
mManualAmbientLux =<*>,mNeedUpdateManualBrightness1=true ,1
at com.huawei.systemmanager.rainbow.db.CloudDBAdapter.applyDefaultPolicy(CloudDBAdapter.java:<*>) ,1
ZHYE8GIq1kP5rI9puUz0FkD1KqWoi86PgQJNLVCZt/fKXuBxMPh3kwR04xAB6QaWh+R0HAy9eKLq ,1
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_4g ,143
Rac Change (PDC) data: [<*>, <*>] ,44
ImsSenderRxr : <*> <*> ,2
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,5
at org.json.JSONObject.<init>(JSONObject.java:<*>) ,3
<*> <*> is null <*> ,8
bssid=<*>:<*>:bc:0b:<*>:e1;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,2
at com.huawei.android.chr.qcom.QcomModemInfoCollector.getHardWareVersion(QcomModemInfoCollector.java:<*>) ,3
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
[SocketRead_<*>:<*>:<*>-<*>]broadcast(),and mReceivers <*>(android/null:<*>) ,11
at com.android.providers.telephony.TpProviderHw.query(TpProviderHw.java:<*>) ,2
INTENT_HW_REPAIR_HELPER send ,1
<*> <*> <*> ........ <*>,<*>-<*>,<*> <*> <*> ,2
GetAddrInfoHandler addr: uc.huawei.com {<*>, <*>, <*>} <*>.<*>.<*>.<*> ,10
Cache monitor msg as screen_off ,31
setKeyguardWallpaperAVGColor:<*> ,5
ImsServiceSubHandler : <*> <*> <*> <*> is <*> ,1
setUri uri=content://media/internal/audio/media/<*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
KGSvcFp startListeningForFingerprint() ,1
read from <*> <*> <*> ,3
<*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> = <*> ,1
setExcludeFromRecents:pkgName=null ,6
<*> <*> x_offset=<*>.<*>, y_offset=<*>.<*>, z_offset=<*>.<*> ,1
wlan0: Control interface command <*> ,16
<*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> = <*>, <*> = <*> ,3
wifi_send_command: cmd:'SAVE_CONFIG' ,1
showSoftInput() ,6
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Set mode to <*> <*> <*> <*> ,4
<*>|calculateAltitudeWithCache totalAltitude=<*> ,12
<*> <*> <*> <*> <*> in the <*> <*> <*> ,1
<*> <*> <*> type = <*> ,1
0xc0, 0x2a, 0x7c, 0x3f ,1
[main-<*>]initTopActivityList.(hwouc/HwOucConfig.java:<*>) ,1
No config <*> <*> <*> ,2
hwpaysdk isLower ,1
gAndroid_jvm 0xea<*> ,1
[qiyi_LOG_INFO DownloadEpisodeAdapter] <*> <*> <*> ,13
handleANRFilterFIFO,uid = 10113cmd = <*> ,156
CtrlSocket processCtrlSocket pid = <*> cmd = <*> <*> = <*> ,1
handleTouchEvent:MotionEvent { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,2
<*> <*> <*> type is <*> <*> ,3
QSEECom_send_cmd return! ,111
<*> <*> <*> <*> <*> <*> is not <*> ,8
InCallActivity - <*> <*> = null ,3
[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*> ,19
ProximitySensor - <*> <*> ,4
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false ,70
skip input. ,2
onNotificationVisibilityChanged called ,9
allowVideoCallsInLowBattery: false isCarrierOneSupported: false mIsLowbattery: false ,5
CtrlSocket Receiver,disable: false locked: <*> <*> <*> mSmartKeyguardLevel: normal_level mStartPowerSaving: false ,4
onUEvent fcpStatus = <*>,scpStatus =<*>,ovpStatus=<*> ,99
set notification panel padding = <*> ,73
BadgeContentObserver newBadgeNumber:<*>,oldBadgeNumber:<*> <*> <*> <*> ,3
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0b <*> <*> <*> <*> 6c <*> <*> ... ,1
total/<*>/<*>,android.uid.system:<*>/<*>/<*>,com.android.packageinstaller/<*>/<*>,unknown:<*>/<*>/<*>,com.android.browser/<*>/<*>,com.sankuai.meituan/<*>/<*> ,1
Launcher.LauncherProvider launcher call - method:setAppBadgeCount arg:null <*> uid =<*> pid =<*> ,3
sending alarm <*> type <*> when <*> com.tencent.mm},repeatInterval = <*>,listenerTag =null ,8
there are no wakeup alarms and the screen is off, we can delay what we have so far until the future ,2
Sending non-protected broadcast <*> from system uid <*> <*> <*> ,5
makeDefaultPlaylist ,1
proxyWakeLockByPidUid, pid: <*>, uid: <*>, proxy: false ,6
disable_audio_route: exit ,2
<*> <*> <*> #<*> A=com.tencent.mm U=<*> StackId=<*> sz=<*>}, <*> <*> #<*> A=com.tencent.mm U=<*> StackId=<*> sz=<*>}, <*> #<*> A=com.tencent.mm U=<*> StackId=<*> sz=<*>} ,1
LOAD QC_HUAWEI_ANTITHEFT_TA_PATH ,2
<*> <*> = false <*> <*> ,1
<*> <*> <*> <*> ws=null, uid=<*>, pid=<*> ,9
ImsServiceSub : broadcastVopsSsacIntent Vops = true , Ssac = false ,36
total/<*>/<*>,android.uid.system:<*>/<*>/<*>,com.sankuai.meituanhd/<*>/<*>,unknown:<*>/<*>/<*>,com.tencent.mm/<*>/<*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> = false, <*> = false ,2
imeVis=false ,10
<*> change to <*> <*> ,2
stopScanAp mIsScaning = false ,4
<*> <*> <*> to true ,3
KGSvcCall onStartedWakingUp. ,5
<*> - <*> <*> <*> <*> <*> <*> <*> <*> <*> CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO], children:[], parent:null, conferenceable:[], videoState:Audio Only, <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>} <*> <*> <*> ,1
<*> mReceivers <*>(android/null:<*>) ,6
void android::HwAlgorithmicInformation::setSmartAeInfo(int, <*> <*> <*> = <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,3
mIntentReceiver-ACTION_SCREEN_OFF ,7
myUser=0currentUser=<*> ,1
huawei_antiTheft_manager_init succeed ,3
<*> <*> <*> <*> <*> <*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,2
wsr ,1
WPS: attr type=0x1044 len=<*> ,40
tcp.recv{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown <*> java.net.SocketException: Socket is closed ,2
TafficState:default sub id = 0slotIndex = <*> subscriptionId = <*> ,5
<*> <*> <*> <*> when=<*> what=<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
fpc_get_authenticator_id ,3
notifyUiVisibilityChanged:vis=0x40000700, SystemUiVisibility=0x<*> ,1
<*> : com.baidu.input_huawei found in app ,1
CommonMethodUtil:No package name to uid:-<*> ,2
java.lang.reflect.InvocationTargetException ,3
key:encryptType value:<*> ,1
<*> <*> V.ED..... ......ID <*>,<*>-<*>,<*> #7f14032f app:id/hw_notification_number} ,2
Apply window Height <*> ,10
LightSensor, <*> <*> <*> ,1
OverscanTimeout run ,9
retrieveServiceLocked, callerApp: ProcessRecord{34bf34f <*>:system/<*>}, flags: <*> ,59
<*> <*> <*> id <*> ,1
wifi_connect_on_socket_path: path:@android:wpa_wlan<*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
<*> <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*> ,9
<*> called by <*> ,1
Multiple rapid taps detecting, aborting Knuckle Gestures. ,16
<*> <*> <*> = <*> <*> <*> <*> <*> ,1
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:com.sankuai.meituanhd,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>] ,93
<*> <*> <*> <*> <*> java.net.SocketException: Socket <*> ,3
<*> <*> <*> <*> = false, <*> <*> <*> <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*> ,1
at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:<*>) ,2
EventHub monitor: no key events in the past <*> ,9
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:huawei.w3,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>] ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:waiting for useful network.......... ,15
CTRL-DEBUG: ctrl_sock-sendmsg: sock=<*> sndbuf=<*> outq=<*> send_len=<*> ,17
csr ,232
triggeredJoin: <*> ,1
<*> <*> <*> <*> <*> , <*> <*> <*> <*> ,1
<*> ordered <*> <*> <*> <*> prev had <*> ,1
<*> <*> = <*> <*> <*> ,1
[qiyi_LOG_INFO DownloadEpisodeAdapter] <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,5
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.12mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,1
at com.baidu.location.g.a.b(Unknown) ,4
unproxy app:com.android.browser,uid:<*>,result:true ,4
<*> <*> <*> <*> <*> #<*> A=com.huawei.android.launcher U=<*> StackId=<*> sz=<*>} ,1
release:lock=<*>, flg=0x0, tag="eventloop", name=android", ws=null, uid=<*>, pid=<*> ,15
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> ,48
PowerManagerNotifier onUserActivity: event=<*>, uid=<*> ,145
refreshState=location, BooleanState[,icon=ResourceIcon[resId=0x7f020218],label=位置信息,labelTint=<*>,textChangedDelay=<*>,contentDescription=位置报告功能开启。,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=true] ,2
DisplayPowerController updatePowerState <*> <*> useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,6
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,16
action:com.huawei.android.intent.action.RAC_CHANGED, mPermissionType:<*> ,49
at com.baidu.location.e.a.<init>(Unknown) ,1
<*> freq=<*> qual=<*> noise=<*>~ level=<*> snr=<*> flags=0xb age=<*> est=<*> ,21
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:ReadSdkGroupItem: Succeed in <*> <*> <*> <*> ,4
uploadLocationAction:actionType:0actionMsg:PROVIDER:all,PN:com.sankuai.meituanhd,HC:99791f<*> ,1
<*> <*> <*> = <*>, tx = <*> ,1
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> 0b <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
DisplayPowerState Updating <*> <*> <*> <*> ,4
<*> BaseBroadcast.sendBroadcast(BaseBroadcast.java:<*>) no receiver for <*> ,3
HwLogUpload exist ,1
tmp: nsp-callback=http://logservice.vmall.com/osg/logServerAction!uf.htm?lsId=<*>&st=RmaRXVeJGy9IHFxcSQDo9KtlS7eY8GFcF07hTRK28as%3D&dsKey=<*>&tblName=<*>&nsp-callback-status=<*>&nsp-file-md5=29de26091d76d276231dd20c7b01f447&nsp-file-size=<*>&nsp-ts=<*> ,1
onScreenTurningOn ,5
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> dreaming: false; Authenticated: false ,1
ImsSenderRxr : <*> <*> <*> <*> <*> ,5
no net ctrl socket pending alarm! <*> <*> <*> ,2
<*> not in <*> <*> ,6
<*> <*> <*> = <*> to <*> ,5
removeCallbacksAndMessages end ,1
updateRotationUnchecked(alwaysSendConfiguration=false) ,21
new ThermalAction ,3
Sending <*> <*> <*> <*> <*> <*> <*> <*> ,3
bssid=<*>:<*>:bc:0b:2b:e1;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,1
ACDB -> <*> <*> = <*>, <*> = <*>, <*> id = <*> <*> <*> = <*> ,1
ImsSenderRxr : <*> = true type = <*> status = <*> <*> <*> <*> ,3
onReceive:screen off ,4
WPS: attr type=0x1008 len=<*> ,36
action:com.huawei.betaclub.UPLOAD_PROGRESS, mPermissionType:<*> ,3
Add randomness: count=<*> entropy=<*> ,27
action:com.android.systemui.statusbar.visible.change, mPermissionType:<*> ,7
getSeekBarProgress isAutoMode:true <*> <*> <*> ,1
updateLowPowerMode,isPowerSaveMode:falseisInteractive:true ,2
<*> <*> <*> <*> id <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
LoginThread{<*>} LoginC.doLoginByStep(LoginC.java:<*>) <*> <*> <*> ,5
StatusBarNotifier - <*> <*> <*> <*> in the <*> <*> <*> <*> ,2
<*> <*> id = <*> = <*> <*> = <*> ,7
<*> id = <*> ,2
ImsServiceSubHandler : <*> <*> state is UNREGISTERED ,1
<*> <*> <*> <*> <*> Intent { <*> <*> <*> ,1
Report temperature: [charger_ic] temp :<*> report_threshold:<*> ,8
MediaPlayerService::getOMX ,2
<*> <*> to get <*> <*> <*> ,2
we: false ,1
Report temperature: [ap] temp :<*> report_threshold:<*> ,17
RCV <- {<*> IfaceClass <*> <*> <*> <*> ,1
starting registerNativeSignalAction... ,1
[TbdtsAccess.getUserReportSetListFromWeb]Start... ,1
<*> <*> <*> <*> file or directory) ,1
userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=0x0, uid=<*> ,129
<*> <*> <*> "PowerManagerService.WakeLocks". ,1
<*> <*> <*> <*> <*> <*> <*> U=<*> StackId=<*> sz=<*>} ,4
fpc poll irq interupt ,1
<*> <*> <*> <*> <*> <*> <*> <*> line <*> <*> ,7
<script language="JavaScript"> ,2
<*> <*> rt=<*>/<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,5
[HttpClient.getDataWithRetry] success ,1
ExtraTrafficSetting:result is empty ,13
<*> <*> <*> <*> <*> *, int, int, <*> <*> <*> ,1
onCellLocationChanged ,13
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) <*> <*> <*> to uc.huawei.com:<*> ,2
FingerprintDaemonProxyEx::onTransact, code:<*> ,19
setBackgroundAlpha:alpha=<*>.<*> ,11
<*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> is abandoned for memory <*> ,5
P2P: cli_channels: ,4
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:true activityOut:false isRoaming:false ,1
get <*> <*> <*> <*> ,1
<*> <*> <*> is false ,2
RCV <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> ActivityRecord{b46dc67 u0 com.android.incallui/.InCallActivity <*> <*> <*> ,2
NewEspaceMessageContentObserver getNewEspaceMessageCount: <*> ,13
[pa_<*>] temp_new :<*> temp_old :<*> ,3
action:android.net.wifi.WIFI_STATE_CHANGED, mPermissionType:<*> ,1
<*> state is <*> <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> in the <*> <*> <*> <*> ,1
not encrypt ,2
bssid=f4:<*>:cd:<*>:c8:<*>;freq=<*>;level=<*>;flags=<*>;ssid=CSDJ; ,1
hw_set_colortemperature: start++ ,5
received broadcast <*> ,8
<*> suspend blocker <*> ,1
<*> <*> <*> <*> sample rate:<*>.<*> cur rpt rate:<*> max:<*>.<*> min:<*>.<*> ,5
writeFile, file_len=<*> ,1
<*> read from <*> <*> = <*> ,2
No peeking: unimportant notification: <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> ,25
onEntryRemovedInternal:<*>|com.sankuai.meituan|<*>|null|<*>, group=<*>|com.sankuai.meituan|<*>|null|<*> ,1
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true <*> <*> <*> ,2
updateNotification(StatusBarNotification(pkg=com.huawei.health user=UserHandle{<*>} id=<*> tag=null key=<*>|com.huawei.health|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 vis=PRIVATE))) ,60
enableTrigger ,5
<*> <*> action: <*> ,1
AutoCleanService:onCreate, registerReceiver ,1
<head> ,1
at android.graphics.Typeface.createFromFile(Typeface.java:<*>) ,1
notifyFinishedGoingToSleep ,5
attemptAutoConnect: false ,2
receive data len = <*> ,191
reportMmEvent: RejectType=<*>,OrgRejectCause=<*>,OptRejectCause=<*>,RejectDomain=<*>,RejectPlmn=<*>,RejectCellId=<*>,RejectLa=<*>,RejectRa=<*>,RejectRatType=<*> ,1
Acquiring suspend blocker "PowerManagerService.WakeLocks". ,184
<*> <*> <*> <*> <*> <*> <*> Intent { <*> <*> <*> <*> (has extras) } <*> <*> <*> ,1
workerFunction STATE_AUTHENTICATE ,2
dzOuHX3SEmnO4Fa0hC3+Er+W30iogtAKGZQIGA20JDvGfld3OFVkeLD55jEZdgdGp+bjjIRKmTN<*> ,1
readPasswordHash ok ,1
ImsServiceSub : <*> <*> = <*> <*> = <*> <*> = <*> <*> = <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => [START]: pcFileName <*> ,16
StartupResidentService:InnerHandler Message:<*> ,52
HWCDisplay::SetPowerMode: display = <*>, mode = <*> ,8
<*> <*> result = false ,2
action:android.intent.action.ALARM_CHANGED, mPermissionType:<*> ,1
main{<*>} onReceive:android.net.wifi.STATE_CHANGE ,3
I/<--- void <*> uint32_t, const <*> void *) line <*> <*> ,1
enqueueNotificationInternal: pkg=com.huawei.health id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 vis=PRIVATE) ,56
release:lock=<*>, flg=0x0, <*> <*> <*> uid=<*>, pid=<*> ,5
onConfigurationChanged... ,1
isSpeakerphoneOn... ,2
pool-<*>-thread-<*>{<*>} BaseBroadcast.sendBroadcast(BaseBroadcast.java:<*>) no receiver for <*> ,1
FpPerformance FpUtils.fingerTurnOnScreen():true ,4
[IssueCreationService.startSocketServerThread] ,2
<*>|Enter getFirstActiveDeviceInfo(). ,1
<*> <*> <*> = <*>, <*> <*> ,5
<*> <*> <*> int, int, const <*> <*> <*> <*> <*> <*> ,2
<*> <*> <*> #<*> A=com.huawei.android.launcher U=<*> StackId=<*> sz=<*>}, <*> <*> <*> <*> U=<*> StackId=<*> sz=<*>}, <*> <*> <*> U=<*> StackId=<*> sz=<*>} ,1
<*> <*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null <*> <*> <*> <*> <*> <*> ,1
main{<*>} PushService.onStartCommand(PushService.java:<*>) Push Service <*> <*> <*> ,2
at java.net.Socket.connect(Socket.java:<*>) ,3
MobileData switch:true ,1
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<*>) ,4
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) TCP Msg 28TCP_OK ,5
<*> <*> { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 <*> <*> ,1
[ConnectivityManager-<*>]onLost(android/null:<*>) ,1
<*> <*> <*> <*> <*> <*> <*> <*> = <*> <*> ,1
<*> <*> <*> <*> u0 euid: <*> <*> <*> euid: <*> ,5
<*> enable, <*>: en=<*> ,1
eap_proxy: eap_proxy_notify_config ,2
ENTER: handleNetworkConnected() ,1
<*>|logicalDealBroadcastEvent : Intent { act=android.intent.action.TIME_TICK flg=0x50000014 (has extras) } ,7
measureTask getPackageSizeInfoLI : <*> <*> for user <*> ,1
collectReceiverComponents, callerApp: ProcessRecord{<*> <*>:com.baidu.input_huawei/u0a74}, intent:com.tencent.mm.plugin.openapi.Intent.ACTION_HANDLE_APP_REGISTER, receiver size:<*>, flags: <*> ,6
<*> <*> <*> id <*> <*> <*> <*> <*> due to <*> ,1
setCurrentlyDisplayedThreadId: -<*> ,1
showPrimarySecurityScreen() ,3
InactiveState<*> ,5
at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:<*>) ,3
doTemperatueWarning, health:<*> ,10
notifyStartedWakingUp ,3
<*> <*> type = -<*> ,1
GAJV+XG8P/l8KgREoF/QjMhVDDV/GOssYR/PXcNFLJJj5SO9fqJ2npldb2yys7uvZ3+v+tQvtIJY ,1
instantCollapse ,9
ImsSenderRxr : <*> <*> <*> <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,1
hide ,2
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x4,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
Split enqueueing broadcast [callerApp]:ProcessRecord{506ad58 <*>:com.android.systemui/u0a33} ,6
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> ,1
getNeighboringCellInfo calling app is <*> ,11
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, <*> <*> = <*> ,2
cancelNotificationWithTag pid <*>,uid = <*>,tag = null,pkg =com.tencent.mm,id =<*> ,3
Access denied finding property <*> ,5
[Thread-<*>-<*>]isApplicationInForeground false.(hwouc/HwOucUtility.java:<*>) ,1
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=false ,1
<*> <*> <*> <*> <*> <*> action = <*> <*> <*> <*> <*> ,7
icon : <*> found in app ,2
<*> <*> void *, int, int, const char *, <*> <*> <*> <*> <*> <*> ,1
Enqueueing ordered broadcast[background] <*> u0 android.intent.action.LTE_CA_STATE}: prev had <*> ,14
mWakeupFromSleep= true,currentTime=<*>,mLightSensorEnableTime=<*> ,3
resetPeriodReportTimer enter. ,1
updateLightsLocked,mInCall <*> <*> <*> == null?true ,2
call onScreenTurnedOff(<*>) ,2
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> <*> <*> <*> 6c <*> <*> <*> 2a <*> <*> <*> <*> 0c <*> <*> <*> 2d <*> <*> <*> <*> <*> <*> ,2
[requestLocationUpdatesLocked] 定位..Wifi/基站定位 ,1
mSendService start ,7
<*> <*> <*> pid = <*> ,1
<*> <*> <*> <*> <*> <*> is closed ,1
showPrimarySecurityScreen(turningOff=false) ,5
<*> <*>-<*>-<*> <*>:<*>:<*> ,2
<*> <*> = false ,15
<*> = <*> ,33
showCurrentInputLocked: mCurToken=android.os.Binder@cb2bac<*> ,4
<*> <*> <*> pool - hexdump(len=<*>): [REMOVED] ,1
notifyScreenTurnedOff ,4
getTypeIcon type:<*> ,10
Wallpaper changed ,2
tryUpdateKeyguardWallpaperWithMask::useMask=<*>, avgColorType=<*> ,3
[ChrServiceUtils.isMethodSupported]Method/Supported:getModemLogStatus/true ,2
<*> <*> <*> state is not <*> ,3
<*> <*> <*> <*> <*> report_threshold:<*> ,5
RSSI=<*>;LINKSPEED=<*>;NOISE=<*>;FREQUENCY=<*>; ,13
<*> <*> Connect to server address = [uc.huawei.com,] port = <*> ,2
NormalTrafficAnalysis:alert byte = <*> <*> <*> byte = <*> ,5
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*>/<*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*> ,2
No peeking: not in <*> <*> ,3
<*> -> <*> ,1
PowerManagerNotifier <*> <*> <*> ,4
ImsSenderRxr : [UNSL]< <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> change to true ,1
<*> <*> <*> <*> = <*>, state = <*> ,6
flush:sensor(android.sensor.step_counter) handle:<*> ,4
VolumeDialogController.Callbacks onConfigurationChanged ,1
RTT[<*>]=<*>, volume=<*> ,35
Failing getSupportedFeatureset because HAL isn't started ,7
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop... ,43
<*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,10
WatchThread{<*>} TcpClient.clearAll(TcpClient.java:<*>) ==================== TCP CLIENT CLEAR ALL ==================== ,22
SND <*> <*> <*> <*> ,3
Change in state from: <*> <*> <*> ,3
onEntryAdded:<*>|com.tencent.mm|<*>|null|<*>, group=<*>|com.tencent.mm|<*>|null|<*> ,2
<*> <*> <*> is null ,1
<*> <*> <*> ms ,2
applyInPlace=true shouldPeek=false alertAgain=true ,72
<*> byte = <*> <*> <*> <*> <*> <*> state is <*> ,1
<*> <*> <*> need to <*> <*> ,3
action:android.net.conn.DATA_ACTIVITY_CHANGE, mPermissionType:<*> ,55
getQueryTcpResult failed. ,1
<*> <*> <*> : false ,1
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, <*> <*> <*> <*> <*> <*> <*> ,2
<*> <*> = true, <*> = null, <*> = false, <*> = false, reason = <*>, <*> ,4
after exceptionCatchSetup ,1
<*> <*> <*> visible: <*> ,1
mActiveIface: rmnet_data<*> ,6
result = <*> ,2
<*> TcpSocket.close(TcpSocket.java:<*>) shutdown <*> java.net.SocketException: Socket is closed ,1
check dependency pid: <*> is depended by pid: <*> ,18
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,58
<*> <*> <*> <*> <*> pid = <*> ,10
m2: false, m3: false ,7
iqiyi message: <*> <*> <*> <*> ,9
at com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl.get(CustomConcurrentHashMap.java:<*>) ,1
requestLocationUpdates ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
at android.provider.Settings.checkAndNoteWriteSettingsOperation(Settings.java:<*>) ,1
FragmentMenu onPrepareOptionsMenu... ,2
PFW.HwPFWAppRestartPolicy:receive action = <*> ,4
proxyBroadcast:[com.android.browser] proxy:false ,1
scheduleTimeTickEvent triggerAtTime = <*> ,6
batch:sensor(android.sensor.accelerometer) sample_rate=<*>.999925Hz report_rate_f=<*>.000000Hz curr sample rate:<*>.<*> cur rpt rate:<*> max:<*>.<*> min:<*>.<*> ,1
<*> : <*> <*> = true <*> <*> = false ,1
Systrace:: buffer is full and will reset. ,3
at com.huawei.ecs.mtk.util.SimpleThread.run(SimpleThread.java:<*>) ,2
at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:<*>) ,3
<*> <*> <*> <*> <*> trigger action = <*> package name <*> <*> ,3
trim <*> <*> <*> <*> <*> <*> <*> ,5
<*> <*> <*> class android.app.HwCustNotificationImpl ,5
count:<*>,rx_sum:<*>,tx_sum:<*>,rxBytes:<*>,during_ms:<*>,rx_speed:<*>.<*>,tx_speed:<*>.<*>,rto:<*>.<*> ,15
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> ,2
at com.huawei.systemmanager.rainbow.comm.request.AbsServerRequest.processResponse(AbsServerRequest.java:<*>) ,2
isCloneProcess = false ,36
updateVolte::volteState=UNREGISTERED ,2
AwareUserHabit: getTopList is called ,3
<*> package: com.tencent.mm, visible: false ,3
onSignal: mSubId=<*>,currDataSubID=<*> ,222
MagicLink2-BroadcastReceiver:====>ACTION_SCREEN_ON ,3
Beacon IEs - hexdump(len=<*>): <*> 0b <*> <*> 2d <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> 0b <*> <*> <*> <*> <*> <*> ... ,2
stop(0xeb117d80) ,1
updateNotificationShade ,208
[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=true ,17
earliestValidTime + <*> ,4
HwLocationManager:onLocationChanged.ThirdLocation ,5
<*> <*> alarm OK ! ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> ActivityRecord{930e418 u0 com.huawei.android.launcher/.unihome.UniHomeLauncher <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,6
collapsePanel:false ,6
resumeTopActivityLocked: <*> <*> <*> <*> <*> ,3
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> children:[], parent:null, conferenceable:[], videoState:Audio Only, mSessionModificationState:<*>, VideoSettings:(CameraDir:<*>)] ,1
<*> <*> due to no <*> <*> <*> <*> <*> <*> <*> x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,3
mFirstValidAuto=true,mAutoIntervened=falsemfastAnimtionFlag=false ,1
uUYZpTHHuGs77kdPbr++21qVmn7iBgU9ufjvuUIGI9k2gcOizpRkqGQxzQeSurbUDYwi6/xb6Y8F ,1
proxy app:com.huawei.espacev2,uid:<*>,result:true ,1
<*> Failed to get <*> <*> <*> ,2
<*>|action android.net.conn.CONNECTIVITY_CHANGE ,1
org.iqiyi.video.vote.b.aux.a()<<*>> : checkVoteShowTime--hideVoteView ,89
<*> <*> is <*> <*> <*> <*> <*> = <*>.<*> ,3
AutoCleanReceiveServer:receive action:android.intent.action.SCREEN_ON ,4
onCreate ,4
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, <*> <*> blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,1
<MCT >< <*> <*> <*> <*> <*> <*> ,1
<*> 2DSDR: <*> <*> <*> <*> SDR <*> ,1
chinaDateTime:清晨<*>:<*> ,2
show ,6
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) connecting max <*> to uc.huawei.com:<*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> is [<*>]! ,2
<*> <*> com.tencent.mm broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,24
<*> <*> void *, int, int, <*> char *, <*> <*> <*> <*> <*> <*> ,2
onEntryAdded:<*>|com.qiyi.video|<*>|group_key_override|<*>|ranker_bundle, group=<*>|com.qiyi.video|g:ranker_bundle ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> => [END] <*> <*> ,4
RCV <- {<*> <*> Tethering stats list completed} ,24
<*> <*> <*> <*> <*> euid: <*> <*> <*> euid: <*> ,2
Alarm triggering (type <*> <*> <*> <*> type <*> when <*> <*> ,5
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.038124mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,31
<*> <*> Intent { <*> <*> <*> <*> ,1
<*> DownloadEpisodeAdapter] <*> ,1
bh1745-light calling driver <*> ,4
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> false gw|lte ,4
getInstalledApplications blocked ,2
resetPagerState ,15
<*> <*> <*> actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,3
HCDN_LOG: [<*>/<*>/<*>-<*>:<*>:<*>:<*>]:m_DBFilePath::memory: ,1
No config file found <*> ,4
<*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> <*> ,1
bssid=<*>:<*>:bc:0b:<*>:e0;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,1
uploadLocationAction:actionType:1actionMsg:PROVIDER:gps,PN:com.sankuai.meituanhd,HC:3bae2d<*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:KeySpace <*> <*> <*> <*> ,1
<*> <*> <*> samplingRate <*>, format <*>, channelMask <*>, flags <*> ,1
onStartedGoingToSleep ,1
<*> <*> <*> <*> pid: <*> <*> <*> ,9
<*> <*> state = <*> ,1
CallObjectMethod end ,5
updateDimmedActivatedHideSensitive overlap:true ,56
<*> : <*> <*> <*> <*> <*> <*> <*> : false ,1
at com.huawei.ecs.mip.proxy.TcpClientThread.onLoop(TcpClientThread.java:<*>) ,3
<*> <*> <*> <*> <*> <*> euid: <*> <*> ,6
<*> <*> <*> <*> <*> <*> <*> of ,1
hw_set_colortemperature: end-- ,9
value: http://logservice.vmall.com/osg/logServerAction!uf.htm?lsId=<*>&st=fcQe7L4m7GYCu0Jte8Hbva%2BnQ2KZT3zshg4xtdTqay8%3D&dsKey=<*>&tblName=<*> ,1
<*> <*> do nothing. ,1
resp->status: -<*> ,1
JNI_OnLoad->exit(puma) ,1
bssid=c0:<*>:<*>:6c:db:<*>;freq=<*>;level=<*>;flags=<*>;ssid=XTC-20140620ZII_Network_<*>; ,2
Mitigation:VDD[MODEM]:<*> ,1
selectOutput() commonFlags for output <*>, <*> ,16
DisabledState cellid = <*> ,4
received broadcast android.intent.action.BATTERY_CHANGED ,4
<*> enter for <*> <*> ,1
iqiyi message: ==== <*> <*> <*> <*> <*> <*> ,4
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
<*> <*> is: <*> ,2
updateDimmedActivatedHideSensitive overlap:false ,144
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,332
getRemainingChance <*> ,4
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
<*> <*> <*> <*> <*> for <*> <*> ,1
<*> connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4GPLUS),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,2
poll before: g_monitor_fd =<*> ,65
at android.provider.Settings$System.putString(Settings.java:<*>) ,1
22HQQroarjG3Uf2UBm5NqombplQS/vGCCQ== ,1
unproxy app:com.tencent.mm,uid:<*>,result:true ,2
<*> to get <*> <*> <*> <*> is not <*> ,4
ACTION_PFW_WAKEUP_TIMER ,2
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> 6c <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0d <*> 2a <*> ... ,1
StaEnabledState what=<*> ,4
mDateString is: <*>月<*>日星期六 ,7
<*> <*> <*> to uc.huawei.com:<*> ,9
<*> = <*> <*> <*> <*> ,6
SND -> {<*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
need to force refresh view ,15
Skipping, withExcluded: false, tr.intent:Intent { <*> <*> <*> <*> cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) } ,1
AwareMem_Kill: execute: killing count=<*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> mode to <*> <*> <*> <*> ,1
No peeking: not in use: <*>|com.huawei.health|<*>|null|<*> ,28
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 <*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*> ,4
[ACC]processReportInd: X: <*>.<*> Y: <*>.<*> Z: <*>.<*> x_offset:<*>.<*> y_offset:<*>.<*> z_offset:<*>.<*> ,75
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> id is [<*>]! ,1
<*>|rebuild notification ,75
action:android.com.huawei.bone.NOTIFY_SPORT_DATA, mPermissionType:<*> ,162
<*> result = <*> <*> <*> <*> <*> <*> ,1
Nexus initConnection ,1
at java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:<*>) ,1
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] <*> <*> <*> ,4
transitionTo: mode=MODE_OPAQUE, animate=false ,31
<*> ActivityRecord{5f12a6a u0 com.tencent.mm/.ui.LauncherUI <*> <*> <*> <*> ,1
cancelNotification,index:-<*> ,34
Watch Thread{<*>} <*> <*> <*> <*> <*> ,2
MagicLink2-BroadcastReceiver:====>ACTION_SCREEN_OFF ,5
Set power mode=<*>, type=<*> flinger=0x7f9a25b<*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:KeySpace : getkey <*> not <*> ,1
at org.json.JSONTokener.syntaxError(JSONTokener.java:<*>) ,1
Unfinished business... ,13
<*> <*> <*> mode to <*> ,6
at com.huawei.android.bastet.HwBastet.prepareHeartbeatProxy(HwBastet.java:<*>) ,2
[INFO:CONSOLE(<*>)] "Uncaught SyntaxError: Unexpected token var", source: (<*>) ,261
<*> <*> due to <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
[MmsProvider.query]读取彩信数据 ,4
buckets .....<*> .. <*> .. 5level <*> --> <*> <*> --> <*> <*> --> <*> <*> --> 0bucket <*> --> <*> <*> <*> <*> ,2
bssid=6c:<*>:<*>:<*>:<*>:3a;freq=<*>;level=<*>;flags=<*>;ssid=MERCURY_563A; ,2
notifyInterfaceClassActivity: client is com.android.server.net.NetworkStatsService$<*>@5d6efc ,31
onTouchEvent: code=<*>, action=<*>, <*> { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,1
<*> state is <*> <*> <*> <*> <*> <*> 中国移动 中国移动 <*> 中国移动 中国移动 <*> <*> <*> <*> not supported <*> <*> <*> <*> <*> <*> ,1
removeNotificationViews:<*>|com.qiyi.video|<*>|null|<*> ,1
<*> is null <*> <*> ,9
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x11,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,33
<*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 <*> <*> ,1
<*> MotionEvent { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> <*> <*> <*> ,2
<*> <*> <*> <*> <*> <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,4
myPid: <*> ,2
mode change : <*> ,3
Timer---run(), remainTime=<*> ,1
at android.app.ActivityThread.main(ActivityThread.java:<*>) ,1
disableEffects=null canInterrupt=false once update: false ,69
[qiyi_LOG_INFO <*> <*> <*> ,5
[DisposeLogUploadProgress.dispose] exception:<*> ,1
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> <*> 0b <*> <*> <*> <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> <*> ... ,1
<*> <*> <*> took <*> ms ,5
[ReceiverUtils.reportVersionInfo] ,4
SmartHeartBeat:setAlarmsPending, pkgList=[] ,1
ImsSenderRxr : Response data: [<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>][SUB0] ,2
VideoCallPresenter - <*> <*> ,1
NormalTraffic:update notification type = -<*> ,1
VirusAppsManager:begin isVirusAppExist ,1
cancelNotificationLocked,remove =com.android.incallui ,4
SearchActivity_pause_android.os.BinderProxy@3f1fd<*> ,1
ScreenState present ,2
WifiMonitor:wlan0 <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> color=0x00000000 vis=PRIVATE)) ,2
action:com.huawei.appmarket.service.downloadservice.Receiver, mPermissionType:<*> ,3
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:com.tencent.mm,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>] ,7
at com.amap.api.location.c.run(IAPSManager.java:<*>) ,1
WindowOrientationListener enabled ,8
onModemInfo: type=<*>,valueLen=<*>,subId=<*> ,1
setSystemUiVisibility <*> <*> <*> <*> <*> ,3
/storage/emulated/<*>/log/LogService/uploading/MLA-AL00_MLA-AL00C00B318-log_D470C2EF_<*>_ALL.zip ,1
value: <*>-<*>/<*> ,2
Apply window Height MATCH_PARENT ,22
<*> updatePackage <*> <*> <*> <*> size is <*> <*> <*> <*> size is <*> ,1
set ordinal Value failed! name is not in the enum map, name = ChrVolteStatisticInfo ,8
<*> PendingIntentRecord{3c38496 android broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,5
updateLightsLocked --> <*> <*> <*> ,4
InCallActivity - <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
sendMessage with obj<*> ,5
Watch Thread{<*>} <*> <*> <*> ,6
at android.content.ContentProviderNative.onTransact(ContentProviderNative.java:<*>) ,3
<*> <*> to get AllImpl object <*> <*> ,1
<*> <*> <*> <*> changed bounds; rebatching ,21
onEntryAdded:<*>|com.sankuai.meituan|<*>|null|<*>, group=<*>|com.sankuai.meituan|<*>|null|<*> ,5
formatChinaDateTime, change to China <*> ,37
<*> <*> <*> Heartbeat timer.timers{<*>} ,3
<*> <*> <*> broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,15
* bssid_hint=<*>:<*>:bc:0b:2d:<*> ,1
DisplayPowerState Updating screen state: state=ON, backlight=<*> ,1
ImsSenderRxr : <*> = true <*> = <*> <*> = <*> <*> <*> <*> ,2
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,2
refreshState=sound, RingModeState[,icon=com.android.systemui.qs.QSTile$DrawableIcon@8fb5eb0,label=静音,labelTint=<*>,textChangedDelay=<*>,contentDescription=静音,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=true,mode=<*>] ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:s(<*>, <*> <*> <*> <*> <*>, <*>), sock(<*>, <*>, <*>, <*>), times(<*>, <*>, <*>, <*>), delay(<*>, <*>)ms, m(<*>, <*>)KB, p:<*>, s:<*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>, <*>, <*>), e(<*>, <*>)/(<*>, <*>), k:<*>, d(<*>, <*>), de(<*>), s(online, <*>, <*>), SSL(<*>), UDP(<*>), r_d(<*>), s_d(<*>), c_d(<*>), dur(<*> m), vs(<*>, <*>, <*>), sysFM(<*> KB), ls(<*>, <*>),bypass[<*>]:[<*>] ,4
proxy app:com.tencent.mm,uid:<*>,result:true ,1
Acquiring suspend blocker "PowerManagerService.Display". ,1
<*> pid: <*>, <*> <*> ,8
Setting HAL interactive mode to true ,2
at com.huawei.ecs.mtk.util.SimpleThread.onLoop_i(SimpleThread.java:<*>) ,2
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> <*> <*> <*> <*> ,7
answer call by keyCode = <*>, <*> = false, <*> = false ,2
AutoStartupDataMgr:retrieveStartupSettings type <*> of com.ss.android.article.news is <*> ,6
收到子线程消息 ,1
<*> <*> <*> <*> { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,2
<*> id <*> ,2
networkAvailable=true ,3
Enqueueing ordered broadcast[bgkeyapp] <*> <*> <*> prev had <*> ,14
CtrlSocket Receiver,disable: false locked: <*> <*> <*> mSmartKeyguardLevel: normal_level mStartPowerSaving: <*> ,5
Create obj success use class com.huawei.android.totemweather.utils.HwCustTotemLocationImpl ,1
Action: Unknown ,2
<*> <*> id=<*> notification=Notification(pri=<*> contentView=null <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> id is not <*> <*> <*> = <*> ,4
FingerprintService getEnrolledFingerprints ,4
onFinishedGoingToSleep ,5
<*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> <*> <*> ,4
<*> connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,3
release:lock=<*>, flg=0x0, tag="NetworkStats", name=android", ws=null, uid=<*>, pid=<*> ,12
answer call by keyCode = <*>, down = true, isSupVolumnkeyAnswerCall = false ,5
<*> <*> <*> <*> = false ,5
<*> <*> <*> bytes <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> type <*> <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> 中国移动 中国移动 <*> 中国移动 中国移动 <*> <*> <*> <*> not supported <*> <*> <*> <*> <*> <*> ,1
Skipping, withExcluded: false, <*> <*> <*> <*> <*> <*> <*> (has extras) } ,2
Enter QmiChr_FetchModemInfo ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> ,28
<*> <*> <*> <*> contentView=null vibrate=null <*> <*> <*> <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*>, <*>), <*> <*>, <*>, <*>), <*> <*>, <*>, <*>), <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>, <*>, <*>), <*> <*> <*> <*> <*> <*> <*> <*> <*>, <*>), <*> <*> <*> <*> <*> <*> <*> <*> <*>, <*>), <*> <*> <*> <*> ,7
wait_finger_up FPC_LIB_FINGER_LOST ,1
handleNetworkDisconnect,resetWifiProManualConnect ,1
<*> read from <*> <*> ,4
<*> <*> <*> state = false, <*> = null ,3
workerFunction STATE_NAVIGATION ,5
KGSvcFp onAuthenticationAcquired.<*> ,18
<*> - <*> ,1
I/===> int ulp_dr_stop_engine() line <*> ,5
<*> <*> <*> - hexdump(len=<*>): <*> ,2
Model onReceive <*> <*> <*> flg=0x50000014 (has extras) } ,2
WifiStateManager:isWifiDisconnected: disconnect ,1
chinaDateTime:中午<*>:<*> ,2
is Beta User, userType = <*> ,27
WifiMonitor:wlan0 cnt=<*> dispatchEvent: <*> ,1
loadPic: <*> ,2
com.qti.dpmserviceapp <*> ,1
<*> is: <*> WAKEUP alarm trigger action = <*> package name is: <*> ,1
Failed to open <*> <*> ,1
ProximitySensor - <*> <*> <*> <*> <*> ,3
printPackageInfo begin. ,2
<*> <*> <*> <*> <*> <*> <*> <*> pid: <*> ,2
getThreshold: <*> ,1
<*> called handle:<*> <*> <*> ,2
<*> <*> <*> <*> <*> bytes <*> <*> <*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:s(<*>, <*> <*> <*> <*> <*>, <*>), sock(<*>, <*>, <*>, <*>), times(<*>, <*>, <*>, <*>), delay(<*>, <*>)ms, m(<*>, <*>)KB, p:<*>, s:<*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>, <*>, <*>), e(<*>, <*>)/(<*>, <*>), k:<*>, d(<*>, <*> <*> <*> <*>, <*>), SSL(<*>), UDP(<*>), r_d(<*>), s_d(<*>), c_d(<*>), dur(<*> m), vs(<*>, <*>, <*>), sysFM(<*> KB), ls(<*>, <*>),bypass[<*>]:[<*>] ,1
DefaultState !CMD_SCREEN_STATE_CHANGED rt=<*>/<*> <*> <*> ,2
state.clipTopAmount:<*>, i:<*> ,51
<*> called handle:<*> <*> ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,28
<*> <*> <*> <*> <*> <*> <*> <*> = false ,7
checkTimeOver true ,1
generateAddAnimation:null, false ,26
setKeyguardEnabled(true) ,1
hasEverConnected: false ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> id is <*> <*> <*> <*> <*> ,3
AutoCleanReceiveServer:receive action:android.intent.action.ACTION_POWER_DISCONNECTED ,1
Launcher doResumeWork() ,6
[ReportVersionInfo.uploadVersionInfo]uploadCurrentDeviceVersionInfo success ,1
RCV <- {<*> <*> Firewall command succeeded} ,8
chinaDateTime:下午<*>:<*> ,13
handleBatteryUpdate ,9
Launcher.LauncherProvider launcher-restore <*> <*> <*> ,1
<*> cellid = <*> ,3
cancelAllNotificationsInt called ,2
getStatic,count:<*>,work status:false ,42
bssid=bc:d1:<*>:bb:c9:e2;freq=<*>;level=<*>;flags=<*>;ssid=TP-LINK_fen; ,1
<*> int <*> line <*> ,1
void android::HwAlgorithmicInformation::setSmartAeInfo(int, <*> <*> <*> <*> <*> <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> ,4
<*> <*> <*> <*> void *, int, int, <*> <*> ,1
setProgress: <*> ,14
at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:<*>) ,1
onEntryUpdated:<*>|com.android.incallui|<*>|null|<*> ,1
<*> <*> is abandoned for <*> <*> <*> ,2
removeNotification:<*>|com.tencent.mm|<*>|null|<*> ,1
AwareMem_EventTracker: [APP_ACTIVITY_FINISH_<*>] is abandoned for memory <*> ,1
DisplayPowerStatesetScreenState: state=<*> ,5
<*> --> <*> ,1
IEs - hexdump(len=<*>): <*> 0f <*> <*> <*> <*> <*> <*> 2d <*> 6d <*> 6c 6f <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> ... ,6
I/===> int <*> <*> line <*> ,1
2G ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> not supported <*> <*> <*> <*> <*> <*> ,1
<*> r: <*> u0 euid: <*> <*> euid: <*> ,1
[main-<*>]enter detectStorage!!!(/HwOucUtility.java:<*>) ,1
tcp.conn{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) tcp <*> <*> <*> ,1
@@@@@@@@@@@@ uid :<*> download :false ,2
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) <<< ERROR(<*>) >>> <*> <*> <*> <*> ,1
enter ois_get_vibrate_status_func ,4
refreshState=airplane, BooleanState[,icon=ResourceIcon[resId=0x7f0201af],label=飞行模式,labelTint=<*>,textChangedDelay=<*>,contentDescription=飞行模式,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=false] ,4
mSeekListener onProgressChanged progress:<*> fromUser:false ,110
skip-low-Level:<*>(<*>),DataDisable;use level-<*> ,1
notifyScreenTurnedOn ,6
PFW.HwPFWService:alarm trigger ,3
<*> <*> <*> IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> id is [<*>]! ,1
<*> timer.timers{<*>} <*> <*> <*> ,1
isMonitorCellId mInfos.size() = <*> ,13
Skipping, withExcluded: false, tr.intent:Intent { <*> <*> <*> <*> (has extras) } ,7
[SocketRead_<*>:<*>:<*>-<*>]ctrlSocket success(android/null:<*>) ,1
<*>|logicalDealBroadcastEvent : Intent { <*> flg=0x50000014 (has extras) } ,1
addCurrentApInfo addApInfos ,1
action:android.intent.action.ANY_DATA_STATE, mPermissionType:<*> ,2
action:android.intent.action.PRECISE_DATA_CONNECTION_STATE_CHANGED, mPermissionType:<*> ,4
onReceive: action = android.intent.action.LTE_CA_STATE ,16
<*> <*> <*> <*> <*> <*> uid <*> <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:FSM_OpenFile => <*> <*> <*> <*> ,1
Java_com_tencent_mm_plugin_imgenc_MMIMAGEENCJNI_free <*> ,1
<*> is not <*> <*> <*> <*> <*> ,2
SearchResultActivity_create_tokennull ,1
ACDB -> <*> <*> <*> <*> ,6
PowerStatsHelper:minAveragePowerForCpu= <*>.<*> ,2
Model onReceive <*> <*> <*> <*> <*> ,2
bssid=<*>:<*>:bc:0a:fa:e1;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,1
retrieveServiceLocked, callerApp: <*> <*> flags: <*> ,35
HwDPMS received <*> <*> <*> ,3
0x0, 0x0, 0x0, 0x<*> ,11
frozenCheckLocked mDispatchFrozen=<*> mNextUnblockedEvent=<*> ,14
<*> <*> bc config <*> ,1
<*> <*> <*> intent:act:android.intent.action.BATTERY_CHANGED flag:<*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*> ,8
action:android.intent.action.NETWORK_SET_TIMEZONE, mPermissionType:<*> ,1
startAuthentication(com.android.systemui) ,3
<*> <*> <*> <*> = false, <*> <*> <*> <*> = <*>, <*> = <*>, <*> = <*>, mScrnOffAccTime = <*>, <*> = <*> ,1
Beacon IEs - hexdump(len=<*>): <*> 0f <*> <*> <*> <*> <*> <*> 2d <*> 6d <*> 6c 6f <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> ... ,4
<*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
I/LocTech-Value :: Data <*> <*> <*> <*> ,2
MagicLink2-BroadcastSender:====>sendStateChangeBroadcast <*> ,1
acquire <*> <*> <*> <*> <*> uid=<*>, pid=<*> ,2
load: so=libhwuibp.so ,1
<*> <*> ==================== TCP CLIENT DISCONNECT ==================== ,3
NotificationUtil:Month Warning Notification not create ,1
getCurrentCellid type type = PHONE_TYPE_GSM ,15
<*> <*> <*> due to <*> ,4
removeNotificationViews:<*>|com.tencent.mm|<*>|null|<*> ,1
Split enqueueing broadcast [callerApp]:ProcessRecord{fddc75d <*>:com.huawei.android.totemweather/u0a28} ,4
[ReceiverUtils.resumeLogUpload] ,4
readRilMessage: Buffer = [B@204bb9f HexData = [010000000404000012000000514f454d484f4f4b1d04080002000000ffff] ,53
<*> <*> <*> = true <*> <*> ,4
<*> pid: <*>, uid: <*>, <*> <*> ,1
<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|com.sankuai.meituan|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 vis=PRIVATE))) ,2
bindServiceLocked, r: <*> u0 euid: <*> <*> euid: <*> ,30
[HttpClient.login]redirect : ,1
action:com.huawei.android.push.intent.SOCKET_INFO, mPermissionType:<*> ,12
WPS: attr type=0x1011 len=<*> ,35
transferRemoteInputFocus: <*> ,188
[PollingService.onStartCommand]Start ,1
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> 2d <*> <*> <*> <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> <*> 0b <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
<*> <*> Connect to <*> <*> <*> <*> <*> ,4
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) connected ,5
<*> <*> = <*>.<*>, <*> = <*>.<*>, <*> = <*>.<*>, <*> <*> <*> ,2
<*> <*> test Type =<*> ,4
[ap] temp_new :<*> temp_old :<*> ,5
AppAutoStartupPolicy:prevent start receiver of package <*> for action <*> ,13
update() updated: <*> ,25
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
<*> <*> report_rate_f=<*>.000000Hz curr sample rate:<*>.<*> cur rpt rate:<*> max:<*>.<*> min:<*>.<*> ,4
DisplayBase::SetDisplayState: Set state = <*>, display <*> ,2
updateDisplayLocked: screenOn=true ,8
wpas_start_assoc_cb, <*> ,3
platform_can_split_snd_device: snd_device(<*>) num devices(<*>) new_snd_devices(<*>) ,11
notifyInterfaceClassActivity: client is com.android.server.connectivity.Vpn$<*>@e40aefb ,50
ash->screen off ,7
<*> <*> <*> , <*> : <*> ,2
<*> <*> <*> socket. ,3
org.iqiyi.video.vote.b.aux.a()<<*>> : <*> ,3
cancelNotification,index:<*> ,8
<*> <*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> = <*>, <*> <*> <*> <*> = <*>, <*> = <*> ,8
<*> <*> <*> <*> <*> <*> not in the <*> <*> <*> <*> <*> ,1
template id:<*> ,4
setActionsBackground,null == view,mPublicLayout ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [START],Mode[r] ,25
java.lang.Exception ,5
<*> <*> = false, <*> = false, <*> = false, <*> = false ,1
bssid=<*>:<*>:bc:0a:f2:<*>;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,1
<*> <*> com.tencent.mm broadcastIntent}}) changed bounds; rebatching ,27
isMobileDataEnable::dateEnable=true, cotrollerEnable=true ,5
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> id is <*> ,1
<*> <*> <*> <*> <*> *, const <*> *, const <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,1
HandlePowerStatistic:notifyPkgList1=[] ,1
m1: false ,261
<*> <*> <*> <*> <*> <*> <*> is <*> ,1
<*> <*> <*> = <*> <*> = <*> ,7
[CheckNewVersionThread-<*>]retrieve newversioninfo.xml: ,5
setScrollingEnabled: true ,14
at com.huawei.android.chr.ProtocolLogManager.handleReportChrAPCommonPara(ProtocolLogManager.java:<*>) ,2
hideScrim() ,3
<*> <*> <*> <*> = <*>, <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,6
Moving to <*> <*> <*> <*> <*> <*> <*> <*> ,3
<*> <*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> color=0x00000000 vis=PRIVATE) ,1
<*> ,2
WatchThread{<*>} TcpClientThread.disconnectSocket(TcpClientThread.java:<*>) disconnecting to uc.huawei.com:<*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => [END] ,32
isFailCall:true, mCallReasonFromAP:<*> ,1
PermissionDbVisitor:insertHistoryRecord:HistoryRecord[packageName:com.qiyi.video,permissionType:<*>,action:<*>,dateStartTime:<*>,timestamp:<*>] ,4
action:com.huawei.android.action.alarm_weather, mPermissionType:<*> ,3
dispatch ordered broadcast [foreground] <*> u-<*> android.intent.action.TIME_TICK}, has <*> receivers ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:WriteSdkGroupItem: hash has same <*> ,4
Apply <*> <*> <*> ,2
[LoginActivity.isLoggedIn]isLoggedIn:true ,4
mIntentReceiver-Package changed ,1
[ReceiverUtils.resumeLogUpload]resumeSendNow ,1
netmask =<*> ,16
bssid=<*>:3f:5d:<*>:a5:<*>;freq=<*>;level=<*>;flags=<*>;ssid=WAVLINK_A507; ,1
Fingerprint timeout ,9
<*> <*> = true, <*> = <*>, <*> = <*>, <*> = <*> ,1
handleWifiSwitchChanged state:<*> ,1
Reset ,2
<*> <*> <*> <*> = <*>, <*> <*> <*> <*> = false ,4
ImsSenderRxr : <*> ,2
<*>-<*>-<*> <*>:<*>:<*>.<*> T:<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
begin of formatChinaDateRange chinaDate:晚上<*>:<*> ,16
<*> <*> <*> <*> <*> Intent { <*> <*> <*> <*> <*> <*> ,2
Can't find <*> <*> <*> ,1
Calling fingersense_classify_touch() ,131
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 actions=<*> vis=PRIVATE publicVersion=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*> ,1
action:android.intent.action.USER_PRESENT, mPermissionType:<*> ,3
<*> reason = <*> ,1
No peeking: unimportant notification: <*>|com.huawei.health|<*>|null|<*> ,31
tcp.conn{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) tcp connection event TCP_CONNECTED ,8
send: <*> ,69
Failure getting <*> <*> <*> <*> <*> (error <*>) ,1
[ReceiverDispatcher-<*>]ctrlSocket success(android/null:<*>) ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,40
EventCenter Get :android.com.huawei.bone.NOTIFY_SPORT_DATA ,61
TurnOffDCState: false ,1
updateLightsLocked --> mBatteryLight.turnOff ,33
<*> <*> <*> = -<*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> to uc.huawei.com:<*> ,3
<*> <*> <*> status = <*>, id = <*> ,4
scheduleUnvalidatedPrompt <*> ,1
onForegroundActivitiesChanged pid = <*>, uid = <*> ,3
huawei_antiTheft_manager_init enter ,1
MemoryRecoveryDMEPlugin: interrupt ,2
virtual void android::IppAlgoSmartAE::onNewArrival(void *, void *, int, int, int) <*> ,4
flush,<*> handle <*> ,1
writeSummaryFromParcelLocked, duration: <*> ,13
acquire lock=<*>, flags=0x1, tag="WakerLock:<*>", name=com.tencent.mm, ws=null, uid=<*>, pid=<*> ,18
<*> <*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 actions=<*> vis=PRIVATE publicVersion=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
<*>|compensate <*> <*> ,84
at roboguice.RoboGuice.setBaseApplicationInjector(RoboGuice.java:<*>) ,1
nspFileSize<*> ,4
Ignore update <*> <*> <*> ,1
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:false activityOut:true isRoaming:false ,2
onBlurFinish ,1
MagicLink-BtAndWifiWrapper:==>UNHANDLE MSG:<*> ,2
SND -> {<*> bandwidth <*> <*> <*> ,2
out_get_latency: Latency <*> ,16
<*> <*> to hibernation <*> <*> ,2
release:lock=<*>, flg=0x0, <*> <*> <*> ws=null, uid=<*>, pid=<*> ,5
random pool - hexdump(len=<*>): [REMOVED] ,44
at android.os.Binder.execTransact(Binder.java:<*>) ,2
<*>|upDateHealthNotification()|<*>|<*>.<*>|<*> ,69
<*> <*> <*> <*> = <*> <*> = <*> <*> = <*> <*> = <*> ,1
notifyInterfaceClassActivity: client is com.android.server.ethernet.EthernetNetworkFactory$InterfaceObserver@fccfd<*> ,41
I/===> int <*> line <*> ,3
BtChrStatisticsManager:new StatisticsCHRMsgHandler ,1
WPS: attr type=0x103b len=<*> ,35
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> ,54
java.net.SocketException: Socket <*> ,1
Launcher.LauncherProvider queried count: <*> ,11
Watch Thread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown input: java.net.SocketException: Socket is not <*> ,1
packageInstalled true! ,5
triggerBuildingIndex(): invalid id, return. ,10
<*> <*> <*> <*> <*> uid=<*>, pid=<*> ,1
subId:<*> phoneType:<*> networktype:<*> targetClass:<*> masterLevel:<*> slaveLevel:-<*> ,135
tcp.conn{<*>} TcpSocket.connect_i(TcpSocket.java:<*>) ,3
AutoStartupDataMgr:isUnderControll third party not in whitelist: com.netease.newsreader.activity ,5
getRecentTasks: num=<*>,flags=<*>,totalTasks=<*> ,13
action=android.intent.action.PACKAGE_CHANGED queryReplace=false ,1
delay_us exceeds max timeout: <*> us ,8
at android.app.FragmentManagerImpl.dispatchActivityCreated(FragmentManager.java:<*>) ,1
WatchThread{<*>} TcpCirChannel.shutdown(TcpCirChannel.java:<*>) Login_By_Step-> shut down now connect ,11
<*> = <*> <*> ,8
<*> <*> <*> <*> : <*> <*> : false <*> : <*> <*> <*> <*>-<*>-<*> <*>:<*>:<*> <*> : false ,6
getNeighboringCellInfo calling <*> <*> <*> ,4
<*> <*> = <*>, <*> ,1
<*> <*> <*> tag=null key=<*>|com.huawei.health|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,2
proxyBroadcast:[com.huawei.espacev2] proxy:false ,1
<*> ActivityRecord{b46dc67 u0 com.android.incallui/.InCallActivity <*> <*> <*> ,1
mIsScreenOn is: false, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> is: <*> ,1
cancelNotificationWithTag pid <*>,uid = <*> <*> <*> <*> <*> ,5
MemoryRecoveryDMEPlugin: <*> <*> <*> <*> ,2
SND -> {<*> bandwidth <*> <*> ,4
<*> <*> to fs_data ,1
RCV unsolicited event from native daemon, event = <*> <*> <*> <*> <*> <*> ,3
<*> <*> <*> / 301ms, <*>.<*> / 301ms, <*>.<*> / <*> <*>.<*> / 301ms, <*>.<*> / 301ms, <*>.<*> / 301ms, <*>.<*> / 301ms, <*>.<*> / 301ms, <*>.<*> / 301ms, <*>.<*> / <*> <*>.<*> / 301ms, <*>.<*> / <*> <*>.<*> / 301ms, <*>.<*> / <*> <*>.<*> / 301ms, <*>.<*> / <*> <*> ,1
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] is abandoned for memory <*> <*> <*> policy can not execute ,2
action:android.net.wifi.SCAN_RESULTS, mPermissionType:<*> ,2
failed to <*> <*> <*> ,2
huawei_cust_set_parameters: exit with code(<*>) ,13
Rcvd UNSOL response with <*> bytes data for SUB<*> ,80
DisplayPowerStatesetColorFadeLevel: level=<*>.3857098E-<*> ,2
<*> = true, <*> = <*> ,1
stopFilter m_filterIsStarted:false ,9
[INFO:CONSOLE(<*>)] "Uncaught <*> <*> <*> <*> source: (<*>) ,4
resumeTopActivityLocked: <*> <*> need to <*> <*> ,2
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.76mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,1
onReceive, action:android.intent.action.USER_PRESENT ,2
at com.android.providers.settings.SettingsProvider.mutateSystemSetting(SettingsProvider.java:<*>) ,1
get_spk_pa_type: pa is max<*> ,8
showNotificationAll ,119
action:InCallScreenIsForegroundActivity, mPermissionType:<*> ,5
ACDB -> <*> <*> type = <*> ,5
RTM_NEWROUTE Indication ,4
ImsSenderRxr : <*> <*> <*> <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,2
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,4
at com.baidu.location.e.a.a(Unknown) ,2
<*> <*> to <*> ,1
Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW <*> <*> <*> (has extras) } ,3
<*> = <*> = <*> ,1
audio_extn_fbsp_get_parameters: Speaker protection disabled ,1
LM mrssi=-<*> ,6
<*> <*> <*> <*> <*> <*> * <*> * <*> <*> <*> <*> <*> <*> <*> <*> * <*> * <*> <*> <*> <*> ,1
at android.app.ContextImpl.enforceCallingOrSelfPermission(ContextImpl.java:<*>) ,2
at android.content.ContentProvider$Transport.call(ContentProvider.java:<*>) ,3
actionUrl:http://<*>.<*>.<*>.<*>/dlv2/psrv01/hwdevlogbeta/<*>/<*>/<*>/<*>/<*>/8a4f3446-44d3-4d0e-ab76-3c478d99d499.zip ,1
Start session ,1
LocalReceiver receives:android.intent.action.PACKAGE_RESTARTED ,1
action:android.net.wifi.STATE_CHANGE, mPermissionType:<*> ,3
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_lte ,148
getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output ,313
EAPOL: txSuppRsp ,3
not in link monitoring mode, ignore TCP result . ,40
Acquiring suspend blocker <*> ,10
workerFunction STATE_WAIT_FINGER_UP ,2
platform_set_channel_map channel_count:<*> ,3
<*>|Alarm uploadStaticsToDB ,2
notifyInterfaceClassActivity: client is com.android.server.net.NetworkPolicyManagerService$<*>@4df0feb ,35
APS: 2DSDR: AbsListView.FlingRunnable.endFling, we will clear SDR ratio ,10
closeAudioSink ,1
<*> <*> <*> <*> <*>,<*>-<*>,<*> #7f14004e app:id/msim_status_bar_operators_card_one_id} ,1
<*>|upLoadOneMinuteDataToEngine mDeviceHuuid=db72ce0a35db8d3b ,1
<*> <*> <*> is <*> <*> <*> is <*> ,1
worker idle ,12
Beacon IEs - hexdump(len=<*>): <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> <*> <*> <*> 6c <*> <*> 0d <*> <*> 0c <*> <*> ... ,2
packAllLogInDoneDir ,1
Enter InternetReadyState ,2
action:android.os.action.LIGHT_DEVICE_IDLE_MODE_CHANGED, mPermissionType:<*> ,4
ProximitySensor - <*> <*> <*> <*> ,4
WeatherDynamicUpdater update before : mDrawingData[<*>] = <*> <*>, <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:svn_closeAll <*> = <*> ,3
AFTER CALLBACK ,4
acquire lock=<*>, flags=0x1, <*> name=com.android.phone, ws=null, uid=<*>, pid=<*> ,2
value: http://logservice.vmall.com/osg/logServerAction!uf.htm?lsId=<*>&st=I7AAet5yNnKFm88%2FDxOrd%2FSrb6m%2BzKJqBwZnoe4jakc%3D&dsKey=<*>&tblName=<*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [WARN] <*> <*> <*> <*> <*> <*> ,3
at android.content.ContentProvider$Transport.enforceReadPermission(ContentProvider.java:<*>) ,1
disconnected, trafficStats: ,1
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 <*> <*> <*> activityIn:false activityOut:false isRoaming:false ,3
Flags: 0x38d83e<*> ,1
onEntryRemovedInternal:<*>|com.android.incallui|<*>|null|<*>, group=<*>|com.android.incallui|<*>|null|<*> ,4
setLivenessSwitch:start ,2
<*> <*> = <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
sendKeyguardReset ,2
<*> <*> <*> <*> <*> need to <*> <*> ,1
enableTriggerMethod ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> change to <*> ,3
KGSvcCall onScreenTurnedOff. ,3
getMobileDataEnabled()+ subId=<*> ,5
Unproxy wakelock uid = <*> pid = <*> ,9
chinaDateTime:晚上<*>:<*> ,16
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,1
sending alarm <*> type <*> when <*> <*> = <*>,listenerTag =null ,23
setIsExpanded: false ,4
<*> <*> <*> <*> id <*> <*> <*> <*> <*> <*> <*> ,1
NormalTrafficAnalysis:alert byte = <*>, so return ,6
<*> <*> { action=ACTION_DOWN, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 <*> <*> ,1
at com.huawei.android.chr.ProtocolLogManager.handleMessage(ProtocolLogManager.java:<*>) ,3
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> children:[], parent:null, conferenceable:[], videoState:Audio Only, mSessionModificationState:<*>, VideoSettings:(CameraDir:<*>)] ,1
<*> <*> <*> manager service. ,2
batch,<*>,handle <*>, timeout:<*> ,period_ns:<*> ,5
turn off notificationLight due to incall or screenon ,13
ImsServiceSub : <*> networkMode = <*> registered = <*> status = <*> restrictCause = <*> ,1
acquire lock=<*>, flags=0x1, tag="RILJ_ACK_WL", name=com.android.phone, ws=null, uid=<*>, pid=<*> ,169
<*> <*> is im app and connected ok, delay to H! ,5
wlan0: Control <*> <*> <*> <*> <*> ,4
BD.Scheduler:Heartbeat start ,1
Heartbeat timer.timers{<*>} <*> <*> <*> ,2
ProviderCallUtils callBadge isCloned = false ,1
makeExpandedInvisible: mExpandedVisible=true ,5
show_incallscreen <*> ,3
homekey ,1
Setting mDismissKeyguard true by win Window{e6a6b5e u0 com.android.incallui/com.android.incallui.InCallActivity} ,28
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,6
release:lock=<*>, flg=0x0, <*> <*> ws=WorkSource{<*>}, uid=<*>, pid=<*> ,6
set ordinal Value failed! name is not in the enum map, name = <*> ,2
action: ACTION_SERVICE_STATE_CHANGED ,1
shouldBlockLocation ret:false ,182
<*> <*> <*> <*> <*> <*> <*> u0 euid: <*> <*> ,1
<*> <*> <*> broadcastIntent}}) changed bounds; rebatching ,27
periodReadTask,LastWrittenBytes:<*> ,1
monitor check touch devices ,19
huawei_cust_get_parameters: returns ,6
end ,1
IEs - hexdump(len=<*>): <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> <*> <*> <*> 6c <*> <*> <*> 2a <*> <*> <*> <*> ... ,3
ImsSenderRxr : <*> = <*> status = <*> restrictCause = <*> <*> <*> <*> ,2
<*> <*> : <*> ,58
HDebug print the key screen_state ,1
stopNavigating, mStarted=true ,2
at com.android.internal.telephony.ITelephony$Stub.onTransact(ITelephony.java:<*>) ,1
<*> <*> <*> <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
<*> <*> = <*> <*> <*> <*> = <*> ,3
q9+N+OWVISGADkvhgNxbCVLi2sfaBGedyCY5kmk+hm3U9O3R0RhDXr6BuyuxplGfIjzvMSrcb2Xt ,1
handleNotifyStartedGoingToSleep ,1
onReceive, action:android.intent.action.SCREEN_OFF ,11
<*> took <*> <*> <*> <*> ,1
<*> wakelock uid = <*> pid = <*> ,4
main{<*>} PushService.onStartCommand(PushService.java:<*>) Push Service <*> <*> <*> <*> ,1
InCallActivity - <*> <*> <*> <*> <*> ,2
[LogUploadService.resumeUpload] ,1
DeviceStateListener:MyCityChanged: false ,1
TaskController:onLocationSuccess ,1
HsmPackageManager:init locale:zh_CN ,1
dont updateTargetBssid ,1
bssid=<*>:<*>:bc:0a:fa:e0;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> ,18
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread <*> <*> ,5
[] ,2
pool-<*>-thread-<*>{<*>} BaseBroadcast.sendBroadcast(BaseBroadcast.java:<*>) no receiver for action#com.huawei.espace.service.setstatus ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> ok ,3
getUidWakeLock uid: <*> wakelock(minutes): <*> ,25
wlan0: BSS: <*> <*> <*> <*> <*> ,1
StatusBarNotifier - <*> <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
updateLowPowerMode,isPowerSaveMode:falseisInteractive:false ,7
<*> <*> <*> im app and connected ok, delay to H! ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> = <*> ,3
disable: < expand <*> <*> <*> <*> <*> <*> clock navigationbar <*> quick_settings > ,1
<<*>-<*>-<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> ,1
WatchThread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown <*> java.net.SocketException: Socket is closed ,1
<*> <*> <*> <*> <*> <*> int, int, <*> ,1
Action:start, CurrentState:MEDIA_PLAYER_STARTED ,1
<*> <*> <*> [<*>, <*>, <*> ,2
notifyScreenOn ,7
<*> <*> <*> <*> <*> <*> <*> = false, <*> = <*>, <*> = <*>, delta = <*>, mScrnOffAccTime = <*>, mScrnOnAccTime = <*> ,1
<*> is null <*> <*> <*> <*> ,6
Pid:<*> MediaPlayer::start ,1
ImsServiceSub : handleSsac voice = <*> ,24
<*> took <*> ms <*> <*> <*> <*> <*> <*> <*> <*> ,2
at com.huawei.android.bastet.HwBastet.<init>(HwBastet.java:<*>) ,6
Fingerprint RunningStateChanged. <*> ,7
bssid=<*>:<*>:bc:0a:f2:<*>;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,2
<*> TcpClient.clearAll(TcpClient.java:<*>) ==================== TCP CLIENT CLEAR ALL ==================== ,6
stepAtomic ,2
<*> enable, <*>: mEnabled=<*> ,2
onClockLocationChange ,2
RCV <*> <*> <*> <*> <*> <*> ,4
GetProtocolFailCause failed. ,1
<*>-<*>-<*> <*>:<*>:<*>.<*> T:<*> <*> <*> <*> <*> ,2
bssid=<*>:<*>:<*>:c3:8c:<*>;freq=<*>;level=<*>;flags=<*>;ssid=shuilin; ,2
[qiyi_LOG_INFO DownloadEpisodeAdapter] setEpisodeTitle ,10
bssid=<*>:<*>:<*>:1f:f0:<*>;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,1
<*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> <*> <*> <*> ,4
getBuddyInfoLines:buddyinfo: ,3
ACDB -> <*> = <*> ,2
overlapAmount:<*>.<*>, previousNotificationEnd:<*>.<*>, newYTranslation:<*>.<*>, location:<*>, i:<*>, getTopPadding:<*>.<*>, <*> ,4
uid:<*> pid:<*> PhoneStateListener.LISTEN_CELL_LOCATION:<*> events:<*> ,13
Create obj success <*> <*> <*> ,4
<*> <*> <*> <*> <*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> ,1
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] is abandoned for memory <*> <*> <*> <*> <*> <*> <*> ,1
t:false, fl: false, p: <*>, ce: <*> <*> <*> ,2
cancelNotificationWithTag pid <*>,uid = <*>,tag = low_battery,pkg =com.android.systemui,id =<*> ,5
pluggedStatus: <*> ,4
AwareMem_Kill: updateGroupList <*> move high <*> <*> ,3
onReceive, action:android.intent.action.SCREEN_ON ,8
<*> <*> <*> <*> <*> <*> <*> <*> <*> is <*> ,6
org.iqiyi.video.player.cv.ag()<<*>> : current progress: progress= <*> ,81
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> H! ,2
static void <*> <*> <*> <*> = <*> ,1
action:com.tencent.mm.ui.ACTION_DEACTIVE, mPermissionType:<*> ,14
handleMessage(<*>) ,13
getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output ,111
answer call by keyCode = <*>, <*> = true, <*> = false ,3
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> <*> = <*> ,4
<*> <*> line <*> QMI_LOC_GET_BEST_AVAILABLE_POSITION_REQ_V<*> ,1
[openFile] 打开文件 ,1
cancelNotificationWithTag pid <*>,uid = <*>,tag = <*> <*> <*> ,9
<*> <*> <*> <*> = true, <*> = false, <*> = <*>, <*> = <*>, delta = <*>, mScrnOffAccTime = <*>, mScrnOnAccTime = <*> ,1
setLVMMode abort ,1
ordered broadcast[background] <*> <*> <*> ,1
cellid has changed ,2
KGSvcCall onFinishedGoingToSleep. ,6
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> <*> typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false ,3
acquire lock=<*>, flags=0x1, <*> <*> ws=WorkSource{<*>}, uid=<*>, pid=<*> ,2
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.0mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,1
fddn EVENT_GET_AD_DONE FDN_PS_CHECK:false ,FDN_PRELOAD_CACHE:true ,3
<*> <*> <*> <*> <*> <*> int, int, <*> <*> ,1
updateLight <*> <*> <*> <*> <*> ledOffMS :<*> ,1
<*> <*> <*> <*> flags: <*> ,6
not 3G net type. do nothing. ,41
<*> <*> <*> <*> <*> <*> <*> type <*> when <*> <*> <*> type <*> when <*> <*> <*> type <*> when <*> <*> ,1
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=false,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
<*> { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,6
<*> result = <*> <*> <*> ,2
removeFreezeProcess pkg:com.huawei.appmarket ,1
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_hspap_show_4g ,157
endPos<*> ,1
mActiveIface: wlan<*> ,1
void qcamera::IppAlgoColorEffect::onNewArrival(int, void *, int, int, const char *, <*> <*> <*> <*> <*> <*> ,3
ImsServiceSub : <*> <*> = <*> <*> = <*> status = <*> <*> = <*> ,3
reportGpsStopped: {GA:<*>,PAR1:<*>,PAR2:<*>,PAR3:null,PAR4:null,PAR5:<*>.<*>} ,1
<*> <*> <*> <*> <*>, <*> ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FileSec: have right to open file due to cur app sec level = <*> is higher than file app(&<*>ߢ[ ,15
<*> <*> <*> OK <*> ,1
pkg <*> <*> <*> pid: <*> <*> <*> ,3
<*>|logicalDealBroadcastEvent : Intent { <*> <*> ,2
onStepCounterChange stepsNum:<*> ,72
HwPhoneWindowManager has intercept Key : <*>, isdown : false, flags : <*> ,1
addFreezeProcess pkg:com.huawei.espacev<*> ,4
<*> <*> is <*> <*> <*> <*> <*> <*> <*> ,5
expand: start ,2
do not support AFT because of no config ,6
Remaining Num Attempts = <*> ,7
LightSensor, enable, <*>: <*> ,11
[StartupguideUtils.isScreenLocked]isScreenLocked=true ,1
RecentLogic{<*>} RecentLogic.addConversationEntity(RecentLogic.java:<*>) add chat recent! ,5
mode <*> <*> <*> ,5
addNotification key=<*>|com.tencent.mm|<*>|null|<*> ,1
sendStickyBroadcast: action=android.net.conn.CONNECTIVITY_CHANGE ,1
refreshState=rotation, BooleanState[,icon=ResourceIcon[resId=0x7f0202ed],label=自动旋转,labelTint=<*>,textChangedDelay=<*>,contentDescription=自动旋转屏幕,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=true] ,3
getSentSize id=<*> ,2
notifyUiVisibilityChanged:vis=0x40000600, SystemUiVisibility=0x<*> ,2
[ConnectivityChangeReceiver.onReceive]Start! ,3
AutoCleanReceiveServer:receive action:android.intent.action.ACTION_POWER_CONNECTED ,1
at java.io.FileInputStream.<init>(FileInputStream.java:<*>) ,109
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
notifyInterfaceClassActivity: client is com.android.server.connectivity.Tethering@ff4a50f ,35
release:lock=<*>, flg=0x0, tag="*launch*", name=android", ws=WorkSource{<*>}, uid=<*>, pid=<*> ,2
at com.android.providers.telephony.TpProviderHw.checkPermission(TpProviderHw.java:<*>) ,1
power log dlsym ok ,6
Start "p2p_supplicant" ,1
<*> <*> Intent { <*> <*> <*> ,2
enqueueNotificationInternal: <*> <*> <*> ,2
Skipping, withExcluded: false, <*> <*> <*> <*> <*> (has extras) } ,2
VideoCallPresenter - <*> <*> <*> <*> ,1
at com.android.okhttp.okio.AsyncTimeout$<*>.read(AsyncTimeout.java:<*>) ,1
<*> <*> <*> <*> <*> U=<*> StackId=<*> sz=<*>} <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,81
<*> <*> <*> mSecond:<*>] ,3
HandlePowerStatistic:handleTotalControl ,1
onKeyguardVisibilityChanged(false) ,1
<*> <*> id = <*> <*> <*> <*> <*> ,4
HoldService:locationInfo switch is on . pid = <*> ,87
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> id is <*> id is <*> ,1
Skipping, withExcluded: false, tr.intent:Intent { <*> <*> <*> <*> ,8
removeFreezeProcess pkg:com.huawei.espacev<*> ,3
<*> <*> <*> pid: <*>, uid: <*> <*> <*> <*> <*> ,7
get_decryption_wifi_mac:decrypt_wifi_mac in. ,1
at com.huawei.systemmanager.rainbow.comm.request.AbsServerRequest.doRequest(AbsServerRequest.java:<*>) ,1
<*> <*> <*> int*) const <*> <*> ,1
AwareMem_EventTracker: [APP_ACTIVITY_FINISH_<*>] is abandoned for <*> <*> <*> <*> ,1
[qiyi_LOG_INFO DownloadEpisodeAdapter] localPath = /storage/emulated/<*>/Android/data/com.qiyi.video/files/<*>_<*>/<*>_<*>.jpg ,6
<*> calling driver setDelay <*> ms ,4
Enter QmiChr_GetProtocolInfo ,3
<*>|MSG_RECORD_DATA_TO_FILE ,10
Skipping, withExcluded: false, <*> <*> <*> <*> <*> <*> (has extras) } ,1
bssid=<*>:<*>:bc:0a:f1:<*>;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,3
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> ... ,4
PFW.HwPFWService:handle PFW_MSG_SYSTEM ,15
<*> <*> = <*>, <*> = <*>, <*> = <*> ,4
<*> output <*> ,1
refreshState=screenshot, State[,icon=com.android.systemui.qs.QSTile$DrawableIcon@8fb5eb0,label=截屏,labelTint=<*>,textChangedDelay=<*>,contentDescription=null,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=null,expandedAccessibilityClassName=null,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null] ,1
mSimSubId:<*> onDataActivity: direction=<*> ,170
at java.lang.Thread.sleep(Thread.java:<*>) ,1
mIsNetworkSpeedEnabled = false, mIsAirplaneMode = false, <*> = false, <*> = true, <*> = false, <*> = true, <*> = false ,1
<*> <*> <*> = <*> ,109
suspendAutohide ,28
<*> <*> <*> <*> <*> device <*> <*> ,2
[aware_mem] process <*> <*> <*> <*> <*> ,1
clearEffects :<*>|com.android.mms|<*>|null|<*> ,1
Skipping, withExcluded: false, tr.intent:Intent { <*> <*> <*> (has extras) } ,13
at com.huawei.keyguard.support.magazine.MagazineWallpaper$<*>.onMagazinePicLoaded(MagazineWallpaper.java:<*>) ,7
WeatherDynamicUpdater update before : <*> <*> <*> <*>, <*> ,5
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> } ,1
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, metaState=<*>, flags=0x68, <*> repeatCount=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x101 } ,6
<*> <*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,3
<*> <*> <*> <*> <*> <*> <*> ,660
<<*>-<*>-<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
collapseAllGroups: ,3
[IssueTypeParser.parseRndIssueType]load configuration ,2
new Process <*> <*> <*> <*> euid: <*> ,1
<*> <*> <*> <*> <*> <*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
handleMessage what = <*> ,21
dispatch ordered broadcast [foreground] <*> <*> <*> has <*> receivers ,16
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_customized_networkType_entry ,144
at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:<*>) ,1
total/<*>/<*> ,1
timeForContinueCapture id:<*> ,2
<*> alarm <*> type <*> when <*> <*> = <*>,listenerTag =null ,1
fingersense_touch_up() finished ,116
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,13
bssid=<*>:<*>:<*>:8d:f7:8e;freq=<*>;level=<*>;flags=<*>;ssid=PW_<*>.4G; ,1
isBluetoothScoOn... ,8
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> is <*> ,1
<*> <*> <*> <*> : <*> ,6
Sending <*> <*> <*> <*> <*> <*>:com.android.phone/<*> pkg com.android.phone ,1
exit keyguard:<*> ,3
<*>|setTodayTotalDetailSteps to Prefence todaySendorSteps=<*>##<*>##<*>##<*>##<*>##<*> ,1
mIsEffect:false ,4
setActionsBackground,null == view,mPrivateLayout ,7
<*> <*> = false <*> = false <*> = <*> ,1
huawei_common_set_parameters: exit with code(<*>) ,3
<*> <*> <*> <*> <*> <*> <*> <*> <*> to <*> ,1
AppAutoStartupPolicy:prevent start receiver <*> <*> <*> <*> <*> <*> ,4
<*> <*> <*> <*> <*> <*> <*> does not <*> <*> <*> <*> ,1
at com.huawei.svn.sdk.socket.SvnSocket.connect(SvnSocket.java:<*>) ,1
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,4
AppAutoStartupPolicy:prevent start receiver of package <*> for action android.net.conn.CONNECTIVITY_CHANGE ,27
<*> exit with code(<*>) ,22
updateBarBgColor:emuiStyle=<*>,statusBarColor=#<*>,navigationBarColor=#<*>, isEmuiLight=-<*> ,3
<*> <*> <*> <*> <*> <*> <*> <*> est=<*> ,1
bssid=<*>:fc:<*>:7a:f3:b2;freq=<*>;level=<*>;flags=<*>;ssid=SD2; ,1
<*> <*> <*>, <*>), <*> <*> <*> ,7
<*> is not <*> <*> <*> ,9
can not <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
ACDB -> <*> <*> ,6
<*> <*> <*> data: [<*>, <*> ,2
[Thermal_Hw] temperature_valid, battery : temperature is invalid, invalid temperatrue is <*> ,116
updateBarBgColor:emuiStyle=<*>,statusBarColor=#FFFCFCFC,navigationBarColor=#<*>, isEmuiLight=-<*> ,3
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:<*>) ,1
ImsSenderRxr : <*> data: [<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,2
<*> <*> open file <*> line <*> of <*> ,2
<*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null <*> defaults=0x0 flags=0x2 color=0x00000000 <*> <*> <*> ,1
formatChinaDateTime equals. ,62
Proxy wakelock uid = <*> pid = <*> ,4
<*> <*> pid: <*>, euid: <*> ,6
<*> <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
IEs - hexdump(len=<*>): <*> <*> <*> 6c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
Client requesting input be hidden, pid=<*> ,166
<*>| <*> <*> <*> ,5
actionUrl:http://<*>.<*>.<*>.<*>/dlv2/psrv01/hwdevlogbeta/<*>/<*>/<*>/<*>/<*>/37f4a36a-ff69-4d5a-a5fc-da027f5661c6.zip?resume ,1
BgPowerManagerService:onStartCommand ,1
enableDefaultTypeAPN= true ,1
<*> <*> <*> <*> <*> <*> <*> (has extras) } <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
onCreateView : ClassNotFoundException, In this case we want to let the base class take a crack at it ,85
onHeadsUpStateChanged:<*>|com.tencent.mm|<*>|null|<*> ,4
IEs - hexdump(len=<*>): <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> <*> <*> <*> 6c <*> <*> 0d 2a <*> <*> <*> <*> ... ,1
getRecentTasks: topActivity=ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI} ,3
<*>-<*>-<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
Report temperature: <*> temp :<*> report_threshold:<*> ,10
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) <*> = <*> ,9
<*> PendingIntentRecord{7f86237 com.huawei.espacev2 broadcastIntent}}) changed bounds; rebatching ,9
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
<*> <*> due to <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> eventTime=<*>, downTime=<*>, deviceId=<*>, <*> <*> ,2
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 6c <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> line <*> ,5
<*>|getTodayTotalSteps <*> ,289
<*>|logicalDealBroadcastEvent : Intent { <*> <*> <*> ,1
BlurBitmap draw super <*>.<*> ,1
<*> <*> <*> <*> = <*>, <*> = <*>, <*> <*> <*> <*> <*> <*> = <*> ,1
Split <*> <*> <*> <*> ,5
<*> <*> state = <*>, <*> <*> <*> <*> = <*>, <*> <*> = <*> ,2
Dispatching event to interface: wlan<*> ,11
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> id = <*> ,1
<*> <*> <*> <*> : <*> false ,9
NatTrafficNotifyService:delta byte = <*> no traffic delta = 0Traffic state is <*> ,9
[main-<*>]HwOucApplication--onCreate, end(hwouc/HwOucApplication.java:<*>) ,1
<*> <*> pid: <*> <*> <*> <*> pid: <*> ,3
BtChrStatisticsManager:READ_AFTER_BT_STARTED event. ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> screen off ,1
clearTetheredNotification ,1
Split enqueueing broadcast <*> <*> ,73
ProximitySensor, enable, <*>: en=<*> ,3
<*> <*> is <*> ,8
isSecondaryUser() end ,1
at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:<*>) ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> cost <*> <*> ,2
GetAddrInfoHandler addr: <*> ,3
tcp.conn{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) tcp connection event <*> ,3
onEntryAdded:<*>|com.android.incallui|<*>|null|<*>, group=<*>|com.android.incallui|<*>|null|<*> ,4
<*> <*> <*> running. ,1
qsc_start_app end ,2
updateLightsLocked,mInCall =false,mScreenOn = true,ledNotification == null?true ,1
<*>|MSG_RECORD_DATA_TO_FILE_DELAY datas.size()=<*> ,5
Setting HAL <*> mode to true ,3
<*> intent Intent { <*> <*> (has extras) } on <*> <*> ,1
KGSvcCall onStartedGoingToSleep. ,1
N9ckTNpuQA+AHpOhnpK/dxCoVWrLp2nzLmDFPUMjsd2S3IEtxt4ONj3Kka4ncCsPPfVtgGOC856a ,1
C onDismissRequested reason = <*> ,2
<*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 vis=PRIVATE))) ,2
loss[<*>]=<*>%, volume=<*> ,20
value: http://logservice.vmall.com/osg/logServerAction!uf.htm?lsId=<*>&st=8GizDMFJTvMVAqA1o8peOOoOnD6yUZIPlgy6gbNIi3M%3D&dsKey=<*>&tblName=<*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> ms ,1
bssid=bc:d1:<*>:2e:<*>:<*>;freq=<*>;level=<*>;flags=<*>;ssid=MERCURY_<*>; ,2
CTRL-DEBUG: global_ctrl_sock-sendto: sock=<*> sndbuf=<*> outq=<*> send_len=<*> ,68
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*> ,1
@@@@@@@@@@@@ uid <*> <*> <*> ,5
<*> <*> <*> <*> <*> is not in the enum map, name = <*> ,1
<*> <*> <*> - hexdump(len=<*>): [REMOVED] ,1
<*> XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes <*> <*> ,24
<*> TcpClientThread.connectSocket(TcpClientThread.java:<*>) <*> <*> <*> <*> <*> ,1
color: #<*>; ,1
PFW.HwPFWService:mBroadcastReceiver action = <*> ,4
cancelNotificationLocked:<*>|com.sankuai.meituan|<*>|null|<*> ,3
setRestrictBackgroundLocked(): false ,5
ImsSenderRxr : <*> = true type = <*> <*> = <*> <*> <*> <*> ,2
becomeActiveLocked, reason = <*> ,6
handleNotifyWakingUp ,7
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> ,15
<*> <*> = -<*> ,6
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_OpenFile => <*> ,14
Skipping, withExcluded: false, tr.intent:Intent { <*> <*> (has extras) } ,1
<*> <*> user=UserHandle{<*>} id=<*> tag=null key=<*>|com.huawei.health|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 <*> <*> <*> <*> <*> <*> ,2
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,1
<*> updateGroupList <*> move high <*> <*> ,1
<*> = true ,11
removeNotificationViews:<*>|com.android.incallui|<*>|null|<*> ,3
PoiDetailActivity_resume_android.os.BinderProxy@11c0b0e ,1
BadgeContentObserver getBadgeNumber: <*> mComponentName <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,130
cleanUpApplicationRecord -- <*> ,14
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,14
at android.content.ContentProvider.enforceReadPermissionInner(ContentProvider.java:<*>) ,2
Action: BatChange ,3
[ReceiverUtils.resumeLogUpload]resumeSend ,1
WatchThread{<*>} TcpClientThread.connect(TcpClientThread.java:<*>) will connect to uc.huawei.com:<*> ,12
sendMessage <*> ,43
setClipY <*> ,2
AppLogManager onCreate ,2
Get no-perm notification callback <*> ,2
stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*> ,15
CFG_DIRS length : <*> ,17
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,10
wlan0: Control <*> <*> <*> <*> ,1
acquire lock=<*>, flags=0x1, tag="*launch*", name=android, ws=WorkSource{<*>}, uid=<*>, pid=<*> ,9
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> id = <*> <*> <*> <*> <*> <*> ,2
handleDreamLocked ,17
platform_set_parameters: enter: - <*> ,3
<*> <*> <*> <*> mMaxValue=<*>, mMinValue=<*> ,3
trim and enqueue <*> <*> <*> <*> <*> ,6
mLogUploadInfo.getUploadErrCode(): ,1
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) <*> <*> <*> ,12
updateDisplayLocked: screenOn=false ,5
reset finish ,1
<*> <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*> ,1
refreshState=sound, RingModeState[,icon=null,label=null,labelTint=<*>,textChangedDelay=<*>,contentDescription=null,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=null,expandedAccessibilityClassName=null,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=false,mode=<*>] ,1
acquire lock=<*>, flags=0x1, <*> name=android, ws=null, uid=<*>, pid=<*> ,33
[CloudAlbumService] onBind ,1
onAcquired(<*>) ,11
<*> <*> device policy manager service. ,1
<*> msg = <*> received ,4
write:userId=<*>,mPosBrightness =<*>.<*>,mOffsetBrightness_last=<*>.<*>,mIsUserChange=false,mDeltaNew=<*>.<*>,mStartLuxDefaultBrightness=<*>.133335mLastLuxDefaultBrightness=<*>.<*>,mAmLux=<*>.<*> ,1
pool-<*>-thread-<*>{<*>} BaseBroadcast.sendBroadcast(BaseBroadcast.java:<*>) no <*> <*> <*> ,3
onNotificationPosted: StatusBarNotification(pkg=com.huawei.health user=UserHandle{<*>} id=<*> tag=null key=<*>|com.huawei.health|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*> ,62
PFW.HwPFWService:handle PFW_MSG_WAKEUP_TIMER ,2
report state:<*> event type:<*> pid:<*> uid:<*> pkg:null to pid: <*> ,34
Model onReceive user=UserHandle{<*>} ,16
LEAVE_OFFICE_REMINDER schedule ,1
collectReceiverComponents, callerApp: null, <*> receiver size:<*>, flags: <*> ,2
SND -> {<*> <*> <*> <*> <*> <*> ,4
queryIntentActivitiesAsUser size results:<*>, for <*> ,9
chinaDateTime:早上<*>:<*> ,13
<*> mBroadcastReceiver <*> ,1
<*> byte = <*> <*> <*> <*> <*> <*> <*> is <*> ,4
<*> <*> <*> is not <*> <*> <*> <*> ,5
APS brightness=<*>.<*>,ConvertToPercentage=NaN ,5
[UploadReceiver.doRun] sizeLimit=<*> ,1
mAmbientLuxValid=true,mWakeupFromSleep= false ,4
bh1745-light <*> <*> <*> <*> ms ,1
msg.recv{<*>} XmlMsg.decodeBuf(XmlMsg.java:<*>) RECV <*> bytes <*> <*> ,45
Reporting <*> <*> <*> <*> <*> <*> ,3
autohasloglist<*> ,2
<*> <*> <*> <*> <*> format <*>, channelMask <*>, flags <*> ,3
nz/Ctg/Kzmg0NppyjEl1fudEIGvS4jEskPmhCae01TyBl/gt8CPr5T+rTvADPbocxgHmIDzcn8gg ,1
HoldService:checkBeforeShowDialogWithPid, current <*> <*> <*> ,2
[UploadProgressUtils.queryProcessUploadItems]start ,1
<*> byte = <*>, <*> <*> ,1
setOccluded false ,1
WifiScanGenie handleWiFiDisconnected ,2
Split enqueueing broadcast [callerApp]:ProcessRecord{4ff57fc <*>:com.qualcomm.qcrilmsgtunnel/<*>} ,14
cancelNotificationLocked:<*>|com.android.mms|<*>|null|<*> ,1
start_output_stream: pcm_prepare ,1
<*> <*> pid: <*> is <*> <*> pid: <*> ,3
Display ready! ,14
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,3
at java.net.SocketInputStream.read(SocketInputStream.java:<*>) ,1
<*> <*> <*> <*> found in <*> <*> ,1
<*> <*> = <*> <*> = <*> ,5
checkNeedLivenessList:start ,3
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:true activityOut:false isRoaming:false ,8
check perfhub service fail! ,4
at com.android.providers.telephony.TelephonyProvider.query(TelephonyProvider.java:<*>) ,2
Destroying surface <*> called by com.android.server.wm.WindowStateAnimator.destroySurface:<*> com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:<*> com.android.server.wm.WindowState.removeLocked:<*> com.android.server.wm.WindowManagerService.removeWindowInnerLocked:<*> com.android.server.wm.WindowManagerService.removeWindowInnerLocked:<*> com.android.server.wm.WindowManagerService.removeWindowLocked:<*> com.android.server.wm.WindowManagerService.removeWindowLocked:<*> com.android.server.wm.WindowManagerService.removeWindow:<*> ,1
wifi_send_command: cmd:'IFNAME=wlan0 PKTCNT_POLL' ,4
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) disconnected ,7
MagicLink2-BroadcastReceiver:====>NETWORK_STATE_CHANGED_ACTION ,5
<*> <*> reason = <*> ,10
<*> typeIcon:<*> <*> isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> failed to <*> <*> <*> <*> ,1
<*> <*> <*> of type <*> for Event <*>, with Raise=<*> ,1
<*> peeking: <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> id is [<*>],ack id is [<*>]! ,1
Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:<*> android.content.ContextWrapper.sendBroadcast:<*> ah.onReceive:<*> f.run:<*> android.os.Handler.handleCallback:<*> ,1
<*> <*> <*> <*> <*> --> <*> <*> = false ,1
<*> surface <*> called by com.android.server.wm.WindowStateAnimator.destroySurface:<*> com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:<*> <*> <*> <*> <*> <*> <*> ,1
monitorWifiNetworkState: stopped. ,1
<*> <*> ==================== TCP CLIENT CONNECT [<*>] ==================== ,2
AwareAppMngSort: <*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*> ,5
Finished business... ,15
<*> <*> <*> <*> <*> <*> = <*> <*> <*> <*> ,1
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4GPLUS),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,2
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,2
<*> <*> disconnecting to uc.huawei.com:<*> ,1
<*> <*> com.android.phone broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,1
mrc_cg_NiceFood_ippUnInitialize In! ,1
isSimPinSecure mSimDatas is null or empty ,34
<*> <*> android broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,12
<*> byte = <*> <*> <*> byte = <*> ,1
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) <*> <*> <*> <*> ,3
setSystemUiVisibility vis=<*> mask=ffffffff <*> <*> <*> ,1
<*>-<*> <*>:<*>:<*><浏览器>[com.android.browser]:[query]读取浏览器历史 ,9
<*> <*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> <*> <*> = <*> ,3
isCurrentBySim()=false ,905
search ,17
<*> <*> <*> <*> <*> <*> (has extras) } ,7
U3u67ywNm5ghfI8chYDb99teA82Kx7vEAoxkh6UtZfyFPb97Ut7D0+u8MevKzfaMgO+7dE6/lDYQ ,1
select_devices: done ,7
<*> cmd:'IFNAME=wlan0 <*> <*> <*> ,1
Launcher onStop() ,1
updateChargingLocked: charging=false ,11
ChargingSpeed Wattage: <*> ST: <*> --> <*> ,8
bssid=<*>:d3:8d:c6:c7:<*>;freq=<*>;level=<*>;flags=<*>;ssid=WirelessAP; ,1
acquire lock=<*>, flags=0x1, tag="hibernation", name=com.huawei.powergenie, ws=null, uid=<*>, pid=<*> ,10
presently, hw_update_color_temp_for_rg_led interface not achieved. ,339
<*> <*> = <*>-<*>-<*> <*>:<*>:<*> <*> = <*>-<*>-<*> <*>:<*>:<*> ,3
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,5
<*> <*> <*> target=com.android.internal.util.StateMachine$SmHandler } ,1
ois_process: OIS_GET_VIBRATE_STATUS ,5
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> is <*> ,9
<MCT >< INFO> <*>: <*> <*> <*> <*> <*> <*> <*> ,1
Received TIME_TICK alarm; rescheduling ,2
unproxy app:com.android.gallery3d,uid:<*>,result:true ,1
frz ok, pid: [<*>, <*>, <*> ,1
Watch Thread{<*>} LoginC.doWatch(LoginC.java:<*>) Login_By_Step-> watch <*> <*> <*> <*> ,1
set navBarVisible ,2
icon : com.baidu.input_huawei found in app ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,8
<*> TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) <*> <*> <*> <*> ,1
<*> <*> <*> #<*> A=com.huawei.android.launcher U=<*> StackId=<*> sz=<*>}, <*> <*> #<*> A=com.tencent.mm U=<*> StackId=<*> sz=<*>}, <*> #<*> A=com.tencent.mm U=<*> StackId=<*> sz=<*>} ,1
<*> <*> <*> home data home 中国移动 中国移动 <*> 中国移动 中国移动 <*> <*> <*> <*> not supported <*> <*> RoamInd=<*> DefRoamInd=<*> EmergOnly=false IsDataRoamingFromRegistration=false ,1
Cannot call determinedVisibility() - never saw a connection for the pid: <*> ,294
RCV <- {<*> <*> <*> <*> ,3
onReceive, action:android.net.wifi.STATE_CHANGE ,10
[SocketRead_<*>:<*>:<*>-<*>]isSupportCtrlSocketV2, ctrlSocket(android/null:<*>) ,4
KGSvcCall onScreenTurningOn. ,5
[INFO:CONSOLE(<*>)] "Uncaught ReferenceError: WebViewJavascriptBridge is not defined", source: (<*>) ,271
[virtual void android::MediaPlayer::notify(int, int, int, const android::Parcel *)] : [<*>] <*> <*> <*> <*> ,2
Classify cgroup warning: No such process ,3
<*> void <*> uint32_t, const <*> void *) line <*> <*> ,1
https request. ,2
<*> code = <*> ,2
chinaDateTime:凌晨<*>:<*> ,1
at com.android.server.am.ActivityManagerService.finishReceiver(ActivityManagerService.java:<*>) ,1
key: nsp-callback ,1
read Events lux: <*>.<*> ,18
audio_extn_fbsp_set_parameters: Speaker protection disabled ,17
<*> <*> <*> <*> ......ID <*>,<*>-<*>,<*> <*> <*> ,3
<*> <*> <*> <*> <*> not supported <*> ,5
<*>|calculateCaloriesWithCache totalCalories=<*> ,15
getNextIndex: <*>; from <*> to <*>; size: <*> ,33
create: <*> ,65
<*> = <*> <*> = <*> <*> = <*> <*> = <*> ,1
Skipping, withExcluded: false, tr.intent:Intent { <*> <*> <*> <*> <*> (has extras) } ,6
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> <*> <*> ,26
Welcome_destroy_tokennull ,1
<*> <*> <*> <*> <*> to <*> ,1
RCV <- {<*> <*> <*> <*> <*> <*> ,11
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,9
Split enqueueing broadcast [callerApp]:ProcessRecord{<*> <*>:com.baidu.input_huawei/u0a74} ,5
font-size: 13px; ,1
fpc_tac_send_set_arbitrary_data_cmd:ok, response:<*> ,3
<*> <*> <*> void *, int, int, <*> char *, <*> <*> <*> <*> = <*>, <*> <*> <*> width = <*>, height = <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,1
<*> - hexdump(len=<*>): <*> <*> <*> <*> <*> 6f <*> <*> ,1
contentRanger[<*>,<*>] ,1
<*> <*> called by <*> V.ED..... ........ <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, <*> <*> <*> ,5
<*> <*> <*> <*> <*> <*> <*> to uc.huawei.com:<*> ,1
c: true, w: false, t: false, l: false ,219
dispatch ordered broadcast [background] <*> <*> <*> has <*> receivers ,81
handleNotifyScreenTurnedOff ,8
handleTimeUpdate ,19
<*> pid = <*>, <*> = <*> ,1
Moving <*> <*> <*> <*> <*> <*> <*> <*> <*> ,3
<*> <*> <*> = <*>, <*> = <*>, <*> = <*>, <*> <*> <*> <*> <*> <*> <*> <*> ,2
action:com.tencent.mm.plugin.report.service.KVCommCrossProcessReceiver, mPermissionType:<*> ,11
NormalTrafficAnalysis:alert byte = <*>, <*> <*> ,4
at com.huawei.keyguard.util.BitmapUtils.getColorInfo(BitmapUtils.java:<*>) ,4
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,5
[enter]handleLteMobileDataStateChange type=<*>,subType=<*> ,1
Model onReceive <*> { act=android.intent.action.TIME_TICK flg=0x50000014 (has extras) } ,4
WPS: attr type=0x1024 len=<*> ,45
out_standby: exit ,5
<*> <*> <*> due to <*> <*> <*> <*> ,1
Handler Thread:com.huawei.lcagent.service.LogTrack ,1
DisconnectedState enter ,1
Setting HAL interactive mode to <*> ,3
<*> <*> <*> <*> = <*>, <*> = false, <*> = false ,5
[ReceiverDispatcher-<*>]isSupportsMultipleUsers: true(android/null:<*>) ,2
<*> screen off <*> ,1
wlan0: Control interface command <*> <*> ,10
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true <*> activityIn:false activityOut:false isRoaming:false ,5
<*> action = android.intent.action.SCREEN_ON ,2
getCurRoamingState ,2
onEntryUpdated:<*>|com.android.browser|<*>|null|<*> ,5
<*> <*> <*> <*> when=<*> what=<*> <*> <*> <*> <*> ,1
c id:<*> ,1
proxyBroadcast:[com.tencent.mm] proxy:false ,3
updateLight --> mIsNotificationExisting: false ledOnMS: <*> ledOffMS :<*> ,5
action:com.android.huawei.broadcast.HwRepairHelper, mPermissionType:<*> ,3
<*> <*> <*> <*> <*> *, int, int, <*> <*> <*> <*> = <*> ,2
[PullNotificationBase.onPollNotification]Start ,1
<*> <*> <*> <*> <*> <*> <*> pid=<*> ,3
<*> type is null or <*> <*> <*> <*> <*> <*> ,2
BSS: last_scan_res_used=<*>/<*> ,4
[UploadReceiver.onReceive] preNetStatus=-<*> ,1
Calling a method in the system process without a qualified user: android.app.ContextImpl.sendBroadcast:<*> <*> <*> <*> <*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x2,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,4
back light level before map = <*> ,44
<*> freq=<*> qual=<*> noise=<*>~ level=<*> <*> flags=0xb age=<*> est=<*> ,2
collectReceiverComponents, callerApp: <*> <*> intent:null, receiver size:<*>, flags: <*> ,1
adev_set_parameters: exit with code(<*>) ,3
current cell id is not monitor ..... cellid = <*> ,9
<*> <*> <*> <*> <*> <*> <*> <*> <*> line <*> <*> ,4
getSleepData false ,1
<*> <*> <*> <*> <*> <*> int, int, <*> <*> <*> <*> <*> ,1
handleOverSize() ,1
Pid:<*> deleteTrackName(<*>) ,5
<*> off notificationLight ,4
<*> took <*> ms ,7
<*> <*> <*> <*> <*> <*> <*> <*> uid <*> <*> display <*> ,1
ActivityThread,attachApplication ,17
uploadLocationAction:actionType:0actionMsg:PROVIDER:all,PN:com.sankuai.meituan,HC:9e2a79f ,1
Launcher.LauncherProvider launcher call - <*> <*> <*> <*> <*> pid =<*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Send <*> <*> <*> <*> <*> <*> <*> <*> ,6
DisplayPowerController updatePowerState mPendingRequestLocked=policy=BRIGHT, <*> useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, <*> <*> screenAutoBrightness=<*>, userId=<*> ,1
mActiveIface: null ,7
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:<*>) ,1
at com.android.phone.PhoneInterfaceManager.enforceFineOrCoarseLocationPermission(PhoneInterfaceManager.java:<*>) ,1
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch thread onLoop...--》 iWatched.doWatch() ,45
<*> <*> XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes <*> <*> ,3
<*> HAL <*> mode to <*> ,1
RCV <- {<*> IfaceClass <*> <*> <*>} ,1
<*> <*> <*> <*> is <*> ,9
CommonWebViewActivity_resume_tokennull ,1
APS: 2DSDR: <*> <*> SDR ratio <*> <*> <*> <*> <*> <*> <*> = <*>, height = <*> ,3
<*> <*> <*> *, void *, int, int, int) <*> ,5
<*> <*> <*> pid: <*>, uid: <*>, <*> <*> <*> <*> <*> <*> <*> ,1
<*>|standStepCounter report <*> steps,write fe ,3
<*> <*> <*>, uid: <*>, pid: <*> ,7
<*> <*> <*> <*> <*> <*> <*> <*> ,412
<*> <*> <*> uid: <*>, <*> <*> ,1
nspFileMd58ee110d7c4c3f42a328f6090d6665b6f ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FileSec: <*> <*> <*> id = <*> ,5
PFW.HwPFWAppRestartPolicy:receive action = android.intent.action.SCREEN_ON ,1
<*> <*> <*> due to <*> <*> <*> ,8
transitionTo:mode=<*>, isEmuiStyle=false ,48
<*>-<*>-<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
FingerprintDaemonProxyEx::setLivenessSwitch ,2
PowerManagerNotifier onWakefulnessChangeStarted: wakefulness=<*>, reason=<*>, <*> <*> <*> ,4
ret: <*> ,5
isCardAbsent slot:<*> slotState:<*> ,156
<*> <*> <*> IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> ,1
updateClipping isOverlap:true ,46
C onScreenOff ,3
<*> <*> <*> <*> = false, <*> = false, <*> <*> <*> <*> <*> <*> <*> = false ,1
Beacon IEs - hexdump(len=<*>): <*> 0f <*> <*> <*> <*> <*> <*> 2d <*> 6d <*> 6c 6f <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> 0d <*> <*> ... ,1
[getprop, ro.product.cpu.abi] ,1
ImsSenderRxr : isValid = true type = <*> status = <*> userdata = null[SUB0] ,1
ClientMonitor destroy ,1
<*> <*> <*> <*> = false <*> = <*> <*> <*> <*> <*> = false ,1
POSITION_COLLECTOR schedule ,2
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*> ,1
Error reading charge file ,114
------------startInput-------------- ,29
RCV <- {<*> <*> <*> <*> <*> ,30
action:android.search.action.SEARCHABLES_CHANGED, mPermissionType:<*> ,1
<*> <*> <*> rebatching ,3
<*> connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4GPLUS),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*> ,1
qLpt8blgG/z37GQqKu/9CXiCaMxJ/3gFCM7BAQZsb2Q/Nyhm4dS7XVqXvQoDK2rjfBHxS+tJ6wOS ,1
<*>|upDateHealthNotification()|<*>|<*>|<*> ,2
<*> <*> <*> <*> to <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:KeySpace : getkey <*> not null ,3
初始化 ,2
<*> <*> <*> stream <*>, <*> <*> <*> <*> <*> <*> <*> <*> ,5
<*> app record <*> <*> ,4
isSystemBootComplete =true ,6
PreferenceHelper:lastAlarmTime: <*> ,1
action:com.huawei.android.action.WEATHER_CHANGE, mPermissionType:<*> ,5
<*> Process <*> <*> <*> <*> euid: <*> ,1
<*> Control interface command <*> ,1
EventHub monitor: no key events in the past <*> <*> <*> events in the past <*> ,7
<*> <*> <*> <*> <*> ms ,1
restoreBackgroundColor:new=<*>, old=<*> ,10
Calling fingersense_on_pause() ,3
disable: <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,5
obtain, mHwFlags=<*> ,77
stepLightIdleStateLocked: mLightState=<*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:libcSeekFile => fseek[<*>]:[<*>][<*>][EA60465C] ,3
fingersense_classify_touch() finished ,133
InputDispatcher::monitor frozen check! ,16
<*> <*> <*> <*> to true ,2
at com.huawei.logupload.state.StateMachine$SmHandler.processMsg(StateMachine.java:<*>) ,1
cancelNotificationLocked,remove =com.tencent.mm ,3
CubicBezierInterpolator mControlPoint1x = <*>.<*>, mControlPoint1y = <*>.<*>, mControlPoint2x = <*>.<*>, mControlPoint2y = <*>.<*> ,67
[qiyi_LOG_INFO DownloadEpisodeAdapter] loadImage ,7
Alarm triggering (type <*> or <*>): <*> type <*> when <*> <*> <*> type <*> when <*> android}] ,1
<*> <*> <*> <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,1
<*> <*> <*> <*> manager service. ,1
mKeyguardDelegate.ShowListener.onDrawn. ,3
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, <*> ,7
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_Tree_Enc_Path <*> <*> <*> <*> ok ,2
<*> <*> <*> <*> ms ,2
[CheckFaultTreeVersionTask.doInBackground.httpCallback]onSuccess! ,1
CityActivity_destroy_android.os.BinderProxy@9dd2b1c ,1
bssid=c8:3a:<*>:3a:<*>:<*>;freq=<*>;level=<*>;flags=<*>;ssid=鸿运住宿一楼; ,1
<*> read from <*> <*> <*> <*> = <*> ,1
"workday":[<*>,<*>,<*>,<*>,<*>,<*>], ,2
WatchThread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown output: java.net.SocketException: Socket is not <*> ,1
<*> <*> <*> <*> <*> U=<*> StackId=<*> <*> <*> <*> ,1
onReceive: action = <*> ,8
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => <*> <*> <*> ,4
Background partial concurrent mark sweep GC freed <*> AllocSpace objects, <*> LOS objects, <*>% free, <*> <*> <*> <*> <*> ,2
mManualbrightnessOut=<*>,mManualMode=false ,2
RCV unsolicited event from native daemon, event = <*> <*> <*> <*> <*> ,8
updateBarBgColor:emuiStyle=<*>,statusBarColor=#FFFCFCFC,navigationBarColor=#FFFCFCFC, isEmuiLight=<*> ,1
cancelNotificationWithTag pid <*>,uid = <*>,tag = null,pkg <*> <*> ,8
[LogSendProgressReceiver.onReceive]Start! ,4
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x10,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,5
<*> <*> = <*>, <*> = <*>, <*> <*> <*> = <*> ,1
<*> <*> <*> = <*> <*> = <*> <*> = <*> ,9
<*> <*> <*> <*> = false, <*> <*> <*> <*> = <*>, <*> = <*>, delta = <*>, mScrnOffAccTime = <*>, mScrnOnAccTime = <*> ,1
at com.huawei.keyguard.support.magazine.MagazineWallpaper$BgPicLoader$<*>.run(MagazineWallpaper.java:<*>) ,4
disable: < expand <*> <*> <*> <*> <*> <*> clock navigationbar <*> quick_settings <*> ,1
APS: 2DSDR: <*> SDR ratio = <*>.<*>, <*> height = <*>, <*> <*> height = <*> ,6
<*> <*> pid: <*> is depended by pid: <*> ,2
load icon id : <*> pkgName : com.baidu.input_huawei ,1
<*> <*> = null <*> = <*> ,1
<*> <*> <*> <*> <*> <*> app:id/msim_status_bar_operators_card_one_id} ,3
PowerHandler msg.what:<*> ,3
DynamicUpdater call updateFolder ,8
Cancelling event due to no window focus: KeyEvent { action=ACTION_UP, keyCode=KEYCODE_BACK, scanCode=<*>, metaState=<*>, flags=0x68, hwFlags=0x3, repeatCount=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x101 } ,1
handleShow ,3
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,2
<*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> 2d <*> 6d <*> 6c 6f <*> <*> <*> ,1
at com.huawei.ecs.mip.proxy.TcpSocket.connect(TcpSocket.java:<*>) ,3
<*> <*> <*> = <*>, <*> = false, <*> = <*>, <*> = false ,1
<*> <*> = <*>, <*> <*> <*> <*> <*> <*> ,1
SystemManagerApplication:onCreate ,1
DisplayPowerController updatePowerState <*> useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,2
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> <*> <*> <*> ,8
sending alarm <*> type <*> when <*> android},repeatInterval = <*>,listenerTag =time_tick ,11
action:android.net.wifi.CONFIGURED_NETWORKS_CHANGE, mPermissionType:<*> ,1
onEntryUpdated:<*>|com.sankuai.meituan|<*>|null|<*> ,1
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 vis=PRIVATE)) ,1
<*> = false, <*> = false, <*> = true, <*> = true, <*> = true, <*> = true, <*> = false ,1
Apply window <*> <*> ,9
<*> <*> <*> <*> z_offset=<*>.<*> ,4
======onPolling end===== ,1
<*> <*> pluggedType: <*> ,6
<*> device policy manager service. ,3
<*> <*> <*> <*> <*> --> <*> ,7
Setting HAL auto-suspend mode to false ,2
<*> <*> is null <*> <*> <*> <*> <*> <*> <*> ,1
SearchActivity_restart_android.os.BinderProxy@d090c7e ,1
<*> <*> <*> <*> <*> <*> is <*> <*> ,1
WifiMonitor:wlan0 cnt=<*> dispatchEvent: <*> <*> <*> <*> ,1
action:wifi_scan_available, mPermissionType:<*> ,1
PstnIncomingCallNotifier: handleNewRingingConnection ,1
mIntentReceiver-ACTION_SCREEN_ON ,4
onBindView linkPlus = true, detailedState = null, noInternet = false, noHandover = false, reason = <*>, <*> ,2
onEntryAdded:<*>|com.huawei.health|<*>|null|<*>, group=<*>|com.huawei.health|<*>|null|<*> ,73
Calling a method in the system process without a qualified user: <*> <*> <*> <*> <*> ,16
<*> flg=0x0, <*> <*> ws=null, uid=<*>, pid=<*> ,1
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) <*> <*> <*> <*> ,4
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> = <*> ,6
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,14
gkeeHWIFLqFW3iw87TlL78sm5VELz2dUUE3MjaUFFHS7dYo1MKiJ8DMGvwmVabriNk3xoYQF6old ,1
obtain, mHwFlags=-<*> ,12
<*> <*> <*> <*>-<*>-<*> <*>:<*>:<*> <*> <*> <*>-<*>-<*> <*>:<*>:<*> ,2
Canceling vibration. ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> type is <*> ,2
Split enqueueing broadcast [callerApp]:ProcessRecord{34bf34f <*>:system/<*>} ,61
List [] ,3
<*> output <*>, stream <*>, <*> <*> ,5
c: true, w: <*> t: false, l: false ,6
<*> <*> = true <*> = false ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> pid: <*> ,13
sending:{"handlerName":"getRegisteredJsHandler","callbackId":"java_cb_<*>","data":null} ,275
summary = null ,2
onProposedRotationChanged, rotation=<*> ,20
action:android.intent.action.SERVICE_STATE, mPermissionType:<*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> ,1
QOS_level:<*>(<*>),use RTTLvl:<*>;RATLvl:<*> ,14
[ReceiverUtils.disposeLogUploadProgress] ,1
cancelNotificationLocked:<*>|com.tencent.mm|<*>|null|<*> ,2
Skipping, home stack task: TaskRecord{37babfb #<*> A=com.huawei.android.launcher U=<*> StackId=<*> sz=<*>} ,5
BadgeContentObserver getBadgeNumber: <*> mComponentName :ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI} ,10
load icon id : <*> <*> <*> <*> ,2
<*> <*> = <*> , <*> = <*> , <*> <*> = <*> <*> ,1
|CORE| CNE received unexpected action: android.intent.action.BATTERY_CHANGED ,6
APS: 2DSDR: <*> <*> <*> <*> SDR ratio ,3
<*> <*> <*> <*> <*> <*> [<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
mIsEffect:true ,1
get AllImpl object = com.android.server.wifi.HwWifiServiceFactoryImpl@c<*> ,25
Provider.call: getPrefString ,14
handleKeyguardDoneDrawing ,1
ACDB -> <*> <*> <*> <*> <*> <*> <*> ,2
readRilMessage: Buffer = [B@204bb9f HexData = <*> ,6
Application com.tencent.mm is im app and connected ok, delay to H! ,3
bssid=c8:3a:<*>:4b:c9:<*>;freq=<*>;level=<*>;flags=<*>;ssid=Tenda_4BC990; ,2
ProximitySensor, enable, <*>: mEnabled=<*> ,1
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4GPLUS),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x23,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,5
at com.dianping.nvnetwork.o.a(NVGlobalConfig.java:<*>) ,2
at com.huawei.ecs.mip.proxy.TcpClientThread.connectSocket(TcpClientThread.java:<*>) ,4
java.lang.InterruptedException ,1
action:com.tencent.mm.ui.ACTION_ACTIVE, mPermissionType:<*> ,17
getCurrentCellid type is PHONE_TYPE_GSM ,4
<*> <*> V.ED..... ......ID <*>,<*>-<*>,<*> <*> <*> ,9
ClassLoader referenced <*> <*> <*> ,1
<*> <*> <*> Intent { <*> <*> <*> <*> <*> <*> <*> <*> <*> due to <*> <*> <*> <*> <*> <*> <*> <*> ,2
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:<*>) ,7
total/<*>/<*>,android.uid.system:<*>/<*>/<*>,unknown:<*>/<*>/<*> ,1
Invalid profile no. <*>, total profiles <*> only ,68
[DaemonReceiver] onReceive ,1
Client requesting input be <*> <*> ,3
<*> <*> <*> <*> <*> * <*> <*> do not <*> ,1
<*> <*> <*> <*> <*> size is <*> <*> ,5
<*> <*> <*> <*> : false <*> : false <*> <*> <*> <*> <*> <*> ,3
ACDB -> <*> <*> <*> ,3
[SdcardManager.isMounted]Path:/storage/emulated/<*> ,27
<*> <*> <<< ERROR(<*>) >>> <*> <*> <*> <*> <*> ,1
CtrlSocket Receiver,disable: <*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
<*> is not <*> <*> <*> <*> ,1
SimCardManager:onReceive()-- mNameServSlot<*> ,4
<*> <*> <*> <*> <*> <*> = false ,1
<*> <*> <*> <*> <*> <*> <*> <*> is <*> <*> <*> ,1
getCSubChrVolteStatisticCategory enter. ,3
<*> <*> = <*>.<*>, <*> = <*>.<*>, <*> = <*>.<*>, <*> = <*>.<*> ,3
mLogUploadInfo.getLogDetailInfo():[{},{},{}] ,1
closeQs ,6
fingersense_on_resume() finished ,5
write <*> failed ,3
WPS: attr type=0x1042 len=<*> ,18
[main-<*>]/checkVersionPackageType/(hwouc/HwOucUtility.java:<*>) ,2
E/Calling gnss_sv_status_cb ,1
cancel alarm. ,6
ImsSenderRxr : <*> <*> <*> ,7
<*> <*> <*> <*> <*> <*> actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,4
bright trace:<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*> ,3
[SmsProvider.update]修改短信数据 ,1
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*> ,1
<*>|logicalDealBroadcastEvent : Intent { <*> <*> (has extras) } ,3
updateLightsLocked --> <*> <*> <*> <*> ,1
[main-<*>]Network available(hwouc/DownloadReceiver.java:<*>) ,3
Create obj success use class android.app.HwCustNotificationImpl ,243
<*> uid = <*> <*> = <*> ,4
DisplayPowerStatesetColorFadeLevel: level=<*>.0967255E-<*> ,5
t=<*>,BT=<*>,DT=<*>,BT1=<*>,DT1=<*>,Bn=false,Dn=false,lx=[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>],mLx=<*>.<*>,s=<*>.<*>,ss=<*>.<*>,AuIntervened=false,mProximityState=false,bLux=<*>.<*>,dLux=<*>.<*>,bLux1=<*>.<*>,dLux1=<*>.<*> ,155
enter ~MakeupLibLoader() ,1
<*> <*> V.ED..... ........ <*>,<*>-<*>,<*> #7f1401be app:id/battery_outside_percent} ,2
<*> <*> = true, <*> <*> <*> <*> = false, <*> = false, reason = <*>, <*> ,5
resetStateLocked ,1
notifyDatasetChanged ,2
read from oem info: <*> <*> z_offset=<*>.<*> ,1
android.content.pm.PackageManager$NameNotFoundException: com.sankuai.meituan ,1
<*> <*> <*> <*> <*> = <*>, <*> = <*>, <*> = <*> ,1
<*> <*> <*> pid:<*> uid:<*> ,7
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
Calling a method in the system process without a <*> <*> <*> <*> <*> <*> <*> ,5
<*> to device policy manager service. ,1
Create obj success use class com.android.settings.deviceinfo.HwCustStatusImpl ,24
onEntryUpdated:<*>|com.tencent.mm|<*>|null|<*> ,3
Destroying TransactionService ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Send <*> <*> <*> <*> <*> ,3
<*> onDataActivity: direction=<*> ,4
<*> <*> <*> <*> <*> <*> euid: <*> ,13
<*> <*> <*> of type <*> <*> <*> <*> <*> <*> ,6
<*> temp_new :<*> temp_old :<*> ,11
receive:android.net.wifi.STATE_CHANGE ,8
RefreshBatteryInfo isBatteryLow: <*> ,14
setBackgroundColor:new=<*>, old=-<*> ,2
RCV <- {<*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
DefaultState what=<*> ,24
WifiMonitor:wlan0 <*> <*> <*> <*> <*> <*> <*> ,1
updateLightsLocked,mInCall <*> = true,ledNotification == null?true ,3
<*> <*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null <*> defaults=0x0 flags=0x2 color=0x00000000 <*> <*> <*> ,2
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*>-<*> <*> ,2
<*> <*> <*> delay to <*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Set local private IP is:[<*>.<*>.<*>.<*>] ,5
QOS_level:<*>(<*>),DataDisable;use level-<*> ,5
Broadcasting intent ACTION_RAC_CHANGED ,44
at android.content.ContentResolver.query(ContentResolver.java:<*>) ,1
Launcher.Folder childCount: <*> ,25
action:android.os.action.POWER_SAVE_TEMP_WHITELIST_CHANGED, mPermissionType:<*> ,1
dispatch ordered <*> <*> <*> <*> <*> <*> <*> receivers ,1
ImsSenderRxr : <*> data: [<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>][SUB0] ,1
. ,4
<*> <*> <*> <*> <*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> <*> 0f <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
statusLineopenresty ,1
</head> ,1
I/===> int <*> <*> <*> <*> line <*> ,1
SND -> <*> <*> <*> ,1
<*> <*> <*> = <*>, <*> <*> <*> ,1
<*> <*> <*> policy manager service. ,2
report state:<*> event type:<*> <*> <*> <*> <*> pid: <*> ,4
Destroying surface <*> called by com.android.server.wm.WindowStateAnimator.destroySurface:<*> com.android.server.wm.WindowStateAnimator.destroySurfaceLocked:<*> <*> <*> <*> <*> <*> <*> ,7
<*> <*> rt=<*>/<*> <*> <*> ,57
<*> count: <*> ,2
HDebug print <*> <*> <*> ,4
cancelNotificationLocked:<*>|com.android.incallui|<*>|null|<*> ,3
Releasing suspend blocker "PowerManagerService.Display". ,2
batch:sensor(android.sensor.accelerometer) sample_rate=<*>.000000Hz report_rate_f=<*>.000000Hz curr sample rate:<*>.<*> cur rpt rate:<*> max:<*>.<*> min:<*>.<*> ,1
gettimer:interval=<*> ,20
Releasing suspend blocker <*> ,3
at android.database.sqlite.SQLiteDatabase.openInner(SQLiteDatabase.java:<*>) ,4
Alarm triggering (type <*> or <*>): <*> type <*> when <*> <*> ,3
acquire lock=<*>, flags=0x1, <*> <*> <*> ws=null, uid=<*>, pid=<*> ,3
[StoreProgressUtils.startUploadPollingTask] ,1
<*> <*> <*> <*> <*> is null ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> is null or <*> <*> <*> <*> <*> <*> <*> is null or <*> <*> <*> <*> <*> <*> <*> ,5
<*> <*> = <*> <*> <*> <*> <*> <*> <*> is <*> ,2
<*> <*> <*> <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*> <*> <*> ,1
<*> TcpSocket.close(TcpSocket.java:<*>) shutdown input: java.net.SocketException: Socket is not <*> ,1
<*> <*> <*> <*> <*> win Window{e6a6b5e u0 com.android.incallui/com.android.incallui.InCallActivity} ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> mode to <*> ,7
scheduleAlarmLocked(<*>, false) ,10
ImsServiceSub : <*> <*> <*> <*> <*> = <*> ,3
[CheckNewVersionThread-<*>]isMtkGeminiSupport false(hwouc/MultiCardFactory.java:<*>) ,1
kwMUBOsvqvOFnngv4FlvK28DzZrY3xUFLX4xWQ5CG5/u2a5EbSERYW4BX3ZAw+vYinWB3a3UA0Bi ,1
<*> do not <*> is not <*> <*> ,1
* akm=0xfac<*> ,1
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> <*> typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> CAPABILITY_CANNOT_DOWNGRADE_VIDEO_TO_AUDIO], children:[], parent:null, conferenceable:[], videoState:Audio Only, mSessionModificationState:<*>, VideoSettings:(CameraDir:<*>)] ,1
Skipping, withExcluded: false, tr.intent:Intent { act=android.intent.action.VIEW <*> typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) } ,8
fingerprintd ,2
<*> <*> <*> startService}}) changed bounds; rebatching ,2
[CheckVersionService.checkVersionOnBackground]Start ,1
syncCalendar begin! ,3
[UploadReceiver.onReceive] msg<*> ,1
readRilMessage: Buffer = [B@204bb9f <*> <*> <*> ,5
<*> <*> <*> <*> not supported <*> ,2
<*>-<*>-<*> <*>:<*>:<*>.<*> T:<*> <*> <*> <*> <*> <*>, <*>, <*> ,1
msg = <*> received ,89
Uploader ,1
[HME_JPEG_DEC_Delete](<*>): HME_JPEG_DEC_Delete: decoder_ctx=null ,336
tcp.recv{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown output: java.net.SocketException: Socket is closed ,1
<*> <*> <*> <*> <*> <*> <*> <*> Intent { <*> <*> (has extras) } ,1
Enqueueing ordered <*> <*> <*> <*> prev had <*> ,28
hideKeyguard:false ,2
release:lock=<*>, flg=0x0, tag="hibernation", name=com.huawei.powergenie", ws=null, uid=<*>, pid=<*> ,9
<*> <*> = <*> <*> ,10
LeisureTrafficSetting:result is empty ,3
<*> <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*> ,3
clearEffects :<*>|com.tencent.mm|<*>|null|<*> ,1
<*>|REPORT : <*> <*> <*> <*> ,66
RCV <- {<*> <*> <*> ,5
<*> <*> <*> <*> state = <*> ,4
WifiMonitor:wlan0 cnt=<*> dispatchEvent: <*> <*> <*> <*> <*> ,2
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 <*> isTypeIconWide:true showActivity:true <*> <*> <*> ,2
[main-<*>]initTopActivityList.(/HwOucConfig.java:<*>) ,1
<*> <*> do not <*> <*> <*> ,1
expand: false ,1
<*> <*> <*> ms <*> <*> <*> <*> <*> <*> <*> <*> ,1
PowerManagerNotifier onWakefulnessChangeStarted: <*> <*> <*> <*> <*> ,3
<*> <*> <*> disconnecting to <*> ,1
reSetWifiInternetState ,1
updateLightsLocked --> <*> <*> ,3
<*> <*> <*> <*> - hexdump(len=<*>): [REMOVED] ,1
<*> <*> <*> <*> <*> is not in the <*> <*> <*> <*> <*> ,6
New <*> <*> <*> <*> <*> <*> <*> ,5
updateBarBgColor ,7
<*> <*> <*> <*> <*> <*> uid = <*>, <*> = <*> ,3
handleANRFilterFIFO,uid = <*> = <*> ,24
<*> <*> <*> <*> <*> <*> rebatching ,2
state = <*> ,1
updateBluetooth:::setBluetoothBatteryEnable false. ,10
notifyUiVisibilityChanged:vis=0x0, SystemUiVisibility=0x<*> ,2
onScreenTurnedOn ,3
WatchThread{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown output: java.net.SocketException: Socket is closed ,3
<*> <*> state = <*>, <*> <*> <*> <*> = <*>, <*> <*> = <*>, <*> <*> <*> <*> = <*> ,2
getNeighboringCellInfo calling app is com.amap.android.ams ,7
<*> <*> [<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,1
<*> <*> <*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,2
<*> <*> <*> <*> <*> due to <*> <*> ,1
<*> <*> = <*>, <*> = <*> ,20
Sending non-protected broadcast <*> from system <*> <*> <*> <*> ,9
ImsServiceSub : type = <*> status = <*> <*> = true ,5
PFW.HwPFWAppRestartPolicy:receive action = android.intent.action.SCREEN_OFF ,1
void android::HwAlgorithmicInformation::setSmartAeInfo(int, <*> <*> <*> <*> = <*>, <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> 0x<*> ,2
read from <*> <*> <*> <*> <*> ,2
<*> <*> <*> = <*> pid = <*> ,1
<*> <*> <*> in the <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,5
<*> attr <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,106
addNotification key=<*>|com.qiyi.video|<*>|null|<*> ,1
<*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,4
<*>|calculateAltitudeWithCache datas.size=<*> ,16
<*> <*> <*> <*> <*> home data home 中国移动 中国移动 <*> 中国移动 中国移动 <*> <*> <*> <*> not supported <*> <*> RoamInd=<*> DefRoamInd=<*> <*> <*> <*> ,3
enableDefaultTypeAPN= false ,1
syncCalendar end! ,2
<*> <*> <*> <*> rtt_tcp_packets=<*>, rtt_tcp_duration=<*>, rtt_lan_duration=<*>, rtt_lan_failures=<*>, rtt_lan_succ=<*>, rtt_lan_max=<*>, rtt_lan_min=<*>,same_area_frequency=<*>,adjacent_area_frequency=<*>] ,3
to: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,15
<*> <*> <*> type <*> when <*> <*> <*> <*> <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:KeySpace : <*> <*> <*> <*> ,1
[LogUploadService.onCreate] ,3
ACTION_BATTERY_CHANGED pluggedType: <*> ,8
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) <*> <*> <*> <*> <*> <*> <*> to <*> ,1
notifyListenerHuawei::origin typeIcon:<*> icons.mName:4G isSuspend:false, showDataIcon=true, dataConnected=true, isRoaming=false ,113
[msg_type] <*> ,1
<*> <*> = <*>, <*> = <*>, <*> <*> <*> = <*>, <*> = <*>, <*> = <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:svn_closeAll <*> ,5
Application com.huawei.espacev2 is im app and connected ok, delay to H! ,2
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,2
unproxy app:com.huawei.camera,uid:<*>,result:true ,1
triggerUpdateAPInfo ,1
updateBarBgColor:emuiStyle=<*>,statusBarColor=#FF303135,navigationBarColor=#FF000000, isEmuiLight=-<*> ,1
getProcessInfo: failed to find this proc ,8
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] is abandoned for memory <*> <*> <*> <*> can not <*> ,1
<*> <*> <*> #<*> A=com.tencent.mm U=<*> StackId=<*> sz=<*>} ,1
<*> <*> <*> <*> bytes <*> <*> ,16
KGSvcCall onScreenTurnedOn. ,8
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = false, <*> = false, <*> = false ,1
<*> <*> <*> [<*>, <*>] ,4
CloudRecordGetCfgInfoRspNotify leave ,3
dispatch ordered broadcast [bgkeyapp] <*> <*> <*> has <*> receivers ,11
<*> PendingIntentRecord{3c38496 android broadcastIntent}}) changed bounds; rebatching ,7
removeNotification:<*>|com.android.incallui|<*>|null|<*> ,5
action:action.huawei.PHONE_AUDIO_MODE, mPermissionType:<*> ,2
[FeedbackService.resumeIssueMaker.run] End ,1
keyAppBroadcastQueueForIntent intent Intent { flg=0x10 cmp=com.tencent.mm/.booter.NotifyReceiver (has extras) } on bgkeyapp queue ,1
37ivnjbjkDabN1xPvK6JoLQKDj2loKXQhGNEBCVpNMjIxBESO1CVYe5+YRK0L1vt8t93aaWZgFWa ,1
HoldService:PHONE_CODE_PERMISSION is allowed . <*> <*> <*> ,1
<*> <*> <*> temp_old :<*> ,5
postEventFromNative: msg=<*>,arg1=<*>,arg2=<*> ,67
at com.huawei.service.login.LoginC$LoginThread.doinLoop(LoginC.java:<*>) ,1
[CheckNewVersionThread-<*>]FeatureOption.MTK_GEMINI_SUPPORT Exception(hwouc/MultiCardFactory.java:<*>) ,1
cause :<*> ,1
proxyWakeLockByPidUid, pid: <*>, uid: <*>, proxy: <*> ,5
notifyUiVisibilityChanged:vis=0xc0000300, SystemUiVisibility=0xc<*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:libcOpenFile <*> <*> <*> <*> ,2
isWifiProEvaluatingAP, <*> <*> <*> <*> = null ,2
<*> <*> <*> is not <*> ,2
LISTEN_CELL_LOCATION uid:<*> ,3
onBaseContextAttached: ,1
notifyUiVisibilityChanged:vis=0x8708, SystemUiVisibility=0x<*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> line <*> QMI_LOC_GET_BEST_AVAILABLE_POSITION_REQ_V<*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> ,1
notifyInterfaceClassActivity: client is android.net.INetworkManagementEventObserver$Stub$Proxy@c0acf8b ,31
at com.huawei.android.chr.ProtocolLogManager.addSubCommonBaseParaInfo(ProtocolLogManager.java:<*>) ,3
at com.android.server.pm.Settings.getInstallerPackageNameLPr(Settings.java:<*>) ,1
at com.android.providers.settings.SettingsProvider.call(SettingsProvider.java:<*>) ,1
JIT profile information will not be recorded: profile file does not exits. ,13
<*> <*> <*> is not <*> <*> u0 euid: <*> <*> ,2
load icon <*> <*> <*> <*> <*> <*> ,3
[main-<*>]AutoCheckReceiver onReceive(/AutoCheckReceiver.java:<*>) ,2
apply skiped :<*> ,26
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:WriteSdkGroupItem: hash <*> <*> <*> ,5
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] <*> <*> <*> <*> ,6
Watch Thread{<*>} LoginC.doWatch(LoginC.java:<*>) Login_By_Step-> watch count = <*> ,29
<*> <*> concurrent mark sweep GC freed <*> AllocSpace objects, <*> LOS objects, <*>% free, <*> <*> <*> <*> <*> ,1
<*> <*> mScrnOffAccTime = <*>, mScrnOffAccTime = <*>, mScrnOnAccTime = <*> ,3
remove(null) changed bounds; rebatching ,16
"freeday":[<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>,<*>]} ] ,4
proxyBroadcast:[com.huawei.espacev2] proxy:true ,2
FPSMonitor endScroll ,1
<*> - <*> <*> <*> <*> <*> <*> ,1
<*> callerApp: ProcessRecord{34bf34f <*>:system/<*>}, <*> Intent { <*> <*> <*> (has extras) } ,1
<*> <*> <*> <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
forgetFromUser:netid:<*> ,1
bss->freq (<*>) ,1
Moving <*> <*> <*> <*> <*> <*> <*> <*> ,1
InCallPresenter - <*> <*> <*> <*> <*> ,2
mIsScreenOn is: false, WAKEUP alarm trigger action = <*> package name is: <*> ,2
<*> - <*> <*> = null ,1
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] is abandoned for memory critical <*> <*> policy can not execute ,1
Failure getting entry for 0xffffffff (t=<*> e=<*>) (error <*>) ,24
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> dreaming: <*> <*> <*> ,1
Releasing suspend blocker "PowerManagerService.Broadcasts". ,5
bssid=<*>:bd:5f:6c:7d:7e;freq=<*>;level=<*>;flags=<*>;ssid=<*>; ,1
cryptfs cryptocomplete ,1
<*> <*> does not support <*> <*> <*> ,1
ImsSenderRxr : [UNSL]< UNSOL_SSAC_CHANGED <*> ,24
NormalTrafficAnalysis:alert byte = <*> last alert byte = <*> ,17
[FeedbackService.receiver.onReceive]End ,1
workerFunction STATE_CANCEL ,2
uid:<*> pid:<*> <*> <*> <*> <*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x11,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,6
action:android.location.LOCATION_REQUEST_CHANGE_ACTION, mPermissionType:<*> ,1
InCallPresenter - <*> ,12
refreshState=sound, RingModeState[,icon=com.android.systemui.qs.QSTile$DrawableIcon@8fb5eb0,label=响铃,labelTint=<*>,textChangedDelay=<*>,contentDescription=响铃,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=true,mode=<*>] ,2
Enqueueing ordered broadcast[background] <*> <*> <*> prev had <*> ,73
StatusBarNotifier - <*> notification for <*> <*> ,2
<*> event due to no window focus: <*> <*> <*> actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,1
<*> : <*> ,12
onReceive, action:android.os.action.DEVICE_IDLE_MODE_CHANGED ,1
<*> received <*> <*> <*> false ,1
hw_get_smart_display_supported: end-- ,4
<*> enable, <*>: <*> ,2
<*> <*> does not <*> <*> <*> ,3
retrieveServiceLocked, callerApp: ProcessRecord{2b38b6e <*>:com.huawei.systemmanager:service/<*>}, flags: <*> ,2
Received kernel message payload: event <*> ,60
showLocked ,2
notifyInterfaceClassActivity: client is com.android.server.ConnectivityService$<*>@e0f099c ,39
DisplayPowerState :ON ,5
newUnreadCount:<*>,oldUnreadCount:<*> ,1
setIsExpanded: true ,3
makeExpandedInvisible: mExpandedVisible=false ,1
addFreezeProcess pkg:com.android.browser ,3
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> does not <*> ,9
<*> ok, pid: [<*>, <*>, <*> ,3
<*> TcpClientThread.onRecv(TcpClientThread.java:<*>) tcp connection event <*> ,5
<*> <*> <*> <*> = <*> <*> <*> <*> <*> <*> = <*> ,5
start_output_stream: exit ,5
[HttpClient.postDataWithRetryNoLogin] success ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x11,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,27
AppAutoStartupPolicy:prevent start receiver of package com.netease.newsreader.activity for action android.net.conn.CONNECTIVITY_CHANGE ,4
onTransact in code is: <*> ,16
tmp: nsp-callback=http://logservice.vmall.com/osg/logServerAction!uf.htm?lsId=<*>&st=8GizDMFJTvMVAqA1o8peOOoOnD6yUZIPlgy6gbNIi3M%3D&dsKey=<*>&tblName=<*>&nsp-callback-status=<*>&nsp-file-md5=8ccc2277d7a200c1b4bc6d85150b0e70&nsp-file-size=<*>&nsp-ts=<*> ,1
simCount:<*> phoneState:<*> ,7
action:qualcomm.intent.action.ACTION_AUDIO_STATE_CHANGED, mPermissionType:<*> ,3
<*> <*> <*> <*> : <*> <*> : false <*> : <*> <*> <*> <*> <*> <*> : false ,3
I/===> int ulp_brain_turn_onoff_dr_provider() line <*> ,1
<*> <*> <*> <*> <*> <*> is: <*> ,4
isAdjustVolumeEnable,mEnableAdjustVolume:true ,1
MagicLink2-BroadcastReceiver:====>WIFI_P2P_CONNECTION_CHANGED_ACTION ,1
To broadcast an Intent via the notifier to external apps ,13
<*>|Enter setCurrentDevice(). ,1
<*>|uploadStaticsToDB success ,1
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,2
Application com.baidu.input_huawei is depended by other app, delay to H! ,12
handleProximitySensorEvent positive:false ,2
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:4G isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false ,165
[HttpClient.getDataWithRetryNoLogin] success ,4
iqiyi message: <*> isProcessExist true ,4
writeSummaryFromParcelLocked ,2
iqiyi message: <*> isProcessExist <*> ,1
</title> ,1
<*> what = <*> ,4
JNI_OnLoad->enter(puma) ,1
onServiceStateChanged ,1
<*> <*> <*> <*> <*> <*> <*> = false, <*> = <*>, <*> = <*>, <*> = <*>, mScrnOffAccTime = <*>, mScrnOnAccTime = <*> ,1
[SocketRead_<*>:<*>:<*>-<*>]conetEntity.channelType:ChannelType_Secure(android/null:<*>) ,5
bssid=<*>:<*>:bc:<*>:<*>:e0;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,1
<*> <*> <*> <*> <*> U=<*> StackId=<*> <*> <*> <*> <*> <*> U=<*> StackId=<*> <*> <*> <*> <*> U=<*> StackId=<*> sz=<*>} ,3
<*> <*> action = android.intent.action.SCREEN_ON ,1
<*> <*> output <*> <*> <*> ,1
processLowerBatteryLevel plugged:false batteryLevel:<*> intent:act:android.intent.action.BATTERY_CHANGED flag:<*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*> ,2
at com.huawei.keyguard.support.magazine.KeyguardWallpaper.-wrap4(KeyguardWallpaper.java) ,6
svn_fclose return:<*> ,1
<*> <*> <*> <*> <*> = <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
platform_set_parameters: exit with code(<*>) ,3
<*> <*> <*> <*> events in the past <*> <*> <*> events in the past <*> ,1
AwareMem_DMEServer: stop ,11
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> 6c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 6c <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> ... ,2
remove target not exist, maybe the UI process: uid: <*>, pid: <*> ,3
interpolate:mPosBrightness=<*>.0lux=<*>.<*>,mIsReboot=true,mIsUserChange=false,mDelta=<*>.<*> ,10
frz ok, pid: [<*>, <*>] ,1
<*> <*> <*> : <*> ,27
FingerprintService cancelAuthentication ,1
Create obj success use class <*> ,58
proxy app:com.sankuai.meituan,uid:<*>,result:true ,1
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:<*>) ,2
action:com.android.mms.intent.action.ACTION_NOTIFY_DATASET_CHANGED, mPermissionType:<*> ,1
onEntryUpdated:<*>|com.huawei.health|<*>|null|<*> ,67
<*> <*> Connect to <*> <*> <*> <*> <*> = <*> ,1
setActionsBackground,null == <*> ,4
ImsServiceSub : <*> <*> ,2
at com.google.locate.b.g.a(GoogleHttpClient.java:<*>) ,1
<*> <*> state = <*>, <*> <*> ,2
<*> Speaker protection disabled ,8
<*> <*> <*> <*> <*> <*> = <*>, <*> <*> <*> <*> <*> <*> = <*>, <*> = <*>, <*> = <*> <*> = <*> ,3
WebMonitor [mNetWorkIsSuck=<*> mUIDIsSuck=] WebSpeed [WEBSENDSEGS=<*> WEBRESENDSEGS=<*> WEBRECVSEGS=<*> WEBERRSEGS=<*> WEBOUTRSTS=<*> WEBESTABLISRST=<*> WEBRTTDURATION=<*> WEBRTTSEGS=<*> WEBSRTT=<*> WEBSNDDUPACKS=<*> SENDSEGS=<*> RESENDSEGS=<*> RECVSEGS=<*> ERRSEGS=<*> OUTRSTS=<*> ESTABLISRST=<*> RTTDURATION=<*> RTTSEGS=<*> SNDDUPACKS=<*> suckTimes=<*> recovage_times=<*>] ,1
IEs - hexdump(len=<*>): <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0b <*> <*> <*> <*> 6c <*> <*> 0b 2a <*> <*> <*> <*> ... ,1
stop VERIFY_WITH_NOT_DATA_LINK ,2
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) notify user tcp connected successully at <*> to uc.huawei.com:<*> ,5
<*> <*> <*> <*> is not <*> <*> ,1
ImsSenderRxr : [UNSL]< <*> ,4
<*> <*> is null ,18
<*> <*> = false, <*> = false ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> <*> <*> = <*> ,2
bssid=1c:fa:<*>:c5:7b:ce;freq=<*>;level=<*>;flags=<*>;ssid=TP-LINK_C57BCE; ,4
<title>欢迎登录华为站点 ,1
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) connecting max <*> <*> <*> ,1
ServiceNeeded not bring down <*> u0 euid: <*> <*> ,3
<*> mCount=<*>, mAvgValue=<*>, mMaxValue=<*>, mMinValue=<*> ,1
addFreezeProcess pkg:com.huawei.wallet ,1
[Thermal_Hw] temperature_filter: get invalid temperature, use old temp ,112
<*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
connect :false ,3
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> <*> <*> ,23
sn2Xmae47Iu6LMqeiKfvRf5/TvhT2QojOxGsHwDAp13GF+89bLy6qcRIOb3HWP44uz4dLqDNC4jq ,1
ImsServiceSub : <*> = <*> ,7
VolumeDialogController.Callbacks onStateChanged ,3
<*> <*> rt=<*>/<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,5
action:com.android.imscontection.DISCONNECTED, mPermissionType:<*> ,1
sending alarm <*> type <*> when <*> android},repeatInterval = <*>,listenerTag <*> ,8
<*> <*> <*> found in app ,1
<*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
act:android.intent.action.CONFIGURATION_CHANGED flag:<*> ,1
at com.tencent.mm.model.ak$<*>.a(SourceFile:<*>) ,2
<*>| ## MSG_DEAL_SYSTEM_EVENT android.intent.action.TIME_TICK ,7
<*> <*> <*> disconnecting to uc.huawei.com:<*> ,1
stopInComingMotionsReco ... ,2
<*> need to <*> <*> ,3
<*> <*> <*> <*> is not <*> ,4
<*> mReceivers <*> ,1
AllIdleAppsList updatePackage isCloneApp = false ,2
<*> <*> <*> ,1735
HwPhoneWindowManager has intercept Key : <*>, <*> <*> <*> <*> : <*> ,4
<*> <*> id=<*> notification=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 <*> <*> ,4
<*> <*> <*> <*> <*> <*> screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,2
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) <*> ,4
qsc_decode end ,108
tcp.conn{<*>} XmlMsg.encodeBuf(XmlMsg.java:<*>) SEND <*> bytes <*> <*> ,4
<*> <*> <*> <*> <*> = <*> ,44
nl80211: <*> <*> <*> <*> <*> ,2
AppAutoStartupPolicy:prevent start receiver of package cn.wps.moffice_eng for action android.intent.action.USER_PRESENT ,1
<*> pid = <*>, uid = <*> ,14
<*> <*> <*> <*> <*> dataConnected=true, isRoaming=false ,5
kWhatReset ,2
wlan0: BSS: <*> id <*> BSSID <*> <*> <*> due to <*> ,1
Received Broadcast Intent ACTION_UNSOL_RESPONSE_OEM_HOOK_RAW ,16
StatusBarNotifier - <*> <*> <*> ,8
I/---> locClientSendReq line <*> <*> ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FileSec: have right to open file due to cur app sec level = <*> is higher than file <*> sec level = <*> ,6
<*> <*> <*> <*> <*> <*> <*> type <*> when <*> <*> ,5
refreshState=data, BooleanState[,icon=ResourceIcon[resId=0x7f0201f6],label=移动数据,labelTint=<*>,textChangedDelay=<*>,contentDescription=移动数据,dualLabelContentDescription=null,minimalContentDescription=null,minimalAccessibilityClassName=android.widget.Switch,expandedAccessibilityClassName=android.widget.Switch,autoMirrorDrawable=false,disabledByPolicy=false,enforcedAdmin=null,value=true] ,1
a.size3, b.size<*> ,1
onProcessDied pid = <*>, uid = <*> ,6
[ReceiverUtils.launchNotificationPollService]Start ,1
Launcher onStart() ,4
ActivityManagerService,attachApplication,callingPid = <*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FileSec: write app bundle id = &<*>ߢ[ ,2
<*> <*> <*> OK ! ,17
key: nsp-ts ,1
statusBarIconTint=#B3FFFFFF,navigationBarIconTint=#<*> ,2
<*> <*> <*> <*> <*> <*> - hexdump(len=<*>): [REMOVED] ,1
<*> <*> <*> <*> <*> screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,1
onStartCommand com.huawei.lcagent.UPLOAD_RESULT ,1
<*> TcpSocket.close(TcpSocket.java:<*>) shutdown input: java.net.SocketException: Socket is closed ,3
handleNotifyFinishedGoingToSleep ,4
######### CMD_QUERY_PKTS ######## ,56
isLockScreenDisabled HwKeyguardManagerImpl result = false ,18
JGsSDx/XPjUud2i4cCkjdpm4Ucrqinzvd4JDoBlTrzd+iDCqXTxchPl9Pq1ewG+x0lSdWZZ7xWy<*> ,1
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) <*> <*> <*> ,1
setOverlap mOverlap:true, mDimmed:false ,14
EventHub monitor: no key events in the past <*> no motion events in the past <*> ,5
<*> <*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,16
hRtJSW1Jx2gmY/t9Ksvhrd0wvqej2gAWoZWdB4pnzwaC2uPSmbofSoOHjQe+hD34qJ8GEd1jVlBG ,1
### mPktChkBadCnt=<*> ,4
batch called handle:<*> sample_ns:<*> latency_ns:<*> ,1
action:com.huawei.android.action.launcher_weather_icon_change, mPermissionType:<*> ,10
state is UNREGISTERED ,1
ApStaDisabledState what=<*> ,21
Enqueueing ordered broadcast[foreground] <*> <*> <*> prev had <*> ,19
ITrafficInfo:ITrafficInfo create 301updateBytes = <*> ,10
<*> <*> is depended by <*> <*> delay to H! ,2
offsetBrightness=<*>.<*>,mOffsetBrightness_last44.<*>,lux=<*>.<*>,mPosBrightness=<*>.<*>,mIsUserChange=false,mDelta=<*>.<*>,defaultBrightness=<*>.<*>,mStartLuxDefaultBrightness=<*>.466667mLastLuxDefaultBrightness=<*>.<*> ,1
Connected. ,1
<*> <*> <*> <*> is not in <*> <*> ,1
<*> freq=<*> qual=<*> noise=<*>~ level=<*> <*> <*> age=<*> est=<*> ,2
interceptKeyTq keycode=<*> interactive=true keyguardActive=false <*> <*> <*> <*> <*> ,3
CTRL_IFACE monitor sent successfully to /data/misc/wifi/sockets/wpa_ctrl_<*>-<*>\x<*> ,29
earliestValidTime + POWER_ON_DARKENING_LIGHT_DEBOUNCE ,125
at com.huawei.android.chr.ProtocolLogManager.addAPCommonParaForEvent(ProtocolLogManager.java:<*>) ,1
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:libcSeekFile => <*> ,1
java.io.FileNotFoundException: sys/class/hw_power/charger/charge_data/water_intrused (No such file or directory) ,99
eap_proxy: eap_proxy_allowed_method ,2
AppAutoStartupPolicy:prevent start receiver of package <*> <*> <*> <*> ,1
FpPerformance onFingerAuthenticated! ,2
<*> <*> void *, int, int, <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
updateBarBgColor:emuiStyle=<*>,statusBarColor=#<*>,navigationBarColor=#<*>, isEmuiLight=<*> ,3
<*> <*> <*> callList=com.android.incallui.CallList@86c7f<*> ,1
<*> <*> mode = <*> <*> = <*> ,1
<*> <*> <*> <*> <*> (<*> * <*> * <*> * <*> <*> <*> <*> <*> (<*> * <*> * <*> * <*>) day ,1
@@@@@@@@@@@@ uid :<*> download <*> ,4
[Thread-<*>-<*>]isAllFirmwareInstallingStatus(hwouc/HwOucUtility.java:<*>) ,1
DeviceStateListener:MyCityChanged: true ,7
<*>|compensate received ,107
Call: getSubId <*> is <*>: <*> ,1
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x2b,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,3
<*>-<*>-<*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
ash->screen on ,8
isMusicActive... ,64
<*>|before compensate: cache step_<*> ,73
Creating TransactionService ,1
loadFileCache... ,1
at com.huawei.ecs.mip.proxy.TcpSocket.onConnectSocket(TcpSocket.java:<*>) ,1
<*> <*> <*> code(<*>) ,5
battery changed pluggedType: <*> ,3
addSensor,mHandles:{<*>=<*>} ,3
<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>, ,1
action=android.intent.action.PACKAGE_RESTARTED queryReplace=false ,2
collectReceiverComponents, callerApp: ProcessRecord{34bf34f <*>:system/<*>}, <*> receiver size:<*>, flags: <*> ,7
onAuthenticated(fid=<*>, gid=<*>) ,3
begin of formatChinaDateRange chinaDate:早上<*>:<*> ,4
<*> <*> = false, <*> = false, <*> = <*> ,4
addNotification key=<*>|com.android.incallui|<*>|null|<*> ,3
<*> <*> <*> <*> =<*> ,5
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> } ,1
shouldBlockLocation running ... ,193
InCallPresenter - <*> <*> ,5
<*> = <*>, <*> = <*> ,2
<*> <*> <*> true by win Window{e6a6b5e u0 com.android.incallui/com.android.incallui.InCallActivity} ,1
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, <*> <*> <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> IEs - hexdump(len=<*>): <*> 0f <*> <*> <*> <*> <*> <*> 2d <*> 6d <*> 6c 6f <*> <*> <*> <*> <*> <*> <*> 0b <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> ... ,2
loadMagazine ,6
ACDB -> <*> ,61
action:huawei.intent.action.IMS_SERVICE_STATE_CHANGED, mPermissionType:<*> ,4
pa2240-proximity calling driver setDelay <*> ms ,3
Get no-perm notification callback android.intent.action.SCREEN_OFF ,1
No peeking: not <*> <*> <*> ,7
bssid=<*>:<*>:bc:0a:f9:<*>;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,1
updateLightsLocked,turn off notificationLight ,7
at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:<*>) ,9
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, int) <*> <*> ,4
CTRL_IFACE: Failed to get network variable <*> ,4
sendResultBroadcast policy:null ,1
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,15
Handle message: <*> ,54
start expired. level:-<*> ,10
bssid=<*>:<*>:bc:0b:2b:e0;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,1
Change in state from: <*> <*> ,28
removeNotificationChildren ,127
readRilMessage: Buffer = [B@204bb9f HexData = [010000000404000011000000514f454d484f4f4bfa0308000100000000] ,9
bssid=<*>:<*>:bc:0b:<*>:<*>;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,6
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> is not <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,5
<*> <*> id is not <*> <*> cellid = <*> ,1
ignore <*> <*> <*> <*> <*> time:<*> ,1
onDataActivity: direction=<*> ,185
<*> <*> = <*> ,119
statusBarIconTint=#B3000000,navigationBarIconTint=#<*> ,3
operator:<*> ,2
<*> <*> <*> <*> <*> <*> <*> = <*> <*> = <*> ,5
<*> <*> : false ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> tunnel <*> <*> <*> <*> <*> ,3
<*> onDismissRequested reason = <*> ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,46
actionId=<*> ,1
[main-<*>]isInstallingStatus(/HwOucUtility.java:<*>) ,1
iqiyi message: ==== do something executeCmd isProcessExist true ===== ,14
send_cmd_kernel: cmd=<*> ,68
<*> <*> <*> <*> type <*> <*> <*> <*> <*> <*> <*> ,1
RCV <- {<*> <*> <*>} ,1
<*> <*> <*> <*> <*> <*> <*> delay to H! ,3
<*> <*> <*> mMaxValue=<*>, mMinValue=<*> ,2
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_show_<*>_5G_for_mcc ,129
tcp.recv{<*>} TcpClientThread.readSocket(TcpClientThread.java:<*>) <<< ERROR(<*>) >>> socket read length failure -<*> ,4
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_TreatFolderEncEx => [START]: pcFileName [<*>_<*>.log] ,4
at com.dianping.nvnetwork.i.a(NVGlobal.java:<*>) ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ActivityRecord{5f12a6a u0 com.tencent.mm/.ui.LauncherUI <*> ,1
<*> <*> user=UserHandle{<*>} id=<*> tag=null key=<*>|com.huawei.health|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 <*> <*> <*> when=<*>, vis=<*>, userid=<*> ,2
updateTcpSummery mRSSI:<*> HwCHRWifiRSSIGroup [rssi_index=<*>, rtt_tcp_packets=<*>, rtt_tcp_duration=<*>, rtt_lan_duration=<*>, rtt_lan_failures=<*>, rtt_lan_succ=<*>, rtt_lan_max=<*>, rtt_lan_min=<*>,same_area_frequency=<*>,adjacent_area_frequency=<*>] ,3
isBetaStrategy ,2
release:lock=<*>, flg=0x0, tag="RILJ_ACK_WL", name=com.android.phone", ws=null, uid=<*>, pid=<*> ,59
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,1
<*> <*> <*> stream <*>, <*> <*> format <*>, channelMask <*>, flags <*> ,1
ImsServiceSub : <*> = <*> <*> = <*> <*> = true ,1
<*> <*> <*> uid: <*>, pid: <*> ,4
mFilterMsgFlag: <*>,msg.arg1: <*> ,3
<*> [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] <*> [mMasterNetWorkType=<*>, mSlaveNetWorkType=<*>, mMasterNetWorkLevel=<*>, mSlaveNetWorkLevel=<*>, mDataState=<*>, mDataActivity=<*>, mDataNetType=<*>] ,2
received broadcast android.intent.action.TIME_TICK ,12
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) <*> ,13
IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> 6c <*> <*> <*> <*> <*> <*> <*> <*> <*> 8b <*> <*> <*> <*> 6c <*> <*> <*> 2a <*> <*> <*> <*> 0c <*> ... ,1
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:<*>) ,1
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) TCP Msg 659TCP_OK ,2
{"status":"<*>"}(/HttpCommunicator.java:<*>) ,2
LfbQT1UiIQfWV1AIiNSJ1MEn8ph2W+K47aYZU/mO8qAp7JAflMTwEQKbZ3PS9AHTd6Z2kSVNZsv<*> ,1
getContactInfoForSelf ,1
[RouteService.onStartCommand] ,6
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Switch tunnel mode to <*> ,1
<*> <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,7
bssid=5c:<*>:bf:7f:2a:5c;freq=<*>;level=<*>;flags=<*>;ssid=MERCURY_7F2A5C; ,1
keyAppBroadcastQueueForIntent intent Intent { <*> <*> (has extras) } on bgkeyapp queue ,29
at android.media.MediaPlayer.postEventFromNative(MediaPlayer.java:<*>) ,1
reN6C0v9S9BNg3rDQYYA6eG+PLxzLgqKJKhUlBZgc345ryQfDUC5Olb05p9d1ZU22W+QcAsr5x<*> ,1
<*> <*> <*> <*> : <*> repeating : false interval : <*> trigger : <*>-<*>-<*> <*>:<*>:<*> isMissed : false ,1
onReceive ,1
addFreezeProcess pkg:com.tencent.mm ,2
release:lock=<*>, flg=0x0, tag="WakerLock:<*>", name=com.tencent.mm", ws=null, uid=<*>, pid=<*> ,14
<*> = false, <*> = false, <*> = false, <*> <*> <*> <*> = false, <*> = false, <*> <*> <*> ,1
<*> <*> is abandoned for <*> <*> <*> <*> ,1
<*> Branch : ,2
<*> <*> is not <*> <*> <*> <*> <*> <*> ,3
SND -> {<*> <*> <*> <*> ,7
<*> <*> - hexdump(len=<*>): [REMOVED] ,20
Response ID <*> is not served in this process. ,4
<*> - hexdump(len=<*>): [REMOVED] ,5
fpc_tac_begin_identify---need_liveness_authentication: <*> ,5
<*> intent:act:android.intent.action.BATTERY_CHANGED flag:<*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*> ,1
startAllModules ,1
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) <*> <*> ,8
<*> <*> <*> <*> <*> <*> <*> = false, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*>, <*> = <*> ,1
c: <*> <*> <*> <*> <*> l: false ,3
pool-<*>-thread-<*>{<*>} <*>.doInBackground(TupHelper.java:<*>) <*> <*> <*> ,5
Ignore update <*> <*> false ,3
<*> <*> <*> <*> - hexdump(len=<*>): <*> <*> <*> 0f <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
Watch Thread{<*>} <*> <*> ,3
New app record <*> <*> <*> <*> <*> ,3
kzallO397cR7UGK9pLlA4CKfMqLVX+BV9/4pKN1gC6ccM2q4r+dOK7qzkwog7v7o1ONx3VkvVx2a ,1
wlan0: Control interface command 'BSS RANGE=<*>- MASK=0x3029d87' ,13
getRecentTasks: topActivity=ComponentInfo{com.sankuai.meituanhd/com.meituan.android.base.ui.CommonWebViewActivity} ,2
<*> changed bounds; rebatching ,2
<*> <*>:<*>:<*>> <*> SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> <*> such file or <*> ,1
Failure getting entry for <*> (t=<*> e=<*>) (error <*>) ,1
[ReceiverDispatcher-<*>]resetBastet(android/null:<*>) ,2
wlan0: Control interface command 'SIGNAL_POLL' ,10
nspContentRange0-<*>/<*> ,2
notifyInterfaceClassActivity: client is android.net.INetworkManagementEventObserver$Stub$Proxy@af<*> ,42
[UserPresentReceiver.onReceive]Start! ,4
<*> <*> <*> <*> <*> <*> ms ,3
<*>|after compensate: cache step_<*> ,88
sending alarm <*> type <*> when <*> <*> = <*>,listenerTag <*> ,1
[StartupguideUtils.isBeta]is beta=false ,3
at android.support.v4.content.al.call(ModernAsyncTask.java:<*>) ,1
<*> <*> <*> <*> <*> in the <*> <*> <*> <*> <*> in the <*> <*> ,3
bssid=<*>:eb:<*>:e4:<*>:3e;freq=<*>;level=<*>;flags=<*>;ssid=NO; ,1
random_mix_pool - hexdump(len=<*>): [REMOVED] ,40
StatusBarNotifier - <*> <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 <*> <*> publicVersion=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
Sending non-protected broadcast <*> from system <*> pkg <*> ,1
<*> <*> <*> <*> <*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*> ,2
wlan0: Control interface command <*> <*> <*> ,19
WPS: attr type=0x103c len=<*> ,31
<*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> ,1
parsed ip:<*> ,2
Got set_interactive hint ,2
SND -> {<*> <*> <*> <*> <*> ,1
<*> <*> #<*> A=com.tencent.mm U=<*> StackId=<*> sz=<*>} ,1
<*> proc <*> <*> <*> <*> ,1
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4G),activityIn=false,activityOut=false,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,25
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> ,83
start requestStepResult ,1
ACTION_USB_PORT_CHANGED arrived! ,1
No config file found for:/themes/diff/icons ,21
MyOrientationListener: updateRotation. ,26
isDisplayFeatureSupported feature:<*> ,6
<*> enter for <*> = <*> ,1
NetworkSelectionStatus NETWORK_SELECTION_ENABLED ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
update HiddenSpaceData! ,1
VideoCallFragment - <*> ,1
.handleEvent().received action:android.net.wifi.STATE_CHANGE ,1
<*> <*> <*> <*> <*> is <*> ,8
WPS: attr type=0x1054 len=<*> ,36
tcp.recv{<*>} TcpSocket.close(TcpSocket.java:<*>) shutdown input: java.net.SocketException: Socket is closed ,3
<*> <*> size is <*> <*> ,2
APS: 2DSDR: AbsListView.FlingRunnable.run(), SDR ratio = <*>.<*>, layer height = <*>, scroll view height = <*> ,15
id : <*> <*> <*> <*> <*> <*> <*> : false ,1
<*> false false <*> ,1
rotationForOrientationLw(orient=<*>, last=<*>); user=<*> ,20
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,5
getImsPhoneId failed. Exception = org.codeaurora.ims.QtiImsException: ImsService is not running ,4
preNetWorkType:<*>; currentNetWorkType:<*> ,2
loss[<*>]=<*>.<*>%, volume=<*> ,1
<*> <*> broadcast OK ! ,1
tcp.recv{<*>} TcpClientThread.onReceiverWork(TcpClientThread.java:<*>) get tcp message <*> ,45
offsetBrightness=<*>.<*>,mOffsetBrightness_last7.<*>,lux=<*>.<*>,mPosBrightness=<*>.<*>,mIsUserChange=false,mDelta=<*>.<*>,defaultBrightness=<*>.<*>,mStartLuxDefaultBrightness=<*>.04mLastLuxDefaultBrightness=<*>.<*> ,1
<MCT >< <*> <*> <*> <*> ,1
<*> <*> will not <*> ,1
iqiyi message: <*> <*> <*> ,4
<*>-<*>-<*> <*>:<*>:<*>.<*> T:<*> DEBUG: <*> <*> <*> <*> ,1
AutoStartupDataMgr:isUnderControll third party not in whitelist: cn.wps.moffice_eng ,1
interceptKeyBeforeQueueing: key <*> , result : <*> ,3
enter keyguard:<*> ,3
0xcd, 0xb0, 0x24, 0x3e ,3
<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*>,<*>/<*> ,7
release:lock=<*>, flg=0x0, <*> <*> ws=null, uid=<*>, pid=<*> ,41
CtrlSocket restoreScrOnStatus ,6
getSeekBarProgress isAutoMode:true current brightness:<*> <*> ,2
action:org.codeaurora.VOIP_VOPS_SSAC_STATUS, mPermissionType:<*> ,32
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn =hw_mcc_mnc ,146
SND <*> <*> <*> <*> <*> ,1
ImsServiceSubHandler : <*> ,1
<*> <*> <*> <*> <*> <*> is <*> ,6
CtrlSocket Receiver,disable: <*> <*> <*> <*> <*> <*> <*> mStartPowerSaving: false ,1
getOutput() device <*>, stream <*>, samplingRate <*>, format <*>, channelMask <*>, flags <*> ,2
onFinishedGoingToSleep(<*>) ,15
enqueueNotificationInternal: n.getKey = <*>|com.huawei.health|<*>|null|<*> ,59
at android.os.FileUtils.readTextFile(FileUtils.java:<*>) ,93
SearchActivity_resume_android.os.BinderProxy@3f1fd<*> ,1
AwareMem_EventTracker: [POLLING_TIMEOUT_<*>] is abandoned for <*> <*> <*> ,1
getKickTimerByUserType: <*> ,3
<*> when=<*> what=<*> <*> <*> ,3
<*> count = <*> ,3
offsetBrightness=<*>.<*>,mOffsetBrightness_last102.<*>,lux=<*>.<*>,mPosBrightness=<*>.<*>,mIsUserChange=false,mDelta=<*>.<*>,defaultBrightness=<*>.<*>,mStartLuxDefaultBrightness=<*>.04875mLastLuxDefaultBrightness=<*>.<*> ,1
<*> ok, pid: <*> ,1
SearchActivity_stop_android.os.BinderProxy@d090c7e ,1
onStartedWakingUp ,10
setTracingEnabled:<*> ,20
DialpadFragment mBroadcastReceiver action:android.intent.action.SCREEN_ON ,2
hideTraffic ,83
clear mLastAcquireWakelock ,1
Caller checkPermission fail ,18
<*> <*> <*> technology=Li-ion icon-small=<*> max_charging_voltage=<*> health=<*> max_charging_current=<*> status=<*> plugged=<*> present=true charge_counter=<*> level=<*> scale=<*> temperature=<*> voltage=<*> invalid_charger=<*> ,3
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> device <*> ,1
Calling fingersense_on_resume() ,4
at android.os.HandlerThread.run(HandlerThread.java:<*>) ,5
[PushService] stopTryConnectTask ,1
proxyWakeLockByPidUid, pid: <*>, uid: <*>, <*> <*> ,4
Workspace updateCustomizeShortcuts <*> <*> <*> ,1
StatusBarNotifier - <*> ,2
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Switch tunnel mode to [<*>]! ,1
VolumeDialogController.Callbacks onScreenOff ,6
<*> <*> <*> <*> <*> <*> action = null package name <*> <*> ,1
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0c <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
<*> <*> <*> <*> type <*> <*> <*> <*> <*> <*> ,3
<*> <*> mCount=<*>, mAvgValue=<*>, mMaxValue=<*>, mMinValue=<*> ,1
<*> <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*> ,1
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x0,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,11
<MCT >< INFO> <*>: mct_controller_handle_SOF_proc: <*> <*> <*> ,2
<*> <*> <*> ......ID <*>,<*>-<*>,<*> <*> <*> ,3
not in <*> <*> <*> <*> <*> <*> <*> ,9
WPS: WFA subelement id=<*> len=<*> ,32
t:false, fl: false, p: <*>, ce: true, we: true ,4
takeScreenshot cancelPendingScreenshotChordAction ,1
Acquiring suspend blocker "PowerManagerService.Broadcasts". ,6
action:com.example.logupload.progress, mPermissionType:<*> ,1
wifiSleepPolicy:<*> ,11
updateChargingLocked: charging=true ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*>} <*> <*> <*> ,2
at android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(SQLiteDatabase.java:<*>) ,3
offsetBrightness=<*>.<*>,mOffsetBrightness_last26.<*>,lux=<*>.<*>,mPosBrightness=<*>.<*>,mIsUserChange=false,mDelta=<*>.<*>,defaultBrightness=<*>.<*>,mStartLuxDefaultBrightness=<*>.8mLastLuxDefaultBrightness=<*>.<*> ,1
eoizC7+J5yT7Xf7rbHpd052GwSoLxrDYVJEXOYlYNQtnRXe4BW1l70a1Y/p7rwdPmdCC0ZnPL1fz ,1
HsmStat_info:feature enable:true ,2
onFling::not valid gesture or touch plus on, false, return! ,39
<*> <*> <*> <*> == <*> ,1
writeSummaryFromParcelLocked, IType:<*>, mGsmCsCallTimeLen:<*> ,3
NetworkInfo.State.CONNECTED ,1
vh/V5FCr3gWzAYZhyfigeHJNSdKs5pA8+b9yeWJorVUMEhpNKfK3hqk7q7KH8uNdgGzRagaECasJ ,1
org.iqiyi.video.vote.b.aux.a()<<*>> : checkVoteShowTime--><*> ,83
bssid=<*>:<*>:bc:0b:<*>:<*>;freq=<*>;level=<*>;flags=<*>;ssid=wlanaccessv2.<*>; ,5
<*> <*> <*> <*> <*> ,1394
NetworkAgent connected ,4
<*> <*> = <*>.<*>, <*> = <*>.<*>, <*> = <*>.<*>, <*> = <*> ,1
action:android.intent.action.SCREEN_ON, mPermissionType:<*> ,6
<*> <*> ==================== TCP CLIENT <*> <*> <*> ,7
onCallStateChanged: callState:<*> ,1
tcp.conn{<*>} TcpSocket.connect_i(TcpSocket.java:<*>) connecting to ip address uc.huawei.com/<*>.<*>.<*>.<*> ,5
handleANRFilterFIFO,uid = 10105cmd = <*> ,2
<*> <*> - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> 0b <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,1
bmp is null : false ,40
<*> <*> <*> <*> <*> flg=0x50000014 (has extras) } ,2
begin of formatChinaDateRange <*> ,42
Alarm triggering (type <*> or <*>): <*> type <*> when <*> android}] ,3
<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>; ,1
<*> <*> <*> <*> <*> : <*> ,10
flushQueueInfo enter. ,1
<*> <*> <*> pid = <*> uid = <*> ,1
adev_set_parameters: enter: <*> ,3
<*> <*> <*> <*> to uc.huawei.com:<*> ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,3
ImsServiceSub : type = <*> status = <*> isValid = true ,5
key:imsi value:<*> ,1
bssid=<*>:5a:<*>:<*>:bf:c2;freq=<*>;level=<*>;flags=<*>;ssid=FAST_BFC2; ,2
interceptKeyTq keycode=<*> <*> <*> <*> <*> <*> <*> <*> ,2
[UploadRequest.isTaskProcessing] lstUploadInfo.size()=<*> ,1
AutoCleanReceiveServer:receive action:android.intent.action.SCREEN_OFF ,4
MainActivity_pause_android.os.BinderProxy@fc92a<*> ,1
<*> <*> <*> <*> <*> [<*>, <*>] ,1
Returning system default Launcher ,15
<*> <*> <*> <*> = <*>, id = <*> ,2
ImsSenderRxr : <*> = <*> <*> = <*> <*> = <*> <*> <*> <*> ,1
BoostFramework() : mPerf = <*> ,15
mNotifyStateChangedReceiver::onReceive:action=InCallScreenIsForegroundActivity, mBackgroundState=false ,4
disableGps:false isEnabled()=true ,11
proxy app:com.huawei.camera,uid:<*>,result:true ,2
at com.huawei.keyguard.support.magazine.KeyguardWallpaper.updateWallpaper(KeyguardWallpaper.java:<*>) ,3
SleepPolicy:<*> ,7
[<*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>] ,2
<*> <*> state = <*> <*> <*> ,1
getConfigForPhoneId phoneId is invalid ,5
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
int android::IppAlgoSmartAE::doSmartAEAlgo(unsigned char *, void *, int, int, <*> <*> ,7
CollectorManager--isCollectorEnabled--getBoolean: false ,27
<*> <*> <*> false false ,2
<*> <*> <*> <*> is: <*> ,1
TencentAntiVirusEngine:check Finish ,1
proxyBroadcast:[com.huawei.camera] proxy:false ,1
during_ms:<*>,period_ms:<*> ,9
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x2b,uasummary=0x4,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,2
enqueueNotificationInternal: n.getKey = <*> ,12
<*> <*> pid = <*> <*> = <*> <*> = <*> <*> = <*> ,6
[qiyi_LOG_INFO DownloadEpisodeAdapter] <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
The tag is null error! ,16
<*> <*> <*> = <*> <*> ,1
MediaExtractor::CreateFromService (null) ,2
at android.app.ContextImpl.enforce(ContextImpl.java:<*>) ,1
audio_extn_get_parameters: returns ,5
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 typeContentDescription:LTE isTypeIconWide:true showActivity:true activityIn:true activityOut:true isRoaming:false ,13
L7N0bjYXrGNRJQ9dqeZvpjEvqFTUupAzCYsjEjhoW9Ufwyb6WKNVtCNrXsrBh3YQo802m+Sxg+D<*> ,1
StatusBarNotifier - <*> is null ,1
acquire lock=<*>, flags=0x1, tag="NetworkStats", name=android, ws=null, uid=<*>, pid=<*> ,17
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> udp detect response <*> id is [<*>],ack id is [<*>]! ,1
removeFreezeProcess pkg:com.android.browser ,2
connect :true ,12
WatchThread{<*>} TcpCirChannel.connect(TcpCirChannel.java:<*>) Connect to server address = [uc.huawei.com,] port = <*> ,8
LightSensor, enable, <*>: mEnabled=<*> ,8
<*> <*> <*> step_<*> ,5
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) connecting max 30000ms to uc.huawei.com:<*> ,2
msg.recv{<*>} TcpClientThread.onRecv(TcpClientThread.java:<*>) TCP Msg <*> ,34
<*> <*> <*> is not <*> <*> <*> = <*> ,3
at com.android.providers.settings.SettingsProvider.enforceWritePermission(SettingsProvider.java:<*>) ,2
bh1745-light calling driver <*> <*> ms ,2
Moving to PAUSED: ActivityRecord{930e418 u0 com.huawei.android.launcher/.unihome.UniHomeLauncher <*> (pause complete) ,2
<*> <*> = true <*> = true ,3
setRegistedNetwork <*> ,2
<*> <*> <*> <*> <*> <*> <*> <*> = <*> ,11
bssid=d4:ee:<*>:<*>:3b:c6;freq=<*>;level=<*>;flags=<*>;ssid=tianrong2; ,1
no controller energy info supplied ,28
HarassmentInterceptionDBProvider:URL= content://com.huawei.systemmanager.HarassmentInterceptionDBProvider/interception_messages ,2
onEntryRemoved:<*>|com.sankuai.meituan|<*>|null|<*> ,2
update:rxPkts:<*>,txPkts:<*>,rxBytes:<*>,txBytes:<*> ,25
Calling a method in the system process without a qualified user: android.app.ContextImpl.startService:<*> android.content.ContextWrapper.startService:<*> <*> <*> <*> ,8
handleKeyguardDone ,3
key: nsp-file-size ,2
at java.io.FileInputStream.open(Native Method) ,106
<*> addr: <*> {<*>, <*>, <*>} <*>.<*>.<*>.<*> ,1
value: <*> ,4
<*> <*> <*> <*> <*> mBatteryLevel=<*> ,4
reportWifiExceptionLog: <*> ,1
<*> signalStrength=SignalStrength: <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> false gw|lte ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:FSM_Tool_Tree_Enc_Path =>Access [/mnt/sdcard/sandbox/AnyOfficeSDK/sdk/QDJ7lEGuRlJb2r2mqrSExBTDjN4QhUgEPVptBL0HnX4=] real path ok ,5
<*> <*> <*> = <*> <*> <*> ,1
<*> failed to <*> <*> <*> ,8
upload<*> ,2
No peeking: <*> <*> <*> ,4
transitionTo: mode=MODE_TRANSPARENT, animate=false ,29
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:ReadSdkGroupItem: Succeed in fetching group <*> <*> ,10
updateQsState:false ,22
<*> <*> <*> is <*>: <*> ,2
<*> <*> = <*>, <*> <*> <*> ,2
u/LBO7Z2qiSFkLvLf67Xr36N9fjtPDN5hfQ/KUjzJrLN2BKwsDDRmrgKP/1kVoRNoE5UOM3yHyG<*> ,1
action:com.android.server.action.NETWORK_STATS_UPDATED, mPermissionType:<*> ,22
at android.database.sqlite.SQLiteDatabase.open(SQLiteDatabase.java:<*>) ,2
get the task from ActivityManager size is <*> <*> ,5
sendImmediateMessage <*> ,7
NearBy-Service:====>DisabledState ,1
action:android.net.conn.TETHER_STATE_CHANGED, mPermissionType:<*> ,1
[main-<*>]action=android.net.conn.CONNECTIVITY_CHANGE(/AutoCheckReceiver.java:<*>) ,2
LightSensor, enable, <*>: flags=<*> ,5
at android.os.Handler.handleCallback(Handler.java:<*>) ,7
======onPolling start=== ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> id is <*> id is [<*>]! ,2
deleteOverTimeLog ,1
<*> connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4GPLUS),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*>-<*> <*> ,1
[ConnectivityManager-<*>]onAvailable(android/null:<*>) ,1
[PhoneIntfMgr] getDataEnabled: subId=<*> <*> ,13
action:android.intent.action.PRECISE_CALL_STATE, mPermissionType:<*> ,1
<*> <*> <*> stream <*>, <*> <*> ,1
<*> user=UserHandle{<*>} id=<*> tag=null key=<*>|com.sankuai.meituan|<*>|null|<*>: Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 <*> <*> ,1
com.amap.android.ams useCivilNlpPackage ,3
QOS_level:<*>(<*>),use RAT:4G;signalLvl:<*> ,35
registerAudioFocusListener... ,1
AwareMem_DMEServer: start ,2
<*> <*> <*> type <*> <*> <*> <*> <*> <*> <*> ,7
processEventsLocked code=<*> ,1
void android::HwAlgorithmicInformation::setSmartAeInfo(int, int*, SmartAE_EXIF_INFO_t*), <*> = <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
[Binder:<*>_<*>-<*>]BaseSearchIndexProvider()(hwouc/BaseSearchIndexProvider.java:<*>) ,1
received cell-signal:<*> ,222
ContentChange for slot: <*> ,58
<*> <*> do not <*> <*> ,1
Releasing suspend blocker "PowerManagerService.WakeLocks". ,167
getCurrentCellid type is <*> ,5
at com.huawei.keyguard.support.magazine.KeyguardWallpaper$<*>.onMagazinePicLoaded(KeyguardWallpaper.java:<*>) ,4
<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>;<*>,<*>,<*>,<*>,<*>; ,1
ImsSenderRxr : Response data: [<*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>][SUB0] ,2
<*> <*> output <*> ,3
[Utils.lockCreate] <> ,1
<*>|onStandStepChanged <*> ,88
bssid=<*>:f4:<*>:a0:ff:<*>;freq=<*>;level=<*>;flags=<*>;ssid=ChinaNet-eciP; ,1
formatChinaDateTime, change to <*> <*> ,3
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*>]:KeySpace : getkey <*> <*> ,3
HwDPMS received transaction_isHwFrameworkAdminAllowed, the ret: false ,4
WPS: attr type=0x1021 len=<*> ,40
offsetBrightness=<*>.<*>,mOffsetBrightness_last59.<*>,lux=<*>.<*>,mPosBrightness=<*>.<*>,mIsUserChange=false,mDelta=<*>.<*>,defaultBrightness=<*>.<*>,mStartLuxDefaultBrightness=<*>.95333mLastLuxDefaultBrightness=<*>.<*> ,1
NDA_LLADDR received ,1
ImsServiceSubHandler : <*> <*> state is <*> ,3
wifi_send_command: cmd:'IFNAME=wlan0 <*> ,9
Beacon IEs - hexdump(len=<*>): <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ... ,4
<*> <*> screen off <*> <*> <*> ,3
BoostFramework() : <*> <*> <*> ,5
HiWiService onCreate ,1
HwLocalLocationManager requestLocation ,2
Application requested orientation <*>, got rotation <*> which has compatible metrics ,19
ProximitySensor - Proximity wake <*> <*> <*> ,1
shouldDisplay:true|isSimCardPresent:true|supportCallEncryption:true|isChineseVersion:true ,1
tcp.conn{<*>} TcpClientThread.connectSocket(TcpClientThread.java:<*>) <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> ==================== TCP CLIENT CLEAR ALL ==================== ,3
RCV <- {<*> IfaceClass idle <*> <*>} ,34
action:android.net.wifi.supplicant.STATE_CHANGE, mPermissionType:<*> ,2
Access denied finding property "persist.sys.smart_power" ,11
setGateWay <*>.<*>.<*>.<*> ,1
<*>-<*>-<*> <*>:<*>:<*>.<*> T:<*> <*> <*> <*> <*> <*> ,2
DisplayPowerController updatePowerState <*> useProximitySensor=true, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, brightnessWaitRet=true, screenAutoBrightness=<*>, userId=<*> ,3
handleLteCaStatusChange ,26
set(null) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,11
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:idle state change to <*> ,3
status: <*> ,1
WifiMonitor:wlan0 <*> <*> <*> ,2
<*> state change <*> <*> pid = <*> ,1
bssid=<*>:<*>:bc:<*>:<*>:c1;freq=<*>;level=<*>;flags=<*>;ssid=Huawei-Employee; ,1
GenericSource::disconnect end ,1
handledataswitchchanged ,9
<*> <*> data for <*> <*> ,1
<*> <*> <*> noise=<*>~ level=<*> snr=<*> flags=0xb age=<*> est=<*> ,4
GenericSource::disconnect begin ,2
<*> stream <*>, <*> <*> <*> <*> ,2
scheduleWatchdogTimer ,1
chinaDateTime:上午<*>:<*> ,8
PackAutoLog onPrePack ,5
kWhatSetDataSource ,4
WPS: attr type=0x1023 len=<*> ,32
<*> caller <*> does not hold REAL_GET_TASKS; limiting output ,7
onEntryRemovedInternal:<*>|com.android.mms|<*>|null|<*>, group=<*>|com.android.mms|g:group_key_mms ,1
<*> <*> <*> <*> what=<*> target=com.android.internal.util.StateMachine$SmHandler } ,1
<*> true , <*> <*> ,1
Launcher.IconCache, cacheLocked Utilities.createIconBitmap <*> <*> <*> <*> <*> ,1
AwareMem_Kill: updateGroupList package: move high <*> <*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> <*> <*> <*> <*> <*> <*> ,1
at com.huawei.ecs.mip.proxy.TcpSocket.connect_i(TcpSocket.java:<*>) ,2
setChrInfo2Db begin ,1
StaDisabledWithScanState enter. ,1
Get no-perm <*> <*> <*> ,5
transitionTo: mode=MODE_TRANSLUCENT, animate=false ,62
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:l4vpn : l4vpn status is <*> ,1
report state:<*> event type:<*> pid:<*> uid:<*> <*> to pid: <*> ,16
notifyUiVisibilityChanged:vis=0x8, SystemUiVisibility=0x<*> ,1
<*> <*> = <*>, <*> <*> ,3
mDateString is: <*>月<*>日星期日 ,14
onAcquired <*> ,22
Moving to PAUSED: <*> <*> <*> <*> (pause complete) ,3
<*> <*> Intent { <*> <*> (has extras) } ,4
action:android.net.wifi.RSSI_CHANGED, mPermissionType:<*> ,1
<*> state is <*> <*> ,2
ready=false,policy=<*>,wakefulness=<*>,wksummary=0x1,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=true,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,53
onEntryRemovedInternal:<*>|com.qiyi.video|<*>|null|<*>, group=<*>|com.qiyi.video|g:ranker_bundle ,1
<*> <*> <*> not in <*> <*> ,2
t:false, fl: false, p: <*>, ce: true, we: <*> ,7
SearchResultActivity_attached_android.os.BinderProxy@be6c<*> ,1
<*> type is <*> ,1
AutoMode=true,Target=<*>,Current=<*>,amount=<*>.<*>,duration=<*>.<*> ,6
authenticate(sid=<*>, gid=<*>) ,3
isHasPermission true ,2
[FaultTreeWidgets.setOptionCheckedListener]end... ,2
Cancelling event due to no window focus: <*> <*> <*> actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,1
at com.huawei.systemmanager.rainbow.comm.request.AbsRequest.processRequest(AbsRequest.java:<*>) ,3
proxyWakeLockByPidUid, pid: <*>, uid: <*>, proxy: true ,9
action:com.baidu.input.entry.launcer, mPermissionType:<*> ,2
<*> <*> bytes <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
<*> <*> <*> <*> currentFocusWindow: null, currentFocusApp: <*> <*> <*> <*> <*> <*> ,1
</div> ,2
handleTouchEvent:MotionEvent { action=ACTION_UP, actionButton=<*>, id[<*>]=<*>, x[<*>]=<*>.<*>, y[<*>]=<*>.<*>, toolType[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 } ,7
setIsBeingDragged: false ,1
<*> PendingIntentRecord{7f86237 com.huawei.espacev2 broadcastIntent}}) : type=<*> triggerAtTime=<*> win=<*> tElapsed=<*> maxElapsed=<*> interval=<*> flags=0x<*> ,6
KRiPeJU8OYoaXzqXqQI7z+1W9M2JlJzdB0qXf9VlnJGBO2hUQ+kh18tHV9AAVN9zwNaubJ5b0u2Y ,1
doCheckAccessInternet ,4
resetCommute ,7
<*> <*> <*> <*> == null?true ,3
ImsServiceSub : <*> <*> = <*> <*> = <*> status = <*> restrictCause = <*> ,3
svid: <*> cn0: <*>.<*> elev: <*>.<*> azimuth: <*>.<*> A ,16
rtt=<*>,tcp_tx_pkts=<*>,tcp_rx_pkts=<*> ,71
vel=<*>.<*>, MinimumFlingVelocity=<*> ,2
[LogUploadService.onStartCommand] ,2
<*> <*> <*> = <*>, <*> = <*> ,7
MagicLink-BtAndWifiWrapper:====>DefaultState ,1
read from oem info: data_readback ,4
collapsePanel<*> ,10
setMobileDataIndicatorsHuawei subId:<*> visible:true strengthIcon:<*> typeIcon:<*> contentDescription:手机信号满格。 <*> isTypeIconWide:true showActivity:true activityIn:false activityOut:false isRoaming:false ,3
onEntryRemovedInternal:<*>|com.android.browser|<*>|null|<*>, group=<*>|com.android.browser|g:nf_type_<*> ,1
<*> <*> <*> <*> <*> <*> <*> do not <*> <*> <*> ,1
<*> <*> <*> <*> <*> <*> <*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> <*> <*> <*> <*> <*> ,2
<*> <*> called by <*> <*> ......ID <*>,<*>-<*>,<*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
Wait finish ,4
<*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null <*> <*> <*> <*> <*> <*> ,1
<*> <*> action = <*> ,6
<<*>-<*>-<*> <*>:<*>:<*>> [WARN] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[WARN] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,3
handleANRFilterFIFO,uid = 10146cmd = <*> ,48
[DaemonStrategy23] sendBroadcastByAmsBinder ,1
answer call by keyCode = <*>, down = false, isSupVolumnkeyAnswerCall = false ,6
collectReceiverComponents, callerApp: <*> <*> receiver size:<*>, flags: <*> ,13
iqiyi message: <*> <*> <*> <*> <*> <*> <*> ,5
pid = <*> = <*> ,2
action:null, mPermissionType:<*> ,9
<*> :: Data <*> <*> <*> <*> ,2
key:deviceType value:MLA-AL<*> ,1
Sending non-protected broadcast org.codeaurora.VOIP_VOPS_SSAC_STATUS from system <*>:com.android.phone/<*> pkg com.android.phone ,30
<*> <*> <*> <*> V.ED..... ........ <*>,<*>-<*>,<*> <*> <*> ,1
<*> <*> <*> <*> = <*>, <*> = <*> ,18
BadgeContentObserver newBadgeNumber:<*>,oldBadgeNumber:<*> mComponentName : ComponentInfo{com.tencent.mm/com.tencent.mm.ui.LauncherUI} ,2
<*> <*> <*> = <*> <*> = <*> <*> = <*> <*> = <*> ,2
wlan0: Control interface command 'PKTCNT_POLL' ,7
<*> - <*> <*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Send <*> <*> <*> <*> <*> <*> ,2
InCallPresenter - <*> <*> <*> <*> <*> <*> ,2
key: nsp-callback-status ,1
<*> <*> user=UserHandle{<*>} id=<*> tag=null <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x62 color=0x00000000 vis=PRIVATE)) important=<*>, post=<*>, when=<*>, vis=<*>, userid=<*> ,1
checkPathCanWrite:/storage/emulated/<*>/Android/data/com.qiyi.video/files ,1
<*> <*> <*> <*> <*> Intent { <*> <*> ,3
<*> signalStrength=SignalStrength: <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> false gw|lte <*> <*> <*> <*> ,3
Change in state from: connected=true,enabled=true,level=<*>,inetCondition=<*>,iconGroup=IconGroup(4GPLUS),activityIn=true,activityOut=true,rssi=<*>,lastModified=<*>-<*> <*>:<*>:<*>,isRoaming=false,dataSim=true,networkName=中国移动,networkNameData=中国移动,dataConnected=true,isDefault=true,isEmergency=false,airplaneMode=false,carrierNetworkChangeMode=false,userSetup=true ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> : <*>, <*> <*> <*> <*> <*> <*> <*> ,3
sub =<*>,strMccMnc =null,hashMccMnc =[],strPlmn <*> ,40
<*> <*> <*> <*> <*> <*> <*> flags: <*> ,8
<*> <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*>.<*>/<*>, <*> ,3
<*> <*> <*> void *, int, int, const char *, <*> <*> <*> <*> = <*>, <*> <*> <*> width = <*>, height = <*>, <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> = <*> ,1
PairwiseCiphers: ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> id is <*> id is [<*>]! ,1
update_Flag=true,filteredlux=<*>.<*>,time=<*>,nextBTime=<*>,nextDTime=<*>,nextInOutTime=<*> ,1
applyIconTint ,5
applyIconTint ignore ,55
<*> <*> <*> <*> pid: <*> ,2
HiWiService stopself ,2
update_calls: enter: ,1
fpc_cancel ,4
DisplayPowerController updatePowerState mPendingRequestLocked=policy=OFF, useProximitySensor=false, useProximitySensorbyPhone=true, screenBrightness=<*>, screenAutoBrightnessAdjustment=<*>.<*>, brightnessSetByUser=true, useAutoBrightness=true, blockScreenOn=false, lowPowerMode=false, boostScreenBrightness=false, dozeScreenBrightness=<*>, dozeScreenState=UNKNOWN, useTwilight=false, useSmartBacklight=true, brightnessWaitMode=false, <*> screenAutoBrightness=<*>, userId=<*> ,1
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:s(<*>, <*>),r(<*>, <*>)in <*> <*> <*>, <*>), sock(<*>, <*>, <*>, <*>), times(<*>, <*>, <*>, <*>), delay(<*>, <*>)ms, m(<*>, <*>)KB, p:<*>, s:<*>, t(<*>, <*>, <*> <*> u(<*>, <*>, <*> <*> c(<*>, <*>, <*>, <*>), e(<*>, <*>)/(<*>, <*>), k:<*>, d(<*>, <*>), de(<*>), s(online, <*>, <*>), SSL(<*>), UDP(<*>), r_d(<*>), s_d(<*>), c_d(<*>), dur(<*> m), vs(<*>, <*>, <*>), sysFM(<*> KB), ls(<*>, <*>),bypass[<*>]:[<*>] ,17
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
WifiMonitor:wlan0 cnt=<*> dispatchEvent: <*> <*> ,1
Background partial concurrent mark sweep <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
bssid=<*>:<*>:<*>:a3:5d:<*>;freq=<*>;level=<*>;flags=<*>;ssid=KJS; ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> = <*>, <*> <*> ,3
[<*>] Mms_conv ,2
DisplayPowerStatesetColorFadeLevel: level=<*>.<*> ,28
<*> Failed to connect to <*> ,1
<*> ActivityRecord{930e418 u0 com.huawei.android.launcher/.unihome.UniHomeLauncher <*> ,1
<*> <*> <*> rt=<*>/<*> <*> <*> <*> <*> ,1
Sending non-protected broadcast <*> from system <*> <*> <*> ,13
at com.google.locate.b.doInBackground(GoogleLocationClient.java:<*>) ,2
action:android.location.GPS_ENABLED_CHANGE, mPermissionType:<*> ,3
<*> <*> <*> = false <*> <*> ,2
InCallActivity - <*> <*> ,1
mIntentReceiver begin ,20
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x0,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,197
<*> <*> <*> <*> <*> <*> <*> <*> <*> (has extras) } ,1
<*> <*> <*> <*> type <*> for Event <*>, with Raise=<*> ,5
org.iqiyi.video.ui.bf.h()<<*>> : 当前时间<*> ,80
performPollAndLog: ,2
<*> <*> <*> <*> app and connected ok, delay to H! ,3
showSecurityScreen(PIN) ,3
keyguardDone(true) ,1
getRingerMode... ,3
<*> <*> <*> = <*> delta = <*> <*> = <*> ,2
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,23
updateLightsLocked --> level:<*>, status:<*> ,27
chinaDateTime:半夜<*>:<*> ,5
<<*>-<*>-<*> <*>:<*>:<*>> [ERR] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[ERR] magic[<*> <*> <*> ,14
<*> onDataActivity: <*> ,1
onReceive, action:android.net.wifi.p2p.CONNECTION_STATE_CHANGE ,1
</script> ,1
<*> <*> <*> --> <*> <*> ,3
<*> <*> <*> <*> <*> <*> delay to H! ,3
SND -> {<*> bandwidth gettetherstats} ,10
updateSlider1 seekBarProgress:<*> ,65
<*> x_offset:<*>.<*> y_offset:<*>.<*> z_offset:<*>.<*> ,9
isWechatVersionSupport currentVersionCode:<*> ,1
MagicLink2-Binder:====>setReceiveListener:android.instantshare.InstantShareAdapter$<*>@3b33b<*> ,1
<*> :: Data <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,2
<*> package name <*> <*> ,3
<*> <*> <*> <*> <*> <*>} <*>.<*>.<*>.<*> ,5
handleMessage CHECK_FREEZE_SCREEN_MSG ,3
<<*>-<*>-<*> <*>:<*>:<*>> [NOTICE] SDK: UE-SeC <*>-<*>-<*> <*>:<*>:<*>:<*> Level[NOTICE] magic[<*> <*>]:Set <*> <*> <*> <*> ,6
PFW.HwPFWService:mBroadcastReceiver action = android.intent.action.SCREEN_ON ,3
key:zipTime value:<*> ,3
<*> <*> = <*>.<*> ,9
BroadcastReceiver android.intent.action.PACKAGE_REMOVED ,1
<*> state is <*> <*> <*> home data home 中国移动 中国移动 <*> 中国移动 中国移动 <*> <*> <*> <*> not supported <*> <*> RoamInd=<*> DefRoamInd=<*> EmergOnly=false IsDataRoamingFromRegistration=false ,1
updateTint: tint=<*> ,175
removeRequest:com.sankuai.meituan ,1
<*> suspend blocker "PowerManagerService.WakeLocks". ,3
at android.os.UEventObserver$UEventThread.sendEvent(UEventObserver.java:<*>) ,134
BtChrStatisticsManager:sendScreenOnEvent enter. ,2
action:android.net.wifi.supplicant.CONNECTION_CHANGE, mPermissionType:<*> ,1
<*>|MSG_RECORD_DATA_TO_FILE datas.size()=<*> ,18
<*> <*> <*> <*> <*> U=<*> StackId=<*> sz=<*>}, <*> <*> #<*> A=com.huawei.android.launcher U=<*> StackId=<*> sz=<*>}, <*> #<*> A=com.huawei.android.launcher U=<*> StackId=<*> sz=<*>} ,1
at com.huawei.svn.sdk.socket.SvnPlainSocketImpl.connect(SvnPlainSocketImpl.java:<*>) ,1
<*> <*> <*> <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*>, <*> ,1
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,23
ProximitySensor - <*> <*> <*> <*> <*> <*> ,3
[INFO:CONSOLE(<*>)] "Uncaught <*> <*> <*> <*> <*> <*> <*> source: (<*>) ,2
<*> <*> <*> shut down now connect ,2
updateClipping isOverlap:false ,138
loadType:<*> ,3
<*> = false, <*> = <*> ,9
sending alarm <*> type <*> when <*> android},repeatInterval = <*>,listenerTag =null ,12
ACTION_NETWORK_CONDITIONS_MEASURED ,3
@@@@@@@@@@@@ uid :<*> download :true ,5
ambient lux=<*>.<*>,timeStamp =<*> ,32
<*> <*> type is : <*> ,1
MagicLink2-BroadcastReceiver:====>WIFI_STATE_CHANGED_ACTION ,2
Launcher dynamicIconsRegister ,4
<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> Occluded: false; dreaming: <*> <*> <*> ,1
[main-<*>]HwOUCSearchIndexablesProvider onCreate(/HwOUCSearchIndexablesProvider.java:<*>) ,2
addNotification key=<*>|com.sankuai.meituan|<*>|null|<*> ,1
StatusBarNotifier - <*> <*> Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 flags=0x2 color=0x00000000 actions=<*> vis=PRIVATE publicVersion=Notification(pri=<*> contentView=null vibrate=null sound=null defaults=0x0 <*> <*> <*> ,1
at android.content.ContentProvider.query(ContentProvider.java:<*>) ,1
at com.android.server.usb.UsbDeviceManager$<*>.onUEvent(UsbDeviceManager.java:<*>) ,100
<*> <*> type is <*> ,1
setAlarmsAdjust ... ,6
<*> is -<*> ,2
[ReceiverUtils.launchOpenService] ,1
<*>-<*>-<*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> ,1
Watch Thread{<*>} WatchThread.onLoop(WatchThread.java:<*>) watch delay to <*> ,3
ready=true,policy=<*>,wakefulness=<*>,wksummary=0x10,uasummary=0x1,bootcompleted=true,boostinprogress=false,waitmodeenable=false,mode=true,manual=<*>,auto=<*>,adj=<*>.0userId=<*> ,11
<*> = false, <*> = false, <*> = false, <*> = true, <*> = false, <*> = false, <*> = false ,1
